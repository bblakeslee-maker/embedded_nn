// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "b_max.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic b_max::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic b_max::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> b_max::ap_ST_fsm_state1 = "1";
const sc_lv<6> b_max::ap_ST_fsm_state2 = "10";
const sc_lv<6> b_max::ap_ST_fsm_state3 = "100";
const sc_lv<6> b_max::ap_ST_fsm_state4 = "1000";
const sc_lv<6> b_max::ap_ST_fsm_state5 = "10000";
const sc_lv<6> b_max::ap_ST_fsm_state6 = "100000";
const sc_lv<32> b_max::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> b_max::ap_const_lv32_1 = "1";
const sc_lv<32> b_max::ap_const_lv32_2 = "10";
const sc_lv<1> b_max::ap_const_lv1_0 = "0";
const sc_lv<32> b_max::ap_const_lv32_3 = "11";
const sc_lv<32> b_max::ap_const_lv32_4 = "100";
const sc_lv<5> b_max::ap_const_lv5_0 = "00000";
const sc_lv<1> b_max::ap_const_lv1_1 = "1";
const sc_lv<13> b_max::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> b_max::ap_const_lv32_5 = "101";
const sc_lv<3> b_max::ap_const_lv3_0 = "000";
const sc_lv<13> b_max::ap_const_lv13_A8 = "10101000";
const sc_lv<5> b_max::ap_const_lv5_1C = "11100";
const sc_lv<5> b_max::ap_const_lv5_1 = "1";
const sc_lv<3> b_max::ap_const_lv3_6 = "110";
const sc_lv<3> b_max::ap_const_lv3_1 = "1";
const sc_lv<16> b_max::ap_const_lv16_0 = "0000000000000000";
const bool b_max::ap_const_boolean_1 = true;

b_max::b_max(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_116_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_116_p2 );

    SC_METHOD(thread_b_k_2_fu_134_p2);
    sensitive << ( b_k_reg_84 );

    SC_METHOD(thread_b_y0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_98_fu_204_p1 );

    SC_METHOD(thread_b_y0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_c_k_2_fu_180_p2);
    sensitive << ( c_k_reg_95 );

    SC_METHOD(thread_c_k_cast2_fu_170_p1);
    sensitive << ( c_k_reg_95 );

    SC_METHOD(thread_exitcond1_fu_128_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( b_k_reg_84 );

    SC_METHOD(thread_exitcond2_fu_116_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_reg_62 );

    SC_METHOD(thread_exitcond_fu_174_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( c_k_reg_95 );

    SC_METHOD(thread_k_4_fu_122_p2);
    sensitive << ( k_reg_62 );

    SC_METHOD(thread_maxval_address0);
    sensitive << ( tmp_98_reg_261 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_maxval_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_maxval_d0);
    sensitive << ( b_y0_load_reg_271 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_99_fu_209_p2 );

    SC_METHOD(thread_maxval_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_next_mul_fu_110_p2);
    sensitive << ( phi_mul_reg_73 );

    SC_METHOD(thread_p_shl7_cast_fu_160_p1);
    sensitive << ( p_shl7_fu_152_p3 );

    SC_METHOD(thread_p_shl7_fu_152_p3);
    sensitive << ( b_k_reg_84 );

    SC_METHOD(thread_p_shl_cast_fu_148_p1);
    sensitive << ( p_shl_fu_140_p3 );

    SC_METHOD(thread_p_shl_fu_140_p3);
    sensitive << ( b_k_reg_84 );

    SC_METHOD(thread_phi_mul_cast_fu_106_p1);
    sensitive << ( phi_mul_reg_73 );

    SC_METHOD(thread_tmp1_cast_fu_191_p1);
    sensitive << ( tmp1_fu_186_p2 );

    SC_METHOD(thread_tmp1_fu_186_p2);
    sensitive << ( tmp_s_reg_248 );
    sensitive << ( c_k_cast2_fu_170_p1 );

    SC_METHOD(thread_tmp_192_cast_fu_200_p1);
    sensitive << ( tmp_97_fu_195_p2 );

    SC_METHOD(thread_tmp_97_fu_195_p2);
    sensitive << ( phi_mul_cast_reg_222 );
    sensitive << ( tmp1_cast_fu_191_p1 );

    SC_METHOD(thread_tmp_98_fu_204_p1);
    sensitive << ( tmp_192_cast_fu_200_p1 );

    SC_METHOD(thread_tmp_99_fu_209_p2);
    sensitive << ( b_y0_load_reg_271 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_s_fu_164_p2);
    sensitive << ( p_shl_cast_fu_148_p1 );
    sensitive << ( p_shl7_cast_fu_160_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_128_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_174_p2 );
    sensitive << ( exitcond2_fu_116_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "b_max_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, b_y0_address0, "(port)b_y0_address0");
    sc_trace(mVcdFile, b_y0_ce0, "(port)b_y0_ce0");
    sc_trace(mVcdFile, b_y0_q0, "(port)b_y0_q0");
    sc_trace(mVcdFile, maxval_address0, "(port)maxval_address0");
    sc_trace(mVcdFile, maxval_ce0, "(port)maxval_ce0");
    sc_trace(mVcdFile, maxval_we0, "(port)maxval_we0");
    sc_trace(mVcdFile, maxval_d0, "(port)maxval_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, phi_mul_cast_fu_106_p1, "phi_mul_cast_fu_106_p1");
    sc_trace(mVcdFile, phi_mul_cast_reg_222, "phi_mul_cast_reg_222");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_110_p2, "next_mul_fu_110_p2");
    sc_trace(mVcdFile, next_mul_reg_227, "next_mul_reg_227");
    sc_trace(mVcdFile, k_4_fu_122_p2, "k_4_fu_122_p2");
    sc_trace(mVcdFile, k_4_reg_235, "k_4_reg_235");
    sc_trace(mVcdFile, b_k_2_fu_134_p2, "b_k_2_fu_134_p2");
    sc_trace(mVcdFile, b_k_2_reg_243, "b_k_2_reg_243");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_s_fu_164_p2, "tmp_s_fu_164_p2");
    sc_trace(mVcdFile, tmp_s_reg_248, "tmp_s_reg_248");
    sc_trace(mVcdFile, exitcond1_fu_128_p2, "exitcond1_fu_128_p2");
    sc_trace(mVcdFile, c_k_2_fu_180_p2, "c_k_2_fu_180_p2");
    sc_trace(mVcdFile, c_k_2_reg_256, "c_k_2_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_98_fu_204_p1, "tmp_98_fu_204_p1");
    sc_trace(mVcdFile, tmp_98_reg_261, "tmp_98_reg_261");
    sc_trace(mVcdFile, exitcond_fu_174_p2, "exitcond_fu_174_p2");
    sc_trace(mVcdFile, b_y0_load_reg_271, "b_y0_load_reg_271");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, k_reg_62, "k_reg_62");
    sc_trace(mVcdFile, phi_mul_reg_73, "phi_mul_reg_73");
    sc_trace(mVcdFile, b_k_reg_84, "b_k_reg_84");
    sc_trace(mVcdFile, exitcond2_fu_116_p2, "exitcond2_fu_116_p2");
    sc_trace(mVcdFile, c_k_reg_95, "c_k_reg_95");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, p_shl_fu_140_p3, "p_shl_fu_140_p3");
    sc_trace(mVcdFile, p_shl7_fu_152_p3, "p_shl7_fu_152_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_148_p1, "p_shl_cast_fu_148_p1");
    sc_trace(mVcdFile, p_shl7_cast_fu_160_p1, "p_shl7_cast_fu_160_p1");
    sc_trace(mVcdFile, c_k_cast2_fu_170_p1, "c_k_cast2_fu_170_p1");
    sc_trace(mVcdFile, tmp1_fu_186_p2, "tmp1_fu_186_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_191_p1, "tmp1_cast_fu_191_p1");
    sc_trace(mVcdFile, tmp_97_fu_195_p2, "tmp_97_fu_195_p2");
    sc_trace(mVcdFile, tmp_192_cast_fu_200_p1, "tmp_192_cast_fu_200_p1");
    sc_trace(mVcdFile, tmp_99_fu_209_p2, "tmp_99_fu_209_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

b_max::~b_max() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void b_max::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_fu_116_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        b_k_reg_84 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(exitcond_fu_174_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        b_k_reg_84 = b_k_2_reg_243.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_128_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        c_k_reg_95 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_k_reg_95 = c_k_2_reg_256.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_128_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        k_reg_62 = k_4_reg_235.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_reg_62 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_128_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        phi_mul_reg_73 = next_mul_reg_227.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_73 = ap_const_lv13_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        b_k_2_reg_243 = b_k_2_fu_134_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        b_y0_load_reg_271 = b_y0_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_k_2_reg_256 = c_k_2_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_4_reg_235 = k_4_fu_122_p2.read();
        next_mul_reg_227 = next_mul_fu_110_p2.read();
        phi_mul_cast_reg_222 = phi_mul_cast_fu_106_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_174_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_98_reg_261 = tmp_98_fu_204_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_128_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_s_reg_248 = tmp_s_fu_164_p2.read();
    }
}

void b_max::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void b_max::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void b_max::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void b_max::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void b_max::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void b_max::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void b_max::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond2_fu_116_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void b_max::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void b_max::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_116_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void b_max::thread_b_k_2_fu_134_p2() {
    b_k_2_fu_134_p2 = (!b_k_reg_84.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(b_k_reg_84.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void b_max::thread_b_y0_address0() {
    b_y0_address0 =  (sc_lv<13>) (tmp_98_fu_204_p1.read());
}

void b_max::thread_b_y0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        b_y0_ce0 = ap_const_logic_1;
    } else {
        b_y0_ce0 = ap_const_logic_0;
    }
}

void b_max::thread_c_k_2_fu_180_p2() {
    c_k_2_fu_180_p2 = (!c_k_reg_95.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(c_k_reg_95.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void b_max::thread_c_k_cast2_fu_170_p1() {
    c_k_cast2_fu_170_p1 = esl_zext<9,3>(c_k_reg_95.read());
}

void b_max::thread_exitcond1_fu_128_p2() {
    exitcond1_fu_128_p2 = (!b_k_reg_84.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(b_k_reg_84.read() == ap_const_lv5_1C);
}

void b_max::thread_exitcond2_fu_116_p2() {
    exitcond2_fu_116_p2 = (!k_reg_62.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_62.read() == ap_const_lv5_1C);
}

void b_max::thread_exitcond_fu_174_p2() {
    exitcond_fu_174_p2 = (!c_k_reg_95.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(c_k_reg_95.read() == ap_const_lv3_6);
}

void b_max::thread_k_4_fu_122_p2() {
    k_4_fu_122_p2 = (!k_reg_62.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_reg_62.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void b_max::thread_maxval_address0() {
    maxval_address0 =  (sc_lv<13>) (tmp_98_reg_261.read());
}

void b_max::thread_maxval_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        maxval_ce0 = ap_const_logic_1;
    } else {
        maxval_ce0 = ap_const_logic_0;
    }
}

void b_max::thread_maxval_d0() {
    maxval_d0 = (!tmp_99_fu_209_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_99_fu_209_p2.read()[0].to_bool())? b_y0_load_reg_271.read(): ap_const_lv16_0);
}

void b_max::thread_maxval_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        maxval_we0 = ap_const_logic_1;
    } else {
        maxval_we0 = ap_const_logic_0;
    }
}

void b_max::thread_next_mul_fu_110_p2() {
    next_mul_fu_110_p2 = (!phi_mul_reg_73.read().is_01() || !ap_const_lv13_A8.is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_73.read()) + sc_biguint<13>(ap_const_lv13_A8));
}

void b_max::thread_p_shl7_cast_fu_160_p1() {
    p_shl7_cast_fu_160_p1 = esl_zext<9,6>(p_shl7_fu_152_p3.read());
}

void b_max::thread_p_shl7_fu_152_p3() {
    p_shl7_fu_152_p3 = esl_concat<5,1>(b_k_reg_84.read(), ap_const_lv1_0);
}

void b_max::thread_p_shl_cast_fu_148_p1() {
    p_shl_cast_fu_148_p1 = esl_zext<9,8>(p_shl_fu_140_p3.read());
}

void b_max::thread_p_shl_fu_140_p3() {
    p_shl_fu_140_p3 = esl_concat<5,3>(b_k_reg_84.read(), ap_const_lv3_0);
}

void b_max::thread_phi_mul_cast_fu_106_p1() {
    phi_mul_cast_fu_106_p1 = esl_zext<14,13>(phi_mul_reg_73.read());
}

void b_max::thread_tmp1_cast_fu_191_p1() {
    tmp1_cast_fu_191_p1 = esl_sext<14,9>(tmp1_fu_186_p2.read());
}

void b_max::thread_tmp1_fu_186_p2() {
    tmp1_fu_186_p2 = (!tmp_s_reg_248.read().is_01() || !c_k_cast2_fu_170_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_s_reg_248.read()) + sc_biguint<9>(c_k_cast2_fu_170_p1.read()));
}

void b_max::thread_tmp_192_cast_fu_200_p1() {
    tmp_192_cast_fu_200_p1 = esl_sext<32,14>(tmp_97_fu_195_p2.read());
}

void b_max::thread_tmp_97_fu_195_p2() {
    tmp_97_fu_195_p2 = (!tmp1_cast_fu_191_p1.read().is_01() || !phi_mul_cast_reg_222.read().is_01())? sc_lv<14>(): (sc_bigint<14>(tmp1_cast_fu_191_p1.read()) + sc_biguint<14>(phi_mul_cast_reg_222.read()));
}

void b_max::thread_tmp_98_fu_204_p1() {
    tmp_98_fu_204_p1 = esl_zext<64,32>(tmp_192_cast_fu_200_p1.read());
}

void b_max::thread_tmp_99_fu_209_p2() {
    tmp_99_fu_209_p2 = (!b_y0_load_reg_271.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(b_y0_load_reg_271.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void b_max::thread_tmp_s_fu_164_p2() {
    tmp_s_fu_164_p2 = (!p_shl_cast_fu_148_p1.read().is_01() || !p_shl7_cast_fu_160_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl_cast_fu_148_p1.read()) - sc_biguint<9>(p_shl7_cast_fu_160_p1.read()));
}

void b_max::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond2_fu_116_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_128_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_174_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

