// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lenetSynthMatlab_fixpt,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.360500,HLS_SYN_LAT=5125414,HLS_SYN_TPT=none,HLS_SYN_MEM=26,HLS_SYN_DSP=5,HLS_SYN_FF=3412,HLS_SYN_LUT=8953,HLS_VERSION=2018_2}" *)

module lenetSynthMatlab_fixpt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputImg_address0,
        inputImg_ce0,
        inputImg_we0,
        inputImg_d0,
        inputImg_q0,
        inputImg_address1,
        inputImg_ce1,
        inputImg_we1,
        inputImg_d1,
        inputImg_q1,
        netScores_address0,
        netScores_ce0,
        netScores_we0,
        netScores_d0
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] inputImg_address0;
output   inputImg_ce0;
output   inputImg_we0;
output  [7:0] inputImg_d0;
input  [7:0] inputImg_q0;
output  [9:0] inputImg_address1;
output   inputImg_ce1;
output   inputImg_we1;
output  [7:0] inputImg_d1;
input  [7:0] inputImg_q1;
output  [3:0] netScores_address0;
output   netScores_ce0;
output   netScores_we0;
output  [15:0] netScores_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg netScores_ce0;
reg netScores_we0;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [13:0] f_cast_fu_660_p1;
reg   [13:0] f_cast_reg_1490;
wire    ap_CS_fsm_state2;
wire   [2:0] f_1_fu_670_p2;
reg   [2:0] f_1_reg_1498;
wire   [13:0] phi_mul_cast_fu_676_p1;
reg   [13:0] phi_mul_cast_reg_1503;
wire    ap_CS_fsm_state3;
wire   [12:0] next_mul_fu_680_p2;
reg   [12:0] next_mul_reg_1508;
wire   [4:0] r_1_fu_692_p2;
reg   [4:0] r_1_reg_1516;
wire   [4:0] c_1_fu_704_p2;
reg   [4:0] c_1_reg_1524;
wire    ap_CS_fsm_state4;
wire   [4:0] i3_cast_fu_710_p1;
reg   [4:0] i3_cast_reg_1529;
wire    ap_CS_fsm_state5;
wire   [2:0] i0_1_fu_720_p2;
reg   [2:0] i0_1_reg_1537;
wire   [4:0] p_shl6_fu_726_p3;
reg   [4:0] p_shl6_reg_1542;
wire   [0:0] exitcond11_fu_714_p2;
wire   [2:0] i1_1_fu_744_p2;
wire    ap_CS_fsm_state6;
wire   [31:0] Y_2_fu_787_p3;
wire    ap_CS_fsm_state9;
wire   [2:0] k_fu_801_p2;
reg   [2:0] k_reg_1563;
wire    ap_CS_fsm_state10;
wire   [0:0] exitcond_i_fu_795_p2;
wire   [13:0] tmp_16_fu_851_p2;
reg   [13:0] tmp_16_reg_1573;
wire   [31:0] Y_5_fu_908_p3;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    grp_b_max_fu_648_ap_idle;
wire    grp_b_max_fu_648_ap_ready;
wire    grp_b_max_fu_648_ap_done;
wire   [7:0] f_2_cast_fu_935_p1;
reg   [7:0] f_2_cast_reg_1588;
wire    ap_CS_fsm_state14;
wire   [4:0] f_3_fu_945_p2;
reg   [4:0] f_3_reg_1596;
wire   [3:0] r_3_fu_957_p2;
reg   [3:0] r_3_reg_1604;
wire    ap_CS_fsm_state15;
wire   [10:0] tmp4_fu_983_p2;
reg   [10:0] tmp4_reg_1609;
wire   [0:0] exitcond8_fu_951_p2;
wire   [3:0] c_3_fu_995_p2;
reg   [3:0] c_3_reg_1617;
wire    ap_CS_fsm_state16;
wire   [2:0] i0_2_fu_1007_p2;
reg   [2:0] i0_2_reg_1625;
wire    ap_CS_fsm_state17;
wire   [8:0] tmp_13_fu_1037_p2;
reg   [8:0] tmp_13_reg_1630;
wire   [0:0] exitcond12_fu_1001_p2;
wire   [2:0] i1_5_fu_1049_p2;
reg   [2:0] i1_5_reg_1638;
wire    ap_CS_fsm_state18;
wire   [6:0] tmp_31_fu_1079_p2;
reg   [6:0] tmp_31_reg_1643;
wire   [0:0] exitcond14_fu_1043_p2;
wire   [2:0] i_3_fu_1095_p2;
wire    ap_CS_fsm_state19;
wire   [63:0] Y_7_fu_1146_p3;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire   [0:0] exitcond_i2_fu_1154_p2;
wire   [2:0] phitmp_i_fu_1165_p2;
reg   [2:0] phitmp_i_reg_1669;
wire   [63:0] Y_11_fu_1261_p3;
wire    ap_CS_fsm_state26;
wire   [6:0] f_5_fu_1275_p2;
reg   [6:0] f_5_reg_1682;
wire    ap_CS_fsm_state28;
wire   [2:0] i0_fu_1287_p2;
reg   [2:0] i0_reg_1690;
wire    ap_CS_fsm_state29;
wire   [8:0] tmp6_fu_1313_p2;
reg   [8:0] tmp6_reg_1695;
wire   [0:0] exitcond5_fu_1281_p2;
wire   [2:0] i1_3_fu_1325_p2;
reg   [2:0] i1_3_reg_1703;
wire    ap_CS_fsm_state30;
wire   [6:0] tmp_s_fu_1331_p3;
reg   [6:0] tmp_s_reg_1708;
wire   [0:0] exitcond4_fu_1319_p2;
wire   [4:0] i_2_fu_1349_p2;
wire    ap_CS_fsm_state31;
wire   [6:0] l_fu_1380_p2;
reg   [6:0] l_reg_1724;
wire    ap_CS_fsm_state35;
wire   [6:0] k_1_fu_1392_p2;
wire    ap_CS_fsm_state36;
wire   [3:0] l_1_fu_1404_p2;
reg   [3:0] l_1_reg_1740;
wire    ap_CS_fsm_state37;
reg   [3:0] c_assign_1_addr_reg_1745;
wire   [0:0] exitcond1_i1_fu_1398_p2;
wire   [6:0] k_2_fu_1421_p2;
wire    ap_CS_fsm_state38;
wire   [63:0] storemerge_i1_fu_1449_p3;
wire   [0:0] exitcond_i6_fu_1415_p2;
wire   [3:0] i_fu_1463_p2;
reg   [3:0] i_reg_1766;
wire    ap_CS_fsm_state39;
wire   [63:0] tmp_20_fu_1469_p1;
reg   [63:0] tmp_20_reg_1771;
wire   [0:0] exitcond_fu_1457_p2;
reg   [12:0] conv1ActivationMap_address0;
reg    conv1ActivationMap_ce0;
reg    conv1ActivationMap_we0;
wire   [15:0] conv1ActivationMap_d0;
wire   [15:0] conv1ActivationMap_q0;
reg   [4:0] iv11_address0;
reg    iv11_ce0;
reg    iv11_we0;
wire   [0:0] iv11_q0;
reg   [2:0] iv12_address0;
reg    iv12_ce0;
reg    iv12_we0;
wire   [31:0] iv12_q0;
reg   [10:0] conv2ActivationMap_address0;
reg    conv2ActivationMap_ce0;
reg    conv2ActivationMap_we0;
wire   [15:0] conv2ActivationMap_d0;
wire   [15:0] conv2ActivationMap_q0;
reg   [7:0] iv14_address0;
reg    iv14_ce0;
reg    iv14_we0;
wire   [0:0] iv14_q0;
reg   [4:0] iv15_address0;
reg    iv15_ce0;
reg    iv15_we0;
wire   [63:0] iv15_q0;
reg   [2:0] iv16_address0;
reg    iv16_ce0;
reg    iv16_we0;
wire   [63:0] iv16_q0;
reg   [8:0] b_pool2ActivationMap_address0;
reg    b_pool2ActivationMap_ce0;
reg    b_pool2ActivationMap_we0;
wire   [0:0] b_pool2ActivationMap_q0;
reg   [6:0] iv17_address0;
reg    iv17_ce0;
reg    iv17_we0;
wire   [63:0] iv17_q0;
reg   [3:0] c_assign_1_address0;
reg    c_assign_1_ce0;
reg    c_assign_1_we0;
wire   [63:0] c_assign_1_q0;
wire    grp_c_sum_fu_618_ap_start;
wire    grp_c_sum_fu_618_ap_done;
wire    grp_c_sum_fu_618_ap_idle;
wire    grp_c_sum_fu_618_ap_ready;
wire   [7:0] grp_c_sum_fu_618_X_address0;
wire    grp_c_sum_fu_618_X_ce0;
wire   [4:0] grp_c_sum_fu_618_Y_address0;
wire    grp_c_sum_fu_618_Y_ce0;
wire    grp_c_sum_fu_618_Y_we0;
wire   [63:0] grp_c_sum_fu_618_Y_d0;
wire    grp_f_sum_fu_624_ap_start;
wire    grp_f_sum_fu_624_ap_done;
wire    grp_f_sum_fu_624_ap_idle;
wire    grp_f_sum_fu_624_ap_ready;
wire   [8:0] grp_f_sum_fu_624_X_address0;
wire    grp_f_sum_fu_624_X_ce0;
wire   [6:0] grp_f_sum_fu_624_Y_address0;
wire    grp_f_sum_fu_624_Y_ce0;
wire    grp_f_sum_fu_624_Y_we0;
wire   [63:0] grp_f_sum_fu_624_Y_d0;
wire    grp_g_sum_fu_630_ap_start;
wire    grp_g_sum_fu_630_ap_done;
wire    grp_g_sum_fu_630_ap_idle;
wire    grp_g_sum_fu_630_ap_ready;
wire   [6:0] grp_g_sum_fu_630_X_address0;
wire    grp_g_sum_fu_630_X_ce0;
wire   [3:0] grp_g_sum_fu_630_Y_address0;
wire    grp_g_sum_fu_630_Y_ce0;
wire    grp_g_sum_fu_630_Y_we0;
wire   [63:0] grp_g_sum_fu_630_Y_d0;
wire    grp_d_sum_fu_636_ap_start;
wire    grp_d_sum_fu_636_ap_done;
wire    grp_d_sum_fu_636_ap_idle;
wire    grp_d_sum_fu_636_ap_ready;
wire   [4:0] grp_d_sum_fu_636_X_address0;
wire    grp_d_sum_fu_636_X_ce0;
wire   [2:0] grp_d_sum_fu_636_Y_address0;
wire    grp_d_sum_fu_636_Y_ce0;
wire    grp_d_sum_fu_636_Y_we0;
wire   [63:0] grp_d_sum_fu_636_Y_d0;
wire    grp_sum_fu_642_ap_start;
wire    grp_sum_fu_642_ap_done;
wire    grp_sum_fu_642_ap_idle;
wire    grp_sum_fu_642_ap_ready;
wire   [4:0] grp_sum_fu_642_X_address0;
wire    grp_sum_fu_642_X_ce0;
wire   [2:0] grp_sum_fu_642_Y_address0;
wire    grp_sum_fu_642_Y_ce0;
wire    grp_sum_fu_642_Y_we0;
wire   [31:0] grp_sum_fu_642_Y_d0;
wire    grp_b_max_fu_648_ap_start;
wire   [12:0] grp_b_max_fu_648_b_y0_address0;
wire    grp_b_max_fu_648_b_y0_ce0;
wire   [12:0] grp_b_max_fu_648_maxval_address0;
wire    grp_b_max_fu_648_maxval_ce0;
wire    grp_b_max_fu_648_maxval_we0;
wire   [15:0] grp_b_max_fu_648_maxval_d0;
wire    grp_d_max_fu_654_ap_start;
wire    grp_d_max_fu_654_ap_done;
wire    grp_d_max_fu_654_ap_idle;
wire    grp_d_max_fu_654_ap_ready;
wire   [10:0] grp_d_max_fu_654_b_y0_address0;
wire    grp_d_max_fu_654_b_y0_ce0;
wire   [10:0] grp_d_max_fu_654_maxval_address0;
wire    grp_d_max_fu_654_maxval_ce0;
wire    grp_d_max_fu_654_maxval_we0;
wire   [15:0] grp_d_max_fu_654_maxval_d0;
reg   [2:0] f_reg_331;
wire   [0:0] exitcond7_fu_686_p2;
reg   [4:0] r_reg_342;
wire   [0:0] exitcond9_fu_698_p2;
wire   [0:0] exitcond1_fu_664_p2;
reg   [12:0] phi_mul_reg_353;
reg   [4:0] c_reg_364;
wire    ap_CS_fsm_state12;
reg   [2:0] i3_reg_376;
wire   [0:0] exitcond15_fu_738_p2;
reg   [2:0] i1_reg_387;
reg   [31:0] Y_1_i_reg_398;
reg   [2:0] k_i_reg_408;
reg   [4:0] f_2_reg_419;
reg   [3:0] r_2_reg_430;
wire   [0:0] exitcond10_fu_989_p2;
wire   [0:0] exitcond2_fu_939_p2;
reg   [3:0] c_2_reg_441;
reg   [2:0] i0_3_reg_453;
reg   [2:0] i1_2_reg_464;
wire   [0:0] exitcond13_fu_1089_p2;
reg   [2:0] i9_reg_475;
reg   [2:0] ix_reg_486;
reg   [63:0] Y_1_i1_reg_497;
reg   [6:0] f_4_reg_507;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state27;
reg   [2:0] i0_6_reg_518;
wire   [0:0] exitcond6_fu_1269_p2;
reg   [2:0] i1_4_reg_529;
wire   [0:0] exitcond3_fu_1343_p2;
reg   [4:0] i_1_reg_540;
reg   [6:0] l_i_reg_551;
wire   [0:0] exitcond_i4_fu_1386_p2;
reg   [6:0] k_i1_reg_562;
wire   [0:0] exitcond1_i_fu_1374_p2;
reg   [3:0] l_i1_reg_573;
reg   [63:0] i26_reg_584;
reg   [6:0] k_i2_reg_596;
reg   [3:0] i_4_reg_607;
wire    ap_CS_fsm_state40;
reg    grp_c_sum_fu_618_ap_start_reg;
wire    ap_CS_fsm_state20;
reg    grp_f_sum_fu_624_ap_start_reg;
wire    ap_CS_fsm_state32;
reg    grp_g_sum_fu_630_ap_start_reg;
wire    ap_CS_fsm_state33;
reg    grp_d_sum_fu_636_ap_start_reg;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
reg    grp_sum_fu_642_ap_start_reg;
wire    ap_CS_fsm_state7;
reg    grp_b_max_fu_648_ap_start_reg;
reg    grp_d_max_fu_654_ap_start_reg;
wire   [63:0] tmp_19_fu_760_p1;
wire   [63:0] tmp_247_i_fu_807_p1;
wire   [63:0] tmp_17_fu_930_p1;
wire   [63:0] tmp_33_fu_1119_p1;
wire   [63:0] tmp_189_i_fu_1160_p1;
wire   [63:0] tmp_30_fu_1204_p1;
wire   [63:0] tmp_26_fu_1369_p1;
wire   [63:0] tmp_i4_fu_1410_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state23;
wire   [4:0] i1_cast_fu_734_p1;
wire   [4:0] tmp1_fu_750_p2;
wire   [4:0] tmp_18_fu_755_p2;
wire   [28:0] Y_1_fu_765_p1;
wire   [0:0] tmp_21_fu_769_p3;
wire   [31:0] Y_fu_777_p2;
wire   [31:0] Y_1_cast_fu_783_p1;
wire   [7:0] p_shl_fu_812_p3;
wire   [5:0] p_shl1_fu_824_p3;
wire   [8:0] p_shl_cast_fu_820_p1;
wire   [8:0] p_shl1_cast_fu_832_p1;
wire   [8:0] tmp_15_fu_836_p2;
wire  signed [13:0] tmp_31_cast_fu_842_p1;
wire   [13:0] tmp2_fu_846_p2;
wire   [28:0] tmp_35_fu_868_p1;
wire   [28:0] tmp_34_fu_864_p1;
wire   [29:0] tmp_23_fu_860_p1;
wire   [29:0] tmp_fu_856_p1;
wire   [29:0] i20_1_cast_fu_884_p2;
wire   [31:0] i20_1_fu_872_p2;
wire   [28:0] Y_8_fu_878_p2;
wire   [0:0] tmp_36_fu_890_p3;
wire   [31:0] Y_3_fu_898_p2;
wire   [31:0] Y_4_cast_fu_904_p1;
wire  signed [31:0] tmp_32_cast_fu_927_p1;
wire   [8:0] p_shl3_fu_971_p3;
wire   [10:0] p_shl3_cast_fu_979_p1;
wire   [10:0] p_shl2_fu_963_p3;
wire   [7:0] p_shl9_fu_1013_p3;
wire   [3:0] p_shl4_fu_1025_p3;
wire   [8:0] p_shl9_cast_fu_1021_p1;
wire   [8:0] p_shl4_cast_fu_1033_p1;
wire   [5:0] p_shl8_fu_1055_p3;
wire   [3:0] p_shl10_fu_1067_p3;
wire   [6:0] p_shl8_cast_fu_1063_p1;
wire   [6:0] p_shl10_cast_fu_1075_p1;
wire   [6:0] i9_cast_fu_1085_p1;
wire   [6:0] tmp3_fu_1101_p2;
wire  signed [8:0] tmp3_cast_fu_1106_p1;
wire   [8:0] tmp_32_fu_1110_p2;
wire  signed [31:0] tmp_58_cast_fu_1115_p1;
wire   [39:0] Y_6_fu_1124_p1;
wire   [0:0] tmp_22_fu_1128_p3;
wire   [63:0] Y_4_fu_1136_p2;
wire   [63:0] Y_7_cast_fu_1142_p1;
wire   [7:0] tmp_28_fu_1182_p3;
wire   [7:0] tmp5_fu_1190_p2;
wire   [10:0] tmp5_cast_fu_1195_p1;
wire   [10:0] tmp_29_fu_1199_p2;
wire   [39:0] tmp_45_fu_1221_p1;
wire   [39:0] tmp_44_fu_1217_p1;
wire   [40:0] tmp_43_fu_1213_p1;
wire   [40:0] tmp_42_fu_1209_p1;
wire   [40:0] i22_1_cast_fu_1237_p2;
wire   [63:0] i22_1_fu_1225_p2;
wire   [39:0] Y_10_fu_1231_p2;
wire   [0:0] tmp_46_fu_1243_p3;
wire   [63:0] Y_9_fu_1251_p2;
wire   [63:0] Y_10_cast_fu_1257_p1;
wire   [6:0] p_shl7_fu_1301_p3;
wire   [8:0] p_shl12_cast_fu_1309_p1;
wire   [8:0] p_shl5_fu_1293_p3;
wire   [6:0] i_1_cast_fu_1339_p1;
wire   [6:0] tmp7_fu_1355_p2;
wire   [8:0] tmp7_cast_fu_1360_p1;
wire   [8:0] tmp_25_fu_1364_p2;
wire   [37:0] tmp_37_fu_1427_p1;
wire   [0:0] tmp_41_fu_1431_p3;
wire   [63:0] tmp_259_i_fu_1439_p2;
wire   [63:0] tmp_260_i_cast_fu_1445_p1;
reg   [39:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 grp_c_sum_fu_618_ap_start_reg = 1'b0;
#0 grp_f_sum_fu_624_ap_start_reg = 1'b0;
#0 grp_g_sum_fu_630_ap_start_reg = 1'b0;
#0 grp_d_sum_fu_636_ap_start_reg = 1'b0;
#0 grp_sum_fu_642_ap_start_reg = 1'b0;
#0 grp_b_max_fu_648_ap_start_reg = 1'b0;
#0 grp_d_max_fu_654_ap_start_reg = 1'b0;
end

lenetSynthMatlab_jbC #(
    .DataWidth( 16 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
conv1ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1ActivationMap_address0),
    .ce0(conv1ActivationMap_ce0),
    .we0(conv1ActivationMap_we0),
    .d0(conv1ActivationMap_d0),
    .q0(conv1ActivationMap_q0)
);

lenetSynthMatlab_kbM #(
    .DataWidth( 16 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
iv10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_b_max_fu_648_maxval_address0),
    .ce0(grp_b_max_fu_648_maxval_ce0),
    .we0(grp_b_max_fu_648_maxval_we0),
    .d0(grp_b_max_fu_648_maxval_d0)
);

lenetSynthMatlab_lbW #(
    .DataWidth( 1 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
iv11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(iv11_address0),
    .ce0(iv11_ce0),
    .we0(iv11_we0),
    .d0(1'd0),
    .q0(iv11_q0)
);

lenetSynthMatlab_mb6 #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
iv12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(iv12_address0),
    .ce0(iv12_ce0),
    .we0(iv12_we0),
    .d0(grp_sum_fu_642_Y_d0),
    .q0(iv12_q0)
);

lenetSynthMatlab_ncg #(
    .DataWidth( 16 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
conv2ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2ActivationMap_address0),
    .ce0(conv2ActivationMap_ce0),
    .we0(conv2ActivationMap_we0),
    .d0(conv2ActivationMap_d0),
    .q0(conv2ActivationMap_q0)
);

lenetSynthMatlab_ocq #(
    .DataWidth( 16 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
iv13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_d_max_fu_654_maxval_address0),
    .ce0(grp_d_max_fu_654_maxval_ce0),
    .we0(grp_d_max_fu_654_maxval_we0),
    .d0(grp_d_max_fu_654_maxval_d0)
);

lenetSynthMatlab_pcA #(
    .DataWidth( 1 ),
    .AddressRange( 150 ),
    .AddressWidth( 8 ))
iv14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(iv14_address0),
    .ce0(iv14_ce0),
    .we0(iv14_we0),
    .d0(1'd0),
    .q0(iv14_q0)
);

lenetSynthMatlab_qcK #(
    .DataWidth( 64 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iv15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(iv15_address0),
    .ce0(iv15_ce0),
    .we0(iv15_we0),
    .d0(grp_c_sum_fu_618_Y_d0),
    .q0(iv15_q0)
);

lenetSynthMatlab_rcU #(
    .DataWidth( 64 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
iv16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(iv16_address0),
    .ce0(iv16_ce0),
    .we0(iv16_we0),
    .d0(grp_d_sum_fu_636_Y_d0),
    .q0(iv16_q0)
);

lenetSynthMatlab_sc4 #(
    .DataWidth( 1 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
b_pool2ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_pool2ActivationMap_address0),
    .ce0(b_pool2ActivationMap_ce0),
    .we0(b_pool2ActivationMap_we0),
    .d0(1'd0),
    .q0(b_pool2ActivationMap_q0)
);

lenetSynthMatlab_tde #(
    .DataWidth( 64 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
iv17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(iv17_address0),
    .ce0(iv17_ce0),
    .we0(iv17_we0),
    .d0(grp_f_sum_fu_624_Y_d0),
    .q0(iv17_q0)
);

lenetSynthMatlab_udo #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
iv18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_g_sum_fu_630_Y_address0),
    .ce0(grp_g_sum_fu_630_Y_ce0),
    .we0(grp_g_sum_fu_630_Y_we0),
    .d0(grp_g_sum_fu_630_Y_d0)
);

lenetSynthMatlab_vdy #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
c_assign_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(c_assign_1_address0),
    .ce0(c_assign_1_ce0),
    .we0(c_assign_1_we0),
    .d0(i26_reg_584),
    .q0(c_assign_1_q0)
);

c_sum grp_c_sum_fu_618(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_c_sum_fu_618_ap_start),
    .ap_done(grp_c_sum_fu_618_ap_done),
    .ap_idle(grp_c_sum_fu_618_ap_idle),
    .ap_ready(grp_c_sum_fu_618_ap_ready),
    .X_address0(grp_c_sum_fu_618_X_address0),
    .X_ce0(grp_c_sum_fu_618_X_ce0),
    .X_q0(iv14_q0),
    .Y_address0(grp_c_sum_fu_618_Y_address0),
    .Y_ce0(grp_c_sum_fu_618_Y_ce0),
    .Y_we0(grp_c_sum_fu_618_Y_we0),
    .Y_d0(grp_c_sum_fu_618_Y_d0)
);

f_sum grp_f_sum_fu_624(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_f_sum_fu_624_ap_start),
    .ap_done(grp_f_sum_fu_624_ap_done),
    .ap_idle(grp_f_sum_fu_624_ap_idle),
    .ap_ready(grp_f_sum_fu_624_ap_ready),
    .X_address0(grp_f_sum_fu_624_X_address0),
    .X_ce0(grp_f_sum_fu_624_X_ce0),
    .X_q0(b_pool2ActivationMap_q0),
    .Y_address0(grp_f_sum_fu_624_Y_address0),
    .Y_ce0(grp_f_sum_fu_624_Y_ce0),
    .Y_we0(grp_f_sum_fu_624_Y_we0),
    .Y_d0(grp_f_sum_fu_624_Y_d0)
);

g_sum grp_g_sum_fu_630(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_g_sum_fu_630_ap_start),
    .ap_done(grp_g_sum_fu_630_ap_done),
    .ap_idle(grp_g_sum_fu_630_ap_idle),
    .ap_ready(grp_g_sum_fu_630_ap_ready),
    .X_address0(grp_g_sum_fu_630_X_address0),
    .X_ce0(grp_g_sum_fu_630_X_ce0),
    .X_q0(iv17_q0),
    .Y_address0(grp_g_sum_fu_630_Y_address0),
    .Y_ce0(grp_g_sum_fu_630_Y_ce0),
    .Y_we0(grp_g_sum_fu_630_Y_we0),
    .Y_d0(grp_g_sum_fu_630_Y_d0)
);

d_sum grp_d_sum_fu_636(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_d_sum_fu_636_ap_start),
    .ap_done(grp_d_sum_fu_636_ap_done),
    .ap_idle(grp_d_sum_fu_636_ap_idle),
    .ap_ready(grp_d_sum_fu_636_ap_ready),
    .X_address0(grp_d_sum_fu_636_X_address0),
    .X_ce0(grp_d_sum_fu_636_X_ce0),
    .X_q0(iv15_q0),
    .Y_address0(grp_d_sum_fu_636_Y_address0),
    .Y_ce0(grp_d_sum_fu_636_Y_ce0),
    .Y_we0(grp_d_sum_fu_636_Y_we0),
    .Y_d0(grp_d_sum_fu_636_Y_d0)
);

sum grp_sum_fu_642(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sum_fu_642_ap_start),
    .ap_done(grp_sum_fu_642_ap_done),
    .ap_idle(grp_sum_fu_642_ap_idle),
    .ap_ready(grp_sum_fu_642_ap_ready),
    .X_address0(grp_sum_fu_642_X_address0),
    .X_ce0(grp_sum_fu_642_X_ce0),
    .X_q0(iv11_q0),
    .Y_address0(grp_sum_fu_642_Y_address0),
    .Y_ce0(grp_sum_fu_642_Y_ce0),
    .Y_we0(grp_sum_fu_642_Y_we0),
    .Y_d0(grp_sum_fu_642_Y_d0)
);

b_max grp_b_max_fu_648(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_b_max_fu_648_ap_start),
    .ap_done(grp_b_max_fu_648_ap_done),
    .ap_idle(grp_b_max_fu_648_ap_idle),
    .ap_ready(grp_b_max_fu_648_ap_ready),
    .b_y0_address0(grp_b_max_fu_648_b_y0_address0),
    .b_y0_ce0(grp_b_max_fu_648_b_y0_ce0),
    .b_y0_q0(conv1ActivationMap_q0),
    .maxval_address0(grp_b_max_fu_648_maxval_address0),
    .maxval_ce0(grp_b_max_fu_648_maxval_ce0),
    .maxval_we0(grp_b_max_fu_648_maxval_we0),
    .maxval_d0(grp_b_max_fu_648_maxval_d0)
);

d_max grp_d_max_fu_654(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_d_max_fu_654_ap_start),
    .ap_done(grp_d_max_fu_654_ap_done),
    .ap_idle(grp_d_max_fu_654_ap_idle),
    .ap_ready(grp_d_max_fu_654_ap_ready),
    .b_y0_address0(grp_d_max_fu_654_b_y0_address0),
    .b_y0_ce0(grp_d_max_fu_654_b_y0_ce0),
    .b_y0_q0(conv2ActivationMap_q0),
    .maxval_address0(grp_d_max_fu_654_maxval_address0),
    .maxval_ce0(grp_d_max_fu_654_maxval_ce0),
    .maxval_we0(grp_d_max_fu_654_maxval_we0),
    .maxval_d0(grp_d_max_fu_654_maxval_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_b_max_fu_648_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_664_p2 == 1'd1))) begin
            grp_b_max_fu_648_ap_start_reg <= 1'b1;
        end else if ((grp_b_max_fu_648_ap_ready == 1'b1)) begin
            grp_b_max_fu_648_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_c_sum_fu_618_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state17) & (exitcond12_fu_1001_p2 == 1'd1))) begin
            grp_c_sum_fu_618_ap_start_reg <= 1'b1;
        end else if ((grp_c_sum_fu_618_ap_ready == 1'b1)) begin
            grp_c_sum_fu_618_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_d_max_fu_654_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) & (exitcond2_fu_939_p2 == 1'd1))) begin
            grp_d_max_fu_654_ap_start_reg <= 1'b1;
        end else if ((grp_d_max_fu_654_ap_ready == 1'b1)) begin
            grp_d_max_fu_654_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_d_sum_fu_636_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_d_sum_fu_636_ap_start_reg <= 1'b1;
        end else if ((grp_d_sum_fu_636_ap_ready == 1'b1)) begin
            grp_d_sum_fu_636_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_f_sum_fu_624_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state29) & (exitcond5_fu_1281_p2 == 1'd1))) begin
            grp_f_sum_fu_624_ap_start_reg <= 1'b1;
        end else if ((grp_f_sum_fu_624_ap_ready == 1'b1)) begin
            grp_f_sum_fu_624_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_g_sum_fu_630_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state33)) begin
            grp_g_sum_fu_630_ap_start_reg <= 1'b1;
        end else if ((grp_g_sum_fu_630_ap_ready == 1'b1)) begin
            grp_g_sum_fu_630_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sum_fu_642_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (exitcond11_fu_714_p2 == 1'd1))) begin
            grp_sum_fu_642_ap_start_reg <= 1'b1;
        end else if ((grp_sum_fu_642_ap_ready == 1'b1)) begin
            grp_sum_fu_642_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        Y_1_i1_reg_497 <= Y_11_fu_1261_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        Y_1_i1_reg_497 <= Y_7_fu_1146_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Y_1_i_reg_398 <= Y_5_fu_908_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Y_1_i_reg_398 <= Y_2_fu_787_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond8_fu_951_p2 == 1'd0))) begin
        c_2_reg_441 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state25) & (exitcond_i2_fu_1154_p2 == 1'd1))) begin
        c_2_reg_441 <= c_3_reg_1617;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_686_p2 == 1'd0))) begin
        c_reg_364 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c_reg_364 <= c_1_reg_1524;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond8_fu_951_p2 == 1'd1))) begin
        f_2_reg_419 <= f_3_reg_1596;
    end else if (((1'b1 == ap_CS_fsm_state13) & (grp_b_max_fu_648_ap_done == 1'b1))) begin
        f_2_reg_419 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_d_max_fu_654_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        f_4_reg_507 <= 7'd0;
    end else if (((grp_g_sum_fu_630_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        f_4_reg_507 <= f_5_reg_1682;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_686_p2 == 1'd1))) begin
        f_reg_331 <= f_1_reg_1498;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_reg_331 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond10_fu_989_p2 == 1'd0))) begin
        i0_3_reg_453 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond14_fu_1043_p2 == 1'd1))) begin
        i0_3_reg_453 <= i0_2_reg_1625;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (exitcond6_fu_1269_p2 == 1'd0))) begin
        i0_6_reg_518 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state30) & (exitcond4_fu_1319_p2 == 1'd1))) begin
        i0_6_reg_518 <= i0_reg_1690;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (exitcond13_fu_1089_p2 == 1'd1))) begin
        i1_2_reg_464 <= i1_5_reg_1638;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond12_fu_1001_p2 == 1'd0))) begin
        i1_2_reg_464 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (exitcond3_fu_1343_p2 == 1'd1))) begin
        i1_4_reg_529 <= i1_3_reg_1703;
    end else if (((1'b1 == ap_CS_fsm_state29) & (exitcond5_fu_1281_p2 == 1'd0))) begin
        i1_4_reg_529 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond11_fu_714_p2 == 1'd0))) begin
        i1_reg_387 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond15_fu_738_p2 == 1'd0))) begin
        i1_reg_387 <= i1_1_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (exitcond_i6_fu_1415_p2 == 1'd0))) begin
        i26_reg_584 <= storemerge_i1_fu_1449_p3;
    end else if (((1'b1 == ap_CS_fsm_state37) & (exitcond1_i1_fu_1398_p2 == 1'd0))) begin
        i26_reg_584 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond9_fu_698_p2 == 1'd0))) begin
        i3_reg_376 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond15_fu_738_p2 == 1'd1))) begin
        i3_reg_376 <= i0_1_reg_1537;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond14_fu_1043_p2 == 1'd0))) begin
        i9_reg_475 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (exitcond13_fu_1089_p2 == 1'd0))) begin
        i9_reg_475 <= i_3_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (exitcond4_fu_1319_p2 == 1'd0))) begin
        i_1_reg_540 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state31) & (exitcond3_fu_1343_p2 == 1'd0))) begin
        i_1_reg_540 <= i_2_fu_1349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (exitcond1_i1_fu_1398_p2 == 1'd1))) begin
        i_4_reg_607 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        i_4_reg_607 <= i_reg_1766;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ix_reg_486 <= phitmp_i_reg_1669;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ix_reg_486 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (exitcond1_i_fu_1374_p2 == 1'd0))) begin
        k_i1_reg_562 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i4_fu_1386_p2 == 1'd0))) begin
        k_i1_reg_562 <= k_1_fu_1392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (exitcond_i6_fu_1415_p2 == 1'd0))) begin
        k_i2_reg_596 <= k_2_fu_1421_p2;
    end else if (((1'b1 == ap_CS_fsm_state37) & (exitcond1_i1_fu_1398_p2 == 1'd0))) begin
        k_i2_reg_596 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_i_reg_408 <= k_reg_1563;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        k_i_reg_408 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (exitcond1_i_fu_1374_p2 == 1'd1))) begin
        l_i1_reg_573 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state38) & (exitcond_i6_fu_1415_p2 == 1'd1))) begin
        l_i1_reg_573 <= l_1_reg_1740;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (exitcond6_fu_1269_p2 == 1'd1))) begin
        l_i_reg_551 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i4_fu_1386_p2 == 1'd1))) begin
        l_i_reg_551 <= l_reg_1724;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_664_p2 == 1'd0))) begin
        phi_mul_reg_353 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond9_fu_698_p2 == 1'd1))) begin
        phi_mul_reg_353 <= next_mul_reg_1508;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond2_fu_939_p2 == 1'd0))) begin
        r_2_reg_430 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (exitcond10_fu_989_p2 == 1'd1))) begin
        r_2_reg_430 <= r_3_reg_1604;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_664_p2 == 1'd0))) begin
        r_reg_342 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond9_fu_698_p2 == 1'd1))) begin
        r_reg_342 <= r_1_reg_1516;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c_1_reg_1524 <= c_1_fu_704_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        c_3_reg_1617 <= c_3_fu_995_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (exitcond1_i1_fu_1398_p2 == 1'd0))) begin
        c_assign_1_addr_reg_1745 <= tmp_i4_fu_1410_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        f_1_reg_1498 <= f_1_fu_670_p2;
        f_cast_reg_1490[2 : 0] <= f_cast_fu_660_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        f_2_cast_reg_1588[4 : 0] <= f_2_cast_fu_935_p1[4 : 0];
        f_3_reg_1596 <= f_3_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        f_5_reg_1682 <= f_5_fu_1275_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i0_1_reg_1537 <= i0_1_fu_720_p2;
        i3_cast_reg_1529[2 : 0] <= i3_cast_fu_710_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i0_2_reg_1625 <= i0_2_fu_1007_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i0_reg_1690 <= i0_fu_1287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i1_3_reg_1703 <= i1_3_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i1_5_reg_1638 <= i1_5_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_reg_1766 <= i_fu_1463_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_reg_1563 <= k_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        l_1_reg_1740 <= l_1_fu_1404_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        l_reg_1724 <= l_fu_1380_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        next_mul_reg_1508 <= next_mul_fu_680_p2;
        phi_mul_cast_reg_1503[12 : 0] <= phi_mul_cast_fu_676_p1[12 : 0];
        r_1_reg_1516 <= r_1_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond11_fu_714_p2 == 1'd0))) begin
        p_shl6_reg_1542[4 : 2] <= p_shl6_fu_726_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (exitcond_i2_fu_1154_p2 == 1'd0))) begin
        phitmp_i_reg_1669 <= phitmp_i_fu_1165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        r_3_reg_1604 <= r_3_fu_957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond8_fu_951_p2 == 1'd0))) begin
        tmp4_reg_1609[10 : 5] <= tmp4_fu_983_p2[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond5_fu_1281_p2 == 1'd0))) begin
        tmp6_reg_1695[8 : 4] <= tmp6_fu_1313_p2[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond12_fu_1001_p2 == 1'd0))) begin
        tmp_13_reg_1630[8 : 1] <= tmp_13_fu_1037_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (exitcond_i_fu_795_p2 == 1'd1))) begin
        tmp_16_reg_1573 <= tmp_16_fu_851_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_1457_p2 == 1'd0))) begin
        tmp_20_reg_1771[3 : 0] <= tmp_20_fu_1469_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond14_fu_1043_p2 == 1'd0))) begin
        tmp_31_reg_1643[6 : 1] <= tmp_31_fu_1079_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (exitcond4_fu_1319_p2 == 1'd0))) begin
        tmp_s_reg_1708[6 : 4] <= tmp_s_fu_1331_p3[6 : 4];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_1457_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_1457_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        b_pool2ActivationMap_address0 = tmp_26_fu_1369_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        b_pool2ActivationMap_address0 = grp_f_sum_fu_624_X_address0;
    end else begin
        b_pool2ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        b_pool2ActivationMap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        b_pool2ActivationMap_ce0 = grp_f_sum_fu_624_X_ce0;
    end else begin
        b_pool2ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) & (exitcond3_fu_1343_p2 == 1'd0))) begin
        b_pool2ActivationMap_we0 = 1'b1;
    end else begin
        b_pool2ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        c_assign_1_address0 = tmp_20_fu_1469_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        c_assign_1_address0 = c_assign_1_addr_reg_1745;
    end else begin
        c_assign_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        c_assign_1_ce0 = 1'b1;
    end else begin
        c_assign_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        c_assign_1_we0 = 1'b1;
    end else begin
        c_assign_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv1ActivationMap_address0 = tmp_17_fu_930_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1ActivationMap_address0 = grp_b_max_fu_648_b_y0_address0;
    end else begin
        conv1ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv1ActivationMap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1ActivationMap_ce0 = grp_b_max_fu_648_b_y0_ce0;
    end else begin
        conv1ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv1ActivationMap_we0 = 1'b1;
    end else begin
        conv1ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2ActivationMap_address0 = tmp_30_fu_1204_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv2ActivationMap_address0 = grp_d_max_fu_654_b_y0_address0;
    end else begin
        conv2ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2ActivationMap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv2ActivationMap_ce0 = grp_d_max_fu_654_b_y0_ce0;
    end else begin
        conv2ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (exitcond_i2_fu_1154_p2 == 1'd1))) begin
        conv2ActivationMap_we0 = 1'b1;
    end else begin
        conv2ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        iv11_address0 = tmp_19_fu_760_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        iv11_address0 = grp_sum_fu_642_X_address0;
    end else begin
        iv11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        iv11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        iv11_ce0 = grp_sum_fu_642_X_ce0;
    end else begin
        iv11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond15_fu_738_p2 == 1'd0))) begin
        iv11_we0 = 1'b1;
    end else begin
        iv11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        iv12_address0 = tmp_247_i_fu_807_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        iv12_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        iv12_address0 = grp_sum_fu_642_Y_address0;
    end else begin
        iv12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        iv12_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        iv12_ce0 = grp_sum_fu_642_Y_ce0;
    end else begin
        iv12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        iv12_we0 = grp_sum_fu_642_Y_we0;
    end else begin
        iv12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        iv14_address0 = tmp_33_fu_1119_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        iv14_address0 = grp_c_sum_fu_618_X_address0;
    end else begin
        iv14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        iv14_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        iv14_ce0 = grp_c_sum_fu_618_X_ce0;
    end else begin
        iv14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (exitcond13_fu_1089_p2 == 1'd0))) begin
        iv14_we0 = 1'b1;
    end else begin
        iv14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        iv15_address0 = grp_d_sum_fu_636_X_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        iv15_address0 = grp_c_sum_fu_618_Y_address0;
    end else begin
        iv15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        iv15_ce0 = grp_d_sum_fu_636_X_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        iv15_ce0 = grp_c_sum_fu_618_Y_ce0;
    end else begin
        iv15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        iv15_we0 = grp_c_sum_fu_618_Y_we0;
    end else begin
        iv15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        iv16_address0 = tmp_189_i_fu_1160_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        iv16_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        iv16_address0 = grp_d_sum_fu_636_Y_address0;
    end else begin
        iv16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state25))) begin
        iv16_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        iv16_ce0 = grp_d_sum_fu_636_Y_ce0;
    end else begin
        iv16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        iv16_we0 = grp_d_sum_fu_636_Y_we0;
    end else begin
        iv16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        iv17_address0 = grp_g_sum_fu_630_X_address0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        iv17_address0 = grp_f_sum_fu_624_Y_address0;
    end else begin
        iv17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        iv17_ce0 = grp_g_sum_fu_630_X_ce0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        iv17_ce0 = grp_f_sum_fu_624_Y_ce0;
    end else begin
        iv17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        iv17_we0 = grp_f_sum_fu_624_Y_we0;
    end else begin
        iv17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        netScores_ce0 = 1'b1;
    end else begin
        netScores_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        netScores_we0 = 1'b1;
    end else begin
        netScores_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_664_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_686_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond9_fu_698_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond11_fu_714_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond15_fu_738_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_sum_fu_642_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (exitcond_i_fu_795_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_b_max_fu_648_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (exitcond2_fu_939_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond8_fu_951_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond10_fu_989_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond12_fu_1001_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond14_fu_1043_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (exitcond13_fu_1089_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((grp_c_sum_fu_618_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_d_sum_fu_636_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (exitcond_i2_fu_1154_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_d_max_fu_654_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (exitcond6_fu_1269_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (exitcond5_fu_1281_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (exitcond4_fu_1319_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (exitcond3_fu_1343_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((grp_f_sum_fu_624_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_g_sum_fu_630_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (exitcond1_i_fu_1374_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i4_fu_1386_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (exitcond1_i1_fu_1398_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (exitcond_i6_fu_1415_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_1457_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Y_10_cast_fu_1257_p1 = Y_10_fu_1231_p2;

assign Y_10_fu_1231_p2 = (tmp_45_fu_1221_p1 + tmp_44_fu_1217_p1);

assign Y_11_fu_1261_p3 = ((tmp_46_fu_1243_p3[0:0] === 1'b1) ? Y_9_fu_1251_p2 : Y_10_cast_fu_1257_p1);

assign Y_1_cast_fu_783_p1 = Y_1_fu_765_p1;

assign Y_1_fu_765_p1 = iv12_q0[28:0];

assign Y_2_fu_787_p3 = ((tmp_21_fu_769_p3[0:0] === 1'b1) ? Y_fu_777_p2 : Y_1_cast_fu_783_p1);

assign Y_3_fu_898_p2 = (i20_1_fu_872_p2 | 32'd3758096384);

assign Y_4_cast_fu_904_p1 = Y_8_fu_878_p2;

assign Y_4_fu_1136_p2 = (iv16_q0 | 64'd18446742974197923840);

assign Y_5_fu_908_p3 = ((tmp_36_fu_890_p3[0:0] === 1'b1) ? Y_3_fu_898_p2 : Y_4_cast_fu_904_p1);

assign Y_6_fu_1124_p1 = iv16_q0[39:0];

assign Y_7_cast_fu_1142_p1 = Y_6_fu_1124_p1;

assign Y_7_fu_1146_p3 = ((tmp_22_fu_1128_p3[0:0] === 1'b1) ? Y_4_fu_1136_p2 : Y_7_cast_fu_1142_p1);

assign Y_8_fu_878_p2 = (tmp_35_fu_868_p1 + tmp_34_fu_864_p1);

assign Y_9_fu_1251_p2 = (i22_1_fu_1225_p2 | 64'd18446742974197923840);

assign Y_fu_777_p2 = (iv12_q0 | 32'd3758096384);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign c_1_fu_704_p2 = (c_reg_364 + 5'd1);

assign c_3_fu_995_p2 = (c_2_reg_441 + 4'd1);

assign conv1ActivationMap_d0 = {{Y_1_i_reg_398[26:11]}};

assign conv2ActivationMap_d0 = {{Y_1_i1_reg_497[33:18]}};

assign exitcond10_fu_989_p2 = ((c_2_reg_441 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond11_fu_714_p2 = ((i3_reg_376 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond12_fu_1001_p2 = ((i0_3_reg_453 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond13_fu_1089_p2 = ((i9_reg_475 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond14_fu_1043_p2 = ((i1_2_reg_464 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond15_fu_738_p2 = ((i1_reg_387 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond1_fu_664_p2 = ((f_reg_331 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond1_i1_fu_1398_p2 = ((l_i1_reg_573 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond1_i_fu_1374_p2 = ((l_i_reg_551 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond2_fu_939_p2 = ((f_2_reg_419 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond3_fu_1343_p2 = ((i_1_reg_540 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond4_fu_1319_p2 = ((i1_4_reg_529 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond5_fu_1281_p2 = ((i0_6_reg_518 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond6_fu_1269_p2 = ((f_4_reg_507 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond7_fu_686_p2 = ((r_reg_342 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond8_fu_951_p2 = ((r_2_reg_430 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond9_fu_698_p2 = ((c_reg_364 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond_fu_1457_p2 = ((i_4_reg_607 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_1154_p2 = ((ix_reg_486 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_i4_fu_1386_p2 = ((k_i1_reg_562 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i6_fu_1415_p2 = ((k_i2_reg_596 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond_i_fu_795_p2 = ((k_i_reg_408 == 3'd4) ? 1'b1 : 1'b0);

assign f_1_fu_670_p2 = (f_reg_331 + 3'd1);

assign f_2_cast_fu_935_p1 = f_2_reg_419;

assign f_3_fu_945_p2 = (f_2_reg_419 + 5'd1);

assign f_5_fu_1275_p2 = (f_4_reg_507 + 7'd1);

assign f_cast_fu_660_p1 = f_reg_331;

assign grp_b_max_fu_648_ap_start = grp_b_max_fu_648_ap_start_reg;

assign grp_c_sum_fu_618_ap_start = grp_c_sum_fu_618_ap_start_reg;

assign grp_d_max_fu_654_ap_start = grp_d_max_fu_654_ap_start_reg;

assign grp_d_sum_fu_636_ap_start = grp_d_sum_fu_636_ap_start_reg;

assign grp_f_sum_fu_624_ap_start = grp_f_sum_fu_624_ap_start_reg;

assign grp_g_sum_fu_630_ap_start = grp_g_sum_fu_630_ap_start_reg;

assign grp_sum_fu_642_ap_start = grp_sum_fu_642_ap_start_reg;

assign i0_1_fu_720_p2 = (i3_reg_376 + 3'd1);

assign i0_2_fu_1007_p2 = (i0_3_reg_453 + 3'd1);

assign i0_fu_1287_p2 = (i0_6_reg_518 + 3'd1);

assign i1_1_fu_744_p2 = (i1_reg_387 + 3'd1);

assign i1_3_fu_1325_p2 = (i1_4_reg_529 + 3'd1);

assign i1_5_fu_1049_p2 = (i1_2_reg_464 + 3'd1);

assign i1_cast_fu_734_p1 = i1_reg_387;

assign i20_1_cast_fu_884_p2 = (tmp_23_fu_860_p1 + tmp_fu_856_p1);

assign i20_1_fu_872_p2 = (Y_1_i_reg_398 + iv12_q0);

assign i22_1_cast_fu_1237_p2 = (tmp_43_fu_1213_p1 + tmp_42_fu_1209_p1);

assign i22_1_fu_1225_p2 = (Y_1_i1_reg_497 + iv16_q0);

assign i3_cast_fu_710_p1 = i3_reg_376;

assign i9_cast_fu_1085_p1 = i9_reg_475;

assign i_1_cast_fu_1339_p1 = i_1_reg_540;

assign i_2_fu_1349_p2 = (i_1_reg_540 + 5'd1);

assign i_3_fu_1095_p2 = (i9_reg_475 + 3'd1);

assign i_fu_1463_p2 = (i_4_reg_607 + 4'd1);

assign inputImg_address0 = 10'd0;

assign inputImg_address1 = 10'd0;

assign inputImg_ce0 = 1'b0;

assign inputImg_ce1 = 1'b0;

assign inputImg_d0 = 8'd0;

assign inputImg_d1 = 8'd0;

assign inputImg_we0 = 1'b0;

assign inputImg_we1 = 1'b0;

assign k_1_fu_1392_p2 = (k_i1_reg_562 + 7'd1);

assign k_2_fu_1421_p2 = (k_i2_reg_596 + 7'd1);

assign k_fu_801_p2 = (k_i_reg_408 + 3'd1);

assign l_1_fu_1404_p2 = (l_i1_reg_573 + 4'd1);

assign l_fu_1380_p2 = (l_i_reg_551 + 7'd1);

assign netScores_address0 = tmp_20_reg_1771;

assign netScores_d0 = {{c_assign_1_q0[32:17]}};

assign next_mul_fu_680_p2 = (phi_mul_reg_353 + 13'd168);

assign p_shl10_cast_fu_1075_p1 = p_shl10_fu_1067_p3;

assign p_shl10_fu_1067_p3 = {{i1_2_reg_464}, {1'd0}};

assign p_shl12_cast_fu_1309_p1 = p_shl7_fu_1301_p3;

assign p_shl1_cast_fu_832_p1 = p_shl1_fu_824_p3;

assign p_shl1_fu_824_p3 = {{c_reg_364}, {1'd0}};

assign p_shl2_fu_963_p3 = {{r_2_reg_430}, {7'd0}};

assign p_shl3_cast_fu_979_p1 = p_shl3_fu_971_p3;

assign p_shl3_fu_971_p3 = {{r_2_reg_430}, {5'd0}};

assign p_shl4_cast_fu_1033_p1 = p_shl4_fu_1025_p3;

assign p_shl4_fu_1025_p3 = {{i0_3_reg_453}, {1'd0}};

assign p_shl5_fu_1293_p3 = {{i0_6_reg_518}, {6'd0}};

assign p_shl6_fu_726_p3 = {{i3_reg_376}, {2'd0}};

assign p_shl7_fu_1301_p3 = {{i0_6_reg_518}, {4'd0}};

assign p_shl8_cast_fu_1063_p1 = p_shl8_fu_1055_p3;

assign p_shl8_fu_1055_p3 = {{i1_2_reg_464}, {3'd0}};

assign p_shl9_cast_fu_1021_p1 = p_shl9_fu_1013_p3;

assign p_shl9_fu_1013_p3 = {{i0_3_reg_453}, {5'd0}};

assign p_shl_cast_fu_820_p1 = p_shl_fu_812_p3;

assign p_shl_fu_812_p3 = {{c_reg_364}, {3'd0}};

assign phi_mul_cast_fu_676_p1 = phi_mul_reg_353;

assign phitmp_i_fu_1165_p2 = (3'd1 + ix_reg_486);

assign r_1_fu_692_p2 = (r_reg_342 + 5'd1);

assign r_3_fu_957_p2 = (r_2_reg_430 + 4'd1);

assign storemerge_i1_fu_1449_p3 = ((tmp_41_fu_1431_p3[0:0] === 1'b1) ? tmp_259_i_fu_1439_p2 : tmp_260_i_cast_fu_1445_p1);

assign tmp1_fu_750_p2 = (p_shl6_reg_1542 + i1_cast_fu_734_p1);

assign tmp2_fu_846_p2 = ($signed(tmp_31_cast_fu_842_p1) + $signed(phi_mul_cast_reg_1503));

assign tmp3_cast_fu_1106_p1 = $signed(tmp3_fu_1101_p2);

assign tmp3_fu_1101_p2 = (tmp_31_reg_1643 + i9_cast_fu_1085_p1);

assign tmp4_fu_983_p2 = (p_shl3_cast_fu_979_p1 + p_shl2_fu_963_p3);

assign tmp5_cast_fu_1195_p1 = tmp5_fu_1190_p2;

assign tmp5_fu_1190_p2 = (tmp_28_fu_1182_p3 + f_2_cast_reg_1588);

assign tmp6_fu_1313_p2 = (p_shl12_cast_fu_1309_p1 + p_shl5_fu_1293_p3);

assign tmp7_cast_fu_1360_p1 = tmp7_fu_1355_p2;

assign tmp7_fu_1355_p2 = (tmp_s_reg_1708 + i_1_cast_fu_1339_p1);

assign tmp_13_fu_1037_p2 = (p_shl9_cast_fu_1021_p1 - p_shl4_cast_fu_1033_p1);

assign tmp_15_fu_836_p2 = (p_shl_cast_fu_820_p1 - p_shl1_cast_fu_832_p1);

assign tmp_16_fu_851_p2 = (f_cast_reg_1490 + tmp2_fu_846_p2);

assign tmp_17_fu_930_p1 = $unsigned(tmp_32_cast_fu_927_p1);

assign tmp_189_i_fu_1160_p1 = ix_reg_486;

assign tmp_18_fu_755_p2 = (tmp1_fu_750_p2 + i3_cast_reg_1529);

assign tmp_19_fu_760_p1 = tmp_18_fu_755_p2;

assign tmp_20_fu_1469_p1 = i_4_reg_607;

assign tmp_21_fu_769_p3 = iv12_q0[32'd29];

assign tmp_22_fu_1128_p3 = iv16_q0[32'd40];

assign tmp_23_fu_860_p1 = iv12_q0[29:0];

assign tmp_247_i_fu_807_p1 = k_fu_801_p2;

assign tmp_259_i_fu_1439_p2 = (i26_reg_584 | 64'd18446743798831644672);

assign tmp_25_fu_1364_p2 = (tmp7_cast_fu_1360_p1 + tmp6_reg_1695);

assign tmp_260_i_cast_fu_1445_p1 = tmp_37_fu_1427_p1;

assign tmp_26_fu_1369_p1 = tmp_25_fu_1364_p2;

assign tmp_28_fu_1182_p3 = {{c_2_reg_441}, {4'd0}};

assign tmp_29_fu_1199_p2 = (tmp4_reg_1609 + tmp5_cast_fu_1195_p1);

assign tmp_30_fu_1204_p1 = tmp_29_fu_1199_p2;

assign tmp_31_cast_fu_842_p1 = $signed(tmp_15_fu_836_p2);

assign tmp_31_fu_1079_p2 = (p_shl8_cast_fu_1063_p1 - p_shl10_cast_fu_1075_p1);

assign tmp_32_cast_fu_927_p1 = $signed(tmp_16_reg_1573);

assign tmp_32_fu_1110_p2 = ($signed(tmp3_cast_fu_1106_p1) + $signed(tmp_13_reg_1630));

assign tmp_33_fu_1119_p1 = $unsigned(tmp_58_cast_fu_1115_p1);

assign tmp_34_fu_864_p1 = Y_1_i_reg_398[28:0];

assign tmp_35_fu_868_p1 = iv12_q0[28:0];

assign tmp_36_fu_890_p3 = i20_1_cast_fu_884_p2[32'd29];

assign tmp_37_fu_1427_p1 = i26_reg_584[37:0];

assign tmp_41_fu_1431_p3 = i26_reg_584[32'd38];

assign tmp_42_fu_1209_p1 = Y_1_i1_reg_497[40:0];

assign tmp_43_fu_1213_p1 = iv16_q0[40:0];

assign tmp_44_fu_1217_p1 = Y_1_i1_reg_497[39:0];

assign tmp_45_fu_1221_p1 = iv16_q0[39:0];

assign tmp_46_fu_1243_p3 = i22_1_cast_fu_1237_p2[32'd40];

assign tmp_58_cast_fu_1115_p1 = $signed(tmp_32_fu_1110_p2);

assign tmp_fu_856_p1 = Y_1_i_reg_398[29:0];

assign tmp_i4_fu_1410_p1 = l_i1_reg_573;

assign tmp_s_fu_1331_p3 = {{i1_4_reg_529}, {4'd0}};

always @ (posedge ap_clk) begin
    f_cast_reg_1490[13:3] <= 11'b00000000000;
    phi_mul_cast_reg_1503[13] <= 1'b0;
    i3_cast_reg_1529[4:3] <= 2'b00;
    p_shl6_reg_1542[1:0] <= 2'b00;
    f_2_cast_reg_1588[7:5] <= 3'b000;
    tmp4_reg_1609[4:0] <= 5'b00000;
    tmp_13_reg_1630[0] <= 1'b0;
    tmp_31_reg_1643[0] <= 1'b0;
    tmp6_reg_1695[3:0] <= 4'b0000;
    tmp_s_reg_1708[3:0] <= 4'b0000;
    tmp_20_reg_1771[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //lenetSynthMatlab_fixpt
