// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module g_sum (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_address0,
        X_ce0,
        X_q0,
        Y_address0,
        Y_ce0,
        Y_we0,
        Y_d0
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_state22 = 26'd2097152;
parameter    ap_ST_fsm_state23 = 26'd4194304;
parameter    ap_ST_fsm_state24 = 26'd8388608;
parameter    ap_ST_fsm_state25 = 26'd16777216;
parameter    ap_ST_fsm_state26 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] X_address0;
output   X_ce0;
input  [63:0] X_q0;
output  [3:0] Y_address0;
output   Y_ce0;
output   Y_we0;
output  [63:0] Y_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] X_address0;
reg X_ce0;
reg Y_ce0;
reg Y_we0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] indvars_iv_next2_fu_206_p2;
reg   [4:0] indvars_iv_next2_reg_470;
wire    ap_CS_fsm_state2;
wire   [6:0] tmp_fu_212_p1;
reg   [6:0] tmp_reg_475;
wire   [0:0] exitcond1_fu_200_p2;
wire   [7:0] ix_4_fu_221_p2;
reg   [7:0] ix_4_reg_485;
wire   [6:0] ixstart_cast_fu_227_p2;
wire    ap_CS_fsm_state3;
wire   [63:0] s_5_fu_254_p3;
wire   [6:0] ix_5_fu_268_p2;
reg   [6:0] ix_5_reg_503;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_fu_262_p2;
wire   [31:0] p_s_fu_299_p3;
wire   [0:0] ap_phi_mux_b6_phi_fu_174_p4;
wire   [0:0] tmp_36_fu_275_p2;
wire   [4:0] i_fu_312_p2;
wire   [6:0] indvars_iv_next_fu_318_p2;
wire   [31:0] ixstart_10_cast_fu_359_p1;
wire    ap_CS_fsm_state14;
wire   [31:0] ixstart_9_cast_fu_398_p1;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire   [63:0] s_2_fu_459_p3;
wire    ap_CS_fsm_state26;
reg   [4:0] indvars_iv1_reg_92;
reg   [6:0] indvars_iv_reg_103;
reg   [4:0] iy_reg_115;
reg   [7:0] ix_reg_127;
reg   [63:0] s_1_reg_138;
reg   [31:0] ixstart9_reg_149;
reg  signed [31:0] ixstart_4_reg_182;
reg   [6:0] ix_1_reg_160;
reg   [0:0] b6_reg_169;
wire   [63:0] tmp_s_fu_216_p1;
wire   [63:0] tmp_34_fu_307_p1;
wire  signed [63:0] tmp_39_fu_402_p1;
wire   [6:0] grp_fu_195_p0;
wire   [3:0] grp_fu_195_p1;
wire   [36:0] s_4_fu_232_p1;
wire   [0:0] tmp_52_fu_236_p3;
wire   [63:0] s_3_fu_244_p2;
wire   [63:0] s_4_cast_fu_250_p1;
wire   [31:0] ixstart_7_fu_281_p2;
wire   [0:0] tmp_38_fu_287_p2;
wire   [31:0] ixstart_8_fu_293_p2;
wire   [6:0] grp_fu_195_p2;
wire   [6:0] mul4_fu_333_p1;
wire   [15:0] mul4_fu_333_p2;
wire   [5:0] tmp_56_fu_339_p4;
wire   [6:0] tmp_55_fu_324_p2;
wire  signed [6:0] tmp_29_fu_349_p1;
wire   [6:0] ixstart_6_fu_353_p2;
wire   [6:0] mul_fu_372_p1;
wire   [15:0] mul_fu_372_p2;
wire   [5:0] tmp_54_fu_378_p4;
wire   [6:0] tmp_53_fu_363_p2;
wire  signed [6:0] tmp_28_fu_388_p1;
wire   [6:0] ixstart_fu_392_p2;
wire   [36:0] tmp_60_fu_419_p1;
wire   [36:0] tmp_59_fu_415_p1;
wire   [37:0] tmp_58_fu_411_p1;
wire   [37:0] tmp_57_fu_407_p1;
wire   [37:0] s_6_cast_fu_435_p2;
wire   [63:0] s_6_fu_423_p2;
wire   [36:0] s_8_fu_429_p2;
wire   [0:0] tmp_61_fu_441_p3;
wire   [63:0] s_7_fu_449_p2;
wire   [63:0] s_8_cast_fu_455_p1;
reg    grp_fu_195_ap_start;
wire    grp_fu_195_ap_done;
reg   [25:0] ap_NS_fsm;
wire   [15:0] mul4_fu_333_p10;
wire   [15:0] mul_fu_372_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
end

lenetSynthMatlab_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
lenetSynthMatlab_g8j_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_195_ap_start),
    .done(grp_fu_195_ap_done),
    .din0(grp_fu_195_p0),
    .din1(grp_fu_195_p1),
    .ce(1'b1),
    .dout(grp_fu_195_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        b6_reg_169 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b6_reg_169 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv1_reg_92 <= 5'd0;
    end else if (((exitcond_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        indvars_iv1_reg_92 <= indvars_iv_next2_reg_470;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv_reg_103 <= 7'd4;
    end else if (((exitcond_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        indvars_iv_reg_103 <= indvars_iv_next_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ix_1_reg_160 <= ix_5_reg_503;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ix_1_reg_160 <= ixstart_cast_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_reg_127 <= 8'd255;
    end else if (((exitcond_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ix_reg_127 <= ix_4_reg_485;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ixstart9_reg_149 <= ixstart_4_reg_182;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ixstart9_reg_149 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_b6_phi_fu_174_p4 == 1'd0) & (exitcond_fu_262_p2 == 1'd0) & (tmp_36_fu_275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ixstart_4_reg_182 <= p_s_fu_299_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ixstart_4_reg_182 <= ixstart_10_cast_fu_359_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ixstart_4_reg_182 <= ixstart_9_cast_fu_398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        iy_reg_115 <= 5'd0;
    end else if (((exitcond_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        iy_reg_115 <= i_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        s_1_reg_138 <= s_2_fu_459_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        s_1_reg_138 <= s_5_fu_254_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvars_iv_next2_reg_470 <= indvars_iv_next2_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_4_reg_485 <= ix_4_fu_221_p2;
        tmp_reg_475 <= tmp_fu_212_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_262_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ix_5_reg_503 <= ix_5_fu_268_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        X_address0 = tmp_39_fu_402_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_address0 = tmp_s_fu_216_p1;
    end else begin
        X_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state25))) begin
        X_ce0 = 1'b1;
    end else begin
        X_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Y_ce0 = 1'b1;
    end else begin
        Y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        Y_we0 = 1'b1;
    end else begin
        Y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond1_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_phi_mux_b6_phi_fu_174_p4 == 1'd0) & (exitcond_fu_262_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_36_fu_275_p2 == 1'd1)) | ((ap_phi_mux_b6_phi_fu_174_p4 == 1'd1) & (exitcond_fu_262_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_195_ap_start = 1'b1;
    end else begin
        grp_fu_195_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_phi_mux_b6_phi_fu_174_p4 == 1'd0) & (exitcond_fu_262_p2 == 1'd0) & (tmp_36_fu_275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if (((ap_phi_mux_b6_phi_fu_174_p4 == 1'd0) & (exitcond_fu_262_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_36_fu_275_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Y_address0 = tmp_34_fu_307_p1;

assign Y_d0 = s_1_reg_138;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_phi_mux_b6_phi_fu_174_p4 = b6_reg_169;

assign exitcond1_fu_200_p2 = ((iy_reg_115 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond_fu_262_p2 = ((ix_1_reg_160 == indvars_iv_reg_103) ? 1'b1 : 1'b0);

assign grp_fu_195_p0 = (ix_1_reg_160 + 7'd1);

assign grp_fu_195_p1 = 7'd5;

assign i_fu_312_p2 = (iy_reg_115 + 5'd1);

assign indvars_iv_next2_fu_206_p2 = (indvars_iv1_reg_92 + 5'd1);

assign indvars_iv_next_fu_318_p2 = (indvars_iv_reg_103 + 7'd5);

assign ix_4_fu_221_p2 = (8'd5 + ix_reg_127);

assign ix_5_fu_268_p2 = (ix_1_reg_160 + 7'd1);

assign ixstart_10_cast_fu_359_p1 = ixstart_6_fu_353_p2;

assign ixstart_6_fu_353_p2 = ($signed(tmp_55_fu_324_p2) + $signed(tmp_29_fu_349_p1));

assign ixstart_7_fu_281_p2 = (ixstart9_reg_149 + 32'd16);

assign ixstart_8_fu_293_p2 = ($signed(ixstart9_reg_149) + $signed(32'd4294967233));

assign ixstart_9_cast_fu_398_p1 = ixstart_fu_392_p2;

assign ixstart_cast_fu_227_p2 = (7'd1 + tmp_reg_475);

assign ixstart_fu_392_p2 = ($signed(tmp_53_fu_363_p2) + $signed(tmp_28_fu_388_p1));

assign mul4_fu_333_p1 = mul4_fu_333_p10;

assign mul4_fu_333_p10 = ix_5_reg_503;

assign mul4_fu_333_p2 = (16'd205 * mul4_fu_333_p1);

assign mul_fu_372_p1 = mul_fu_372_p10;

assign mul_fu_372_p10 = ix_5_reg_503;

assign mul_fu_372_p2 = (16'd205 * mul_fu_372_p1);

assign p_s_fu_299_p3 = ((tmp_38_fu_287_p2[0:0] === 1'b1) ? ixstart_8_fu_293_p2 : ixstart_7_fu_281_p2);

assign s_2_fu_459_p3 = ((tmp_61_fu_441_p3[0:0] === 1'b1) ? s_7_fu_449_p2 : s_8_cast_fu_455_p1);

assign s_3_fu_244_p2 = (64'd18446743936270598144 | X_q0);

assign s_4_cast_fu_250_p1 = s_4_fu_232_p1;

assign s_4_fu_232_p1 = X_q0[36:0];

assign s_5_fu_254_p3 = ((tmp_52_fu_236_p3[0:0] === 1'b1) ? s_3_fu_244_p2 : s_4_cast_fu_250_p1);

assign s_6_cast_fu_435_p2 = (tmp_58_fu_411_p1 + tmp_57_fu_407_p1);

assign s_6_fu_423_p2 = (s_1_reg_138 + X_q0);

assign s_7_fu_449_p2 = (s_6_fu_423_p2 | 64'd18446743936270598144);

assign s_8_cast_fu_455_p1 = s_8_fu_429_p2;

assign s_8_fu_429_p2 = (tmp_60_fu_419_p1 + tmp_59_fu_415_p1);

assign tmp_28_fu_388_p1 = $signed(tmp_54_fu_378_p4);

assign tmp_29_fu_349_p1 = $signed(tmp_56_fu_339_p4);

assign tmp_34_fu_307_p1 = iy_reg_115;

assign tmp_36_fu_275_p2 = (($signed(ixstart9_reg_149) > $signed(32'd2147483631)) ? 1'b1 : 1'b0);

assign tmp_38_fu_287_p2 = (($signed(ixstart_7_fu_281_p2) > $signed(32'd79)) ? 1'b1 : 1'b0);

assign tmp_39_fu_402_p1 = ixstart_4_reg_182;

assign tmp_52_fu_236_p3 = X_q0[32'd37];

assign tmp_53_fu_363_p2 = grp_fu_195_p2 << 7'd4;

assign tmp_54_fu_378_p4 = {{mul_fu_372_p2[15:10]}};

assign tmp_55_fu_324_p2 = grp_fu_195_p2 << 7'd4;

assign tmp_56_fu_339_p4 = {{mul4_fu_333_p2[15:10]}};

assign tmp_57_fu_407_p1 = s_1_reg_138[37:0];

assign tmp_58_fu_411_p1 = X_q0[37:0];

assign tmp_59_fu_415_p1 = s_1_reg_138[36:0];

assign tmp_60_fu_419_p1 = X_q0[36:0];

assign tmp_61_fu_441_p3 = s_6_cast_fu_435_p2[32'd37];

assign tmp_fu_212_p1 = ix_reg_127[6:0];

assign tmp_s_fu_216_p1 = indvars_iv1_reg_92;

endmodule //g_sum
