// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sum (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_address0,
        X_ce0,
        X_q0,
        Y_address0,
        Y_ce0,
        Y_we0,
        Y_d0
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] X_address0;
output   X_ce0;
input  [0:0] X_q0;
output  [2:0] Y_address0;
output   Y_ce0;
output   Y_we0;
output  [31:0] Y_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] X_address0;
reg X_ce0;
reg Y_ce0;
reg Y_we0;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] indvars_iv_next2_fu_206_p2;
reg   [2:0] indvars_iv_next2_reg_466;
wire    ap_CS_fsm_state2;
wire   [4:0] tmp_fu_212_p1;
reg   [4:0] tmp_reg_471;
wire   [0:0] exitcond1_fu_200_p2;
wire   [5:0] ix_2_fu_221_p2;
reg   [5:0] ix_2_reg_481;
wire   [4:0] ixstart_cast_fu_227_p2;
wire    ap_CS_fsm_state3;
wire   [31:0] ixstart_5_cast_fu_232_p1;
wire   [4:0] ix_3_fu_242_p2;
reg   [4:0] ix_3_reg_499;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_fu_236_p2;
wire   [31:0] p_s_fu_273_p3;
wire   [0:0] ap_phi_mux_b0_phi_fu_174_p4;
wire   [0:0] tmp_3_fu_249_p2;
wire   [2:0] i_fu_286_p2;
wire   [4:0] indvars_iv_next_fu_292_p2;
reg   [3:0] tmp_15_cast_reg_525;
wire    ap_CS_fsm_state11;
wire   [31:0] i19_2_cast_fu_342_p1;
wire    ap_CS_fsm_state12;
reg   [3:0] tmp_11_cast_reg_535;
wire    ap_CS_fsm_state19;
wire   [31:0] i19_1_cast_fu_390_p1;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [31:0] ixstart_2_fu_455_p3;
wire    ap_CS_fsm_state22;
reg   [2:0] indvars_iv1_reg_92;
reg   [4:0] indvars_iv_reg_103;
reg   [2:0] iy_reg_115;
reg   [5:0] ix_reg_127;
reg   [31:0] i1_reg_138;
reg  signed [31:0] i19_4_reg_182;
reg   [31:0] ixstart_1_reg_149;
reg   [4:0] ix_1_reg_160;
reg   [0:0] b0_reg_169;
wire   [63:0] tmp_4_fu_216_p1;
wire   [63:0] tmp_s_fu_281_p1;
wire  signed [63:0] tmp_5_fu_394_p1;
wire   [4:0] grp_fu_195_p0;
wire   [3:0] grp_fu_195_p1;
wire   [31:0] i19_2_fu_255_p2;
wire   [0:0] tmp_9_fu_261_p2;
wire   [31:0] i19_3_fu_267_p2;
wire   [4:0] mul4_fu_301_p1;
wire   [11:0] mul4_fu_301_p2;
wire   [4:0] grp_fu_195_p2;
wire   [3:0] tmp_8_fu_317_p1;
wire   [3:0] tmp2_fu_327_p2;
wire   [4:0] tmp_11_fu_321_p2;
wire   [4:0] tmp2_cast_fu_332_p1;
wire   [4:0] i19_1_fu_336_p2;
wire   [4:0] mul_fu_349_p1;
wire   [11:0] mul_fu_349_p2;
wire   [3:0] tmp_1_fu_365_p1;
wire   [3:0] tmp1_fu_375_p2;
wire   [4:0] tmp_2_fu_369_p2;
wire   [4:0] tmp1_cast_fu_380_p1;
wire   [4:0] i19_fu_384_p2;
wire   [31:0] extLd_fu_399_p1;
wire   [25:0] tmp_12_fu_415_p1;
wire   [25:0] tmp_14_fu_411_p1;
wire   [26:0] tmp_10_fu_407_p1;
wire   [26:0] tmp_13_fu_403_p1;
wire   [26:0] ixstart_6_cast_fu_431_p2;
wire   [31:0] ixstart_3_fu_419_p2;
wire   [25:0] ixstart_5_fu_425_p2;
wire   [0:0] tmp_15_fu_437_p3;
wire   [31:0] ixstart_4_fu_445_p2;
wire   [31:0] ixstart_8_cast_fu_451_p1;
reg    grp_fu_195_ap_start;
wire    grp_fu_195_ap_done;
reg   [21:0] ap_NS_fsm;
wire   [11:0] mul4_fu_301_p10;
wire   [11:0] mul_fu_349_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
end

lenetSynthMatlab_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 5 ))
lenetSynthMatlab_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_195_ap_start),
    .done(grp_fu_195_ap_done),
    .din0(grp_fu_195_p0),
    .din1(grp_fu_195_p1),
    .ce(1'b1),
    .dout(grp_fu_195_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        b0_reg_169 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b0_reg_169 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_249_p2 == 1'd0) & (ap_phi_mux_b0_phi_fu_174_p4 == 1'd0) & (exitcond_fu_236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i19_4_reg_182 <= p_s_fu_273_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i19_4_reg_182 <= i19_2_cast_fu_342_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i19_4_reg_182 <= i19_1_cast_fu_390_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i1_reg_138 <= i19_4_reg_182;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_reg_138 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv1_reg_92 <= 3'd0;
    end else if (((exitcond_fu_236_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        indvars_iv1_reg_92 <= indvars_iv_next2_reg_466;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv_reg_103 <= 5'd4;
    end else if (((exitcond_fu_236_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        indvars_iv_reg_103 <= indvars_iv_next_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ix_1_reg_160 <= ix_3_reg_499;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ix_1_reg_160 <= ixstart_cast_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_reg_127 <= 6'd63;
    end else if (((exitcond_fu_236_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ix_reg_127 <= ix_2_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ixstart_1_reg_149 <= ixstart_2_fu_455_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ixstart_1_reg_149 <= ixstart_5_cast_fu_232_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        iy_reg_115 <= 3'd0;
    end else if (((exitcond_fu_236_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        iy_reg_115 <= i_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvars_iv_next2_reg_466 <= indvars_iv_next2_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_2_reg_481 <= ix_2_fu_221_p2;
        tmp_reg_471 <= tmp_fu_212_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ix_3_reg_499 <= ix_3_fu_242_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_11_cast_reg_535 <= {{mul_fu_349_p2[11:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_15_cast_reg_525 <= {{mul4_fu_301_p2[11:8]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        X_address0 = tmp_5_fu_394_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_address0 = tmp_4_fu_216_p1;
    end else begin
        X_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state21))) begin
        X_ce0 = 1'b1;
    end else begin
        X_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Y_ce0 = 1'b1;
    end else begin
        Y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_236_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        Y_we0 = 1'b1;
    end else begin
        Y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond1_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_3_fu_249_p2 == 1'd1) & (ap_phi_mux_b0_phi_fu_174_p4 == 1'd0) & (exitcond_fu_236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((ap_phi_mux_b0_phi_fu_174_p4 == 1'd1) & (exitcond_fu_236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_195_ap_start = 1'b1;
    end else begin
        grp_fu_195_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_fu_236_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((tmp_3_fu_249_p2 == 1'd0) & (ap_phi_mux_b0_phi_fu_174_p4 == 1'd0) & (exitcond_fu_236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if (((tmp_3_fu_249_p2 == 1'd1) & (ap_phi_mux_b0_phi_fu_174_p4 == 1'd0) & (exitcond_fu_236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Y_address0 = tmp_s_fu_281_p1;

assign Y_d0 = ixstart_1_reg_149;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_phi_mux_b0_phi_fu_174_p4 = b0_reg_169;

assign exitcond1_fu_200_p2 = ((iy_reg_115 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_fu_236_p2 = ((ix_1_reg_160 == indvars_iv_reg_103) ? 1'b1 : 1'b0);

assign extLd_fu_399_p1 = X_q0;

assign grp_fu_195_p0 = (ix_1_reg_160 + 5'd1);

assign grp_fu_195_p1 = 5'd5;

assign i19_1_cast_fu_390_p1 = i19_fu_384_p2;

assign i19_1_fu_336_p2 = (tmp_11_fu_321_p2 + tmp2_cast_fu_332_p1);

assign i19_2_cast_fu_342_p1 = i19_1_fu_336_p2;

assign i19_2_fu_255_p2 = (i1_reg_138 + 32'd5);

assign i19_3_fu_267_p2 = ($signed(i1_reg_138) + $signed(32'd4294967277));

assign i19_fu_384_p2 = (tmp_2_fu_369_p2 + tmp1_cast_fu_380_p1);

assign i_fu_286_p2 = (iy_reg_115 + 3'd1);

assign indvars_iv_next2_fu_206_p2 = (indvars_iv1_reg_92 + 3'd1);

assign indvars_iv_next_fu_292_p2 = (indvars_iv_reg_103 + 5'd5);

assign ix_2_fu_221_p2 = (6'd5 + ix_reg_127);

assign ix_3_fu_242_p2 = (ix_1_reg_160 + 5'd1);

assign ixstart_2_fu_455_p3 = ((tmp_15_fu_437_p3[0:0] === 1'b1) ? ixstart_4_fu_445_p2 : ixstart_8_cast_fu_451_p1);

assign ixstart_3_fu_419_p2 = (ixstart_1_reg_149 + extLd_fu_399_p1);

assign ixstart_4_fu_445_p2 = (ixstart_3_fu_419_p2 | 32'd4227858432);

assign ixstart_5_cast_fu_232_p1 = X_q0;

assign ixstart_5_fu_425_p2 = (tmp_12_fu_415_p1 + tmp_14_fu_411_p1);

assign ixstart_6_cast_fu_431_p2 = (tmp_10_fu_407_p1 + tmp_13_fu_403_p1);

assign ixstart_8_cast_fu_451_p1 = ixstart_5_fu_425_p2;

assign ixstart_cast_fu_227_p2 = (5'd1 + tmp_reg_471);

assign mul4_fu_301_p1 = mul4_fu_301_p10;

assign mul4_fu_301_p10 = ix_3_reg_499;

assign mul4_fu_301_p2 = (12'd52 * mul4_fu_301_p1);

assign mul_fu_349_p1 = mul_fu_349_p10;

assign mul_fu_349_p10 = ix_3_reg_499;

assign mul_fu_349_p2 = (12'd52 * mul_fu_349_p1);

assign p_s_fu_273_p3 = ((tmp_9_fu_261_p2[0:0] === 1'b1) ? i19_3_fu_267_p2 : i19_2_fu_255_p2);

assign tmp1_cast_fu_380_p1 = tmp1_fu_375_p2;

assign tmp1_fu_375_p2 = (tmp_11_cast_reg_535 + tmp_1_fu_365_p1);

assign tmp2_cast_fu_332_p1 = tmp2_fu_327_p2;

assign tmp2_fu_327_p2 = (tmp_15_cast_reg_525 + tmp_8_fu_317_p1);

assign tmp_10_fu_407_p1 = X_q0;

assign tmp_11_fu_321_p2 = grp_fu_195_p2 << 5'd2;

assign tmp_12_fu_415_p1 = X_q0;

assign tmp_13_fu_403_p1 = ixstart_1_reg_149[26:0];

assign tmp_14_fu_411_p1 = ixstart_1_reg_149[25:0];

assign tmp_15_fu_437_p3 = ixstart_6_cast_fu_431_p2[32'd26];

assign tmp_1_fu_365_p1 = grp_fu_195_p2[3:0];

assign tmp_2_fu_369_p2 = grp_fu_195_p2 << 5'd2;

assign tmp_3_fu_249_p2 = (($signed(i1_reg_138) > $signed(32'd2147483642)) ? 1'b1 : 1'b0);

assign tmp_4_fu_216_p1 = indvars_iv1_reg_92;

assign tmp_5_fu_394_p1 = i19_4_reg_182;

assign tmp_8_fu_317_p1 = grp_fu_195_p2[3:0];

assign tmp_9_fu_261_p2 = (($signed(i19_2_fu_255_p2) > $signed(32'd24)) ? 1'b1 : 1'b0);

assign tmp_fu_212_p1 = ix_reg_127[4:0];

assign tmp_s_fu_281_p1 = iy_reg_115;

endmodule //sum
