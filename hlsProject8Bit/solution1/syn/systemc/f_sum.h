// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _f_sum_HH_
#define _f_sum_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenetSynthMatlab_bkb.h"

namespace ap_rtl {

struct f_sum : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > x_address0;
    sc_out< sc_logic > x_ce0;
    sc_in< sc_lv<32> > x_q0;
    sc_out< sc_lv<7> > y_address0;
    sc_out< sc_logic > y_ce0;
    sc_out< sc_logic > y_we0;
    sc_out< sc_lv<32> > y_d0;
    sc_in< sc_lv<32> > y_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    f_sum(sc_module_name name);
    SC_HAS_PROCESS(f_sum);

    ~f_sum();

    sc_trace_file* mVcdFile;

    lenetSynthMatlab_bkb<1,5,32,32,32>* lenetSynthMatlab_bkb_U11;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > k_25_fu_144_p2;
    sc_signal< sc_lv<3> > k_25_reg_293;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > tmp_fu_150_p3;
    sc_signal< sc_lv<7> > tmp_reg_298;
    sc_signal< sc_lv<1> > exitcond4_fu_138_p2;
    sc_signal< sc_lv<5> > b_k_10_fu_168_p2;
    sc_signal< sc_lv<5> > b_k_10_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_138_fu_179_p1;
    sc_signal< sc_lv<64> > tmp_138_reg_311;
    sc_signal< sc_lv<1> > exitcond3_fu_162_p2;
    sc_signal< sc_lv<3> > k_26_fu_190_p2;
    sc_signal< sc_lv<3> > k_26_reg_324;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > tmp_154_fu_196_p1;
    sc_signal< sc_lv<2> > tmp_154_reg_329;
    sc_signal< sc_lv<1> > exitcond2_fu_184_p2;
    sc_signal< sc_lv<3> > b_k_11_fu_206_p2;
    sc_signal< sc_lv<3> > b_k_11_reg_338;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > tmp_139_fu_212_p3;
    sc_signal< sc_lv<7> > tmp_139_reg_343;
    sc_signal< sc_lv<1> > exitcond1_fu_200_p2;
    sc_signal< sc_lv<8> > tmp_142_cast_fu_220_p1;
    sc_signal< sc_lv<8> > tmp_142_cast_reg_348;
    sc_signal< sc_lv<5> > c_k_1_fu_234_p2;
    sc_signal< sc_lv<5> > c_k_1_reg_356;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<9> > tmp_140_fu_271_p2;
    sc_signal< sc_lv<9> > tmp_140_reg_361;
    sc_signal< sc_lv<1> > exitcond_fu_228_p2;
    sc_signal< sc_lv<7> > tmp_142_fu_277_p2;
    sc_signal< sc_lv<7> > tmp_142_reg_366;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<7> > y_addr_3_reg_376;
    sc_signal< sc_lv<32> > x_load_3_reg_381;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > y_load_reg_386;
    sc_signal< sc_lv<32> > grp_fu_134_p2;
    sc_signal< sc_lv<32> > tmp_144_reg_391;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<3> > k_reg_79;
    sc_signal< sc_lv<5> > b_k_reg_90;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > k_1_reg_101;
    sc_signal< sc_lv<3> > b_k_1_reg_112;
    sc_signal< sc_lv<5> > c_k_reg_123;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > tmp_141_fu_282_p1;
    sc_signal< sc_lv<64> > tmp_143_fu_286_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<7> > b_k_cast8_fu_158_p1;
    sc_signal< sc_lv<7> > tmp_s_fu_174_p2;
    sc_signal< sc_lv<8> > tmp1_fu_240_p4;
    sc_signal< sc_lv<7> > c_k_cast4_fu_224_p1;
    sc_signal< sc_lv<7> > tmp3_fu_252_p2;
    sc_signal< sc_lv<8> > tmp3_cast_fu_258_p1;
    sc_signal< sc_lv<8> > tmp2_fu_262_p2;
    sc_signal< sc_lv<9> > tmp2_cast_fu_267_p1;
    sc_signal< sc_lv<9> > tmp1_cast_fu_248_p1;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<7> ap_const_lv7_50;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_k_10_fu_168_p2();
    void thread_b_k_11_fu_206_p2();
    void thread_b_k_cast8_fu_158_p1();
    void thread_c_k_1_fu_234_p2();
    void thread_c_k_cast4_fu_224_p1();
    void thread_exitcond1_fu_200_p2();
    void thread_exitcond2_fu_184_p2();
    void thread_exitcond3_fu_162_p2();
    void thread_exitcond4_fu_138_p2();
    void thread_exitcond_fu_228_p2();
    void thread_k_25_fu_144_p2();
    void thread_k_26_fu_190_p2();
    void thread_tmp1_cast_fu_248_p1();
    void thread_tmp1_fu_240_p4();
    void thread_tmp2_cast_fu_267_p1();
    void thread_tmp2_fu_262_p2();
    void thread_tmp3_cast_fu_258_p1();
    void thread_tmp3_fu_252_p2();
    void thread_tmp_138_fu_179_p1();
    void thread_tmp_139_fu_212_p3();
    void thread_tmp_140_fu_271_p2();
    void thread_tmp_141_fu_282_p1();
    void thread_tmp_142_cast_fu_220_p1();
    void thread_tmp_142_fu_277_p2();
    void thread_tmp_143_fu_286_p1();
    void thread_tmp_154_fu_196_p1();
    void thread_tmp_fu_150_p3();
    void thread_tmp_s_fu_174_p2();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_y_address0();
    void thread_y_ce0();
    void thread_y_d0();
    void thread_y_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
