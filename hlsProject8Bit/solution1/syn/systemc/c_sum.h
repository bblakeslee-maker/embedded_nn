// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _c_sum_HH_
#define _c_sum_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenetSynthMatlab_bkb.h"

namespace ap_rtl {

struct c_sum : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > x_address0;
    sc_out< sc_logic > x_ce0;
    sc_in< sc_lv<32> > x_q0;
    sc_out< sc_lv<5> > y_address0;
    sc_out< sc_logic > y_ce0;
    sc_out< sc_logic > y_we0;
    sc_out< sc_lv<32> > y_d0;
    sc_in< sc_lv<32> > y_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    c_sum(sc_module_name name);
    SC_HAS_PROCESS(c_sum);

    ~c_sum();

    sc_trace_file* mVcdFile;

    lenetSynthMatlab_bkb<1,5,32,32,32>* lenetSynthMatlab_bkb_U5;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > k_29_fu_144_p2;
    sc_signal< sc_lv<3> > k_29_reg_366;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > tmp_fu_174_p2;
    sc_signal< sc_lv<7> > tmp_reg_371;
    sc_signal< sc_lv<1> > exitcond4_fu_138_p2;
    sc_signal< sc_lv<3> > b_k_13_fu_190_p2;
    sc_signal< sc_lv<3> > b_k_13_reg_379;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_150_fu_205_p1;
    sc_signal< sc_lv<64> > tmp_150_reg_384;
    sc_signal< sc_lv<1> > exitcond3_fu_184_p2;
    sc_signal< sc_lv<3> > k_30_fu_216_p2;
    sc_signal< sc_lv<3> > k_30_reg_397;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > tmp_cast_fu_254_p1;
    sc_signal< sc_lv<9> > tmp_cast_reg_402;
    sc_signal< sc_lv<1> > exitcond2_fu_210_p2;
    sc_signal< sc_lv<3> > b_k_14_fu_264_p2;
    sc_signal< sc_lv<3> > b_k_14_reg_410;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > tmp_151_fu_294_p2;
    sc_signal< sc_lv<7> > tmp_151_reg_415;
    sc_signal< sc_lv<1> > exitcond1_fu_258_p2;
    sc_signal< sc_lv<9> > tmp1_fu_304_p2;
    sc_signal< sc_lv<9> > tmp1_reg_420;
    sc_signal< sc_lv<3> > c_k_2_fu_323_p2;
    sc_signal< sc_lv<3> > c_k_2_reg_428;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond_fu_317_p2;
    sc_signal< sc_lv<5> > y_addr_5_reg_438;
    sc_signal< sc_lv<32> > x_load_5_reg_443;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > y_load_reg_448;
    sc_signal< sc_lv<32> > grp_fu_134_p2;
    sc_signal< sc_lv<32> > tmp_156_reg_453;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<3> > k_reg_79;
    sc_signal< sc_lv<3> > b_k_reg_90;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > k_1_reg_101;
    sc_signal< sc_lv<3> > b_k_1_reg_112;
    sc_signal< sc_lv<3> > c_k_reg_123;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > tmp_153_fu_344_p1;
    sc_signal< sc_lv<64> > tmp_155_fu_358_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<6> > p_shl_fu_150_p3;
    sc_signal< sc_lv<4> > p_shl9_fu_162_p3;
    sc_signal< sc_lv<7> > p_shl_cast_fu_158_p1;
    sc_signal< sc_lv<7> > p_shl9_cast_fu_170_p1;
    sc_signal< sc_lv<7> > b_k_cast7_fu_180_p1;
    sc_signal< sc_lv<7> > tmp_149_fu_196_p2;
    sc_signal< sc_lv<32> > tmp_155_cast_fu_201_p1;
    sc_signal< sc_lv<2> > tmp_157_fu_222_p1;
    sc_signal< sc_lv<7> > p_shl10_fu_226_p3;
    sc_signal< sc_lv<3> > tmp_158_fu_238_p2;
    sc_signal< sc_lv<8> > p_shl10_cast_fu_234_p1;
    sc_signal< sc_lv<8> > p_shl11_cast_fu_244_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_248_p2;
    sc_signal< sc_lv<6> > p_shl12_fu_270_p3;
    sc_signal< sc_lv<4> > p_shl13_fu_282_p3;
    sc_signal< sc_lv<7> > p_shl12_cast_fu_278_p1;
    sc_signal< sc_lv<7> > p_shl13_cast_fu_290_p1;
    sc_signal< sc_lv<9> > tmp_157_cast_fu_300_p1;
    sc_signal< sc_lv<6> > c_k_cast3_fu_313_p1;
    sc_signal< sc_lv<6> > tmp2_fu_329_p2;
    sc_signal< sc_lv<9> > tmp2_cast_fu_335_p1;
    sc_signal< sc_lv<9> > tmp_152_fu_339_p2;
    sc_signal< sc_lv<7> > c_k_cast4_fu_309_p1;
    sc_signal< sc_lv<7> > tmp_154_fu_349_p2;
    sc_signal< sc_lv<32> > tmp_161_cast_fu_354_p1;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_1E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_k_13_fu_190_p2();
    void thread_b_k_14_fu_264_p2();
    void thread_b_k_cast7_fu_180_p1();
    void thread_c_k_2_fu_323_p2();
    void thread_c_k_cast3_fu_313_p1();
    void thread_c_k_cast4_fu_309_p1();
    void thread_exitcond1_fu_258_p2();
    void thread_exitcond2_fu_210_p2();
    void thread_exitcond3_fu_184_p2();
    void thread_exitcond4_fu_138_p2();
    void thread_exitcond_fu_317_p2();
    void thread_k_29_fu_144_p2();
    void thread_k_30_fu_216_p2();
    void thread_p_shl10_cast_fu_234_p1();
    void thread_p_shl10_fu_226_p3();
    void thread_p_shl11_cast_fu_244_p1();
    void thread_p_shl12_cast_fu_278_p1();
    void thread_p_shl12_fu_270_p3();
    void thread_p_shl13_cast_fu_290_p1();
    void thread_p_shl13_fu_282_p3();
    void thread_p_shl9_cast_fu_170_p1();
    void thread_p_shl9_fu_162_p3();
    void thread_p_shl_cast_fu_158_p1();
    void thread_p_shl_fu_150_p3();
    void thread_tmp1_fu_304_p2();
    void thread_tmp2_cast_fu_335_p1();
    void thread_tmp2_fu_329_p2();
    void thread_tmp_149_fu_196_p2();
    void thread_tmp_150_fu_205_p1();
    void thread_tmp_151_fu_294_p2();
    void thread_tmp_152_fu_339_p2();
    void thread_tmp_153_fu_344_p1();
    void thread_tmp_154_fu_349_p2();
    void thread_tmp_155_cast_fu_201_p1();
    void thread_tmp_155_fu_358_p1();
    void thread_tmp_157_cast_fu_300_p1();
    void thread_tmp_157_fu_222_p1();
    void thread_tmp_158_fu_238_p2();
    void thread_tmp_161_cast_fu_354_p1();
    void thread_tmp_cast_fu_254_p1();
    void thread_tmp_fu_174_p2();
    void thread_tmp_s_fu_248_p2();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_y_address0();
    void thread_y_ce0();
    void thread_y_d0();
    void thread_y_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
