// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _d_sum_HH_
#define _d_sum_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenetSynthMatlab_bkb.h"

namespace ap_rtl {

struct d_sum : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > x_address0;
    sc_out< sc_logic > x_ce0;
    sc_in< sc_lv<32> > x_q0;
    sc_out< sc_lv<3> > y_address0;
    sc_out< sc_logic > y_ce0;
    sc_out< sc_logic > y_we0;
    sc_out< sc_lv<32> > y_d0;
    sc_in< sc_lv<32> > y_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    d_sum(sc_module_name name);
    SC_HAS_PROCESS(d_sum);

    ~d_sum();

    sc_trace_file* mVcdFile;

    lenetSynthMatlab_bkb<1,5,32,32,32>* lenetSynthMatlab_bkb_U8;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > k_27_fu_110_p2;
    sc_signal< sc_lv<3> > k_27_reg_209;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > tmp_fu_116_p1;
    sc_signal< sc_lv<64> > tmp_reg_214;
    sc_signal< sc_lv<1> > exitcond2_fu_104_p2;
    sc_signal< sc_lv<3> > k_28_fu_127_p2;
    sc_signal< sc_lv<3> > k_28_reg_227;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > tmp_s_fu_159_p2;
    sc_signal< sc_lv<6> > tmp_s_reg_232;
    sc_signal< sc_lv<1> > exitcond1_fu_121_p2;
    sc_signal< sc_lv<3> > b_k_12_fu_175_p2;
    sc_signal< sc_lv<3> > b_k_12_reg_240;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_169_p2;
    sc_signal< sc_lv<3> > y_addr_4_reg_250;
    sc_signal< sc_lv<32> > x_load_4_reg_255;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > y_load_reg_260;
    sc_signal< sc_lv<32> > grp_fu_100_p2;
    sc_signal< sc_lv<32> > tmp_168_reg_265;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<3> > k_reg_67;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > k_1_reg_78;
    sc_signal< sc_lv<3> > b_k_reg_89;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<64> > tmp_166_fu_196_p1;
    sc_signal< sc_lv<64> > tmp_167_fu_201_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > tmp_171_fu_133_p1;
    sc_signal< sc_lv<5> > p_shl_fu_137_p3;
    sc_signal< sc_lv<3> > tmp_172_fu_149_p2;
    sc_signal< sc_lv<6> > p_shl_cast_fu_145_p1;
    sc_signal< sc_lv<6> > p_shl9_cast_fu_155_p1;
    sc_signal< sc_lv<4> > b_k_cast_fu_165_p1;
    sc_signal< sc_lv<4> > tmp1_fu_181_p2;
    sc_signal< sc_lv<6> > tmp1_cast_fu_187_p1;
    sc_signal< sc_lv<6> > tmp_165_fu_191_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<4> ap_const_lv4_6;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_k_12_fu_175_p2();
    void thread_b_k_cast_fu_165_p1();
    void thread_exitcond1_fu_121_p2();
    void thread_exitcond2_fu_104_p2();
    void thread_exitcond_fu_169_p2();
    void thread_k_27_fu_110_p2();
    void thread_k_28_fu_127_p2();
    void thread_p_shl9_cast_fu_155_p1();
    void thread_p_shl_cast_fu_145_p1();
    void thread_p_shl_fu_137_p3();
    void thread_tmp1_cast_fu_187_p1();
    void thread_tmp1_fu_181_p2();
    void thread_tmp_165_fu_191_p2();
    void thread_tmp_166_fu_196_p1();
    void thread_tmp_167_fu_201_p1();
    void thread_tmp_171_fu_133_p1();
    void thread_tmp_172_fu_149_p2();
    void thread_tmp_fu_116_p1();
    void thread_tmp_s_fu_159_p2();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_y_address0();
    void thread_y_ce0();
    void thread_y_d0();
    void thread_y_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
