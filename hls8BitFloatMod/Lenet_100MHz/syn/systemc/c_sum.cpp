// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "c_sum.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic c_sum::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic c_sum::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> c_sum::ap_ST_fsm_state1 = "1";
const sc_lv<14> c_sum::ap_ST_fsm_state2 = "10";
const sc_lv<14> c_sum::ap_ST_fsm_state3 = "100";
const sc_lv<14> c_sum::ap_ST_fsm_state4 = "1000";
const sc_lv<14> c_sum::ap_ST_fsm_state5 = "10000";
const sc_lv<14> c_sum::ap_ST_fsm_state6 = "100000";
const sc_lv<14> c_sum::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> c_sum::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> c_sum::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> c_sum::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> c_sum::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> c_sum::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> c_sum::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> c_sum::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> c_sum::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> c_sum::ap_const_lv32_1 = "1";
const sc_lv<1> c_sum::ap_const_lv1_0 = "0";
const sc_lv<32> c_sum::ap_const_lv32_2 = "10";
const sc_lv<32> c_sum::ap_const_lv32_4 = "100";
const sc_lv<32> c_sum::ap_const_lv32_5 = "101";
const sc_lv<32> c_sum::ap_const_lv32_6 = "110";
const sc_lv<32> c_sum::ap_const_lv32_7 = "111";
const sc_lv<32> c_sum::ap_const_lv32_C = "1100";
const sc_lv<3> c_sum::ap_const_lv3_0 = "000";
const sc_lv<1> c_sum::ap_const_lv1_1 = "1";
const sc_lv<32> c_sum::ap_const_lv32_3 = "11";
const sc_lv<32> c_sum::ap_const_lv32_D = "1101";
const sc_lv<32> c_sum::ap_const_lv32_8 = "1000";
const sc_lv<3> c_sum::ap_const_lv3_5 = "101";
const sc_lv<3> c_sum::ap_const_lv3_1 = "1";
const sc_lv<3> c_sum::ap_const_lv3_6 = "110";
const sc_lv<3> c_sum::ap_const_lv3_4 = "100";
const sc_lv<5> c_sum::ap_const_lv5_0 = "00000";
const sc_lv<6> c_sum::ap_const_lv6_1E = "11110";
const bool c_sum::ap_const_boolean_1 = true;

c_sum::c_sum(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenetSynthMatlab_bkb_U5 = new lenetSynthMatlab_bkb<1,5,32,32,32>("lenetSynthMatlab_bkb_U5");
    lenetSynthMatlab_bkb_U5->clk(ap_clk);
    lenetSynthMatlab_bkb_U5->reset(ap_rst);
    lenetSynthMatlab_bkb_U5->din0(y_load_reg_448);
    lenetSynthMatlab_bkb_U5->din1(x_load_5_reg_443);
    lenetSynthMatlab_bkb_U5->ce(ap_var_for_const0);
    lenetSynthMatlab_bkb_U5->dout(grp_fu_134_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_210_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_210_p2 );

    SC_METHOD(thread_b_k_13_fu_190_p2);
    sensitive << ( b_k_reg_90 );

    SC_METHOD(thread_b_k_14_fu_264_p2);
    sensitive << ( b_k_1_reg_112 );

    SC_METHOD(thread_b_k_cast7_fu_180_p1);
    sensitive << ( b_k_reg_90 );

    SC_METHOD(thread_c_k_2_fu_323_p2);
    sensitive << ( c_k_reg_123 );

    SC_METHOD(thread_c_k_cast3_fu_313_p1);
    sensitive << ( c_k_reg_123 );

    SC_METHOD(thread_c_k_cast4_fu_309_p1);
    sensitive << ( c_k_reg_123 );

    SC_METHOD(thread_exitcond1_fu_258_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( b_k_1_reg_112 );

    SC_METHOD(thread_exitcond2_fu_210_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( k_1_reg_101 );

    SC_METHOD(thread_exitcond3_fu_184_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( b_k_reg_90 );

    SC_METHOD(thread_exitcond4_fu_138_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_reg_79 );

    SC_METHOD(thread_exitcond_fu_317_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( c_k_reg_123 );

    SC_METHOD(thread_k_29_fu_144_p2);
    sensitive << ( k_reg_79 );

    SC_METHOD(thread_k_30_fu_216_p2);
    sensitive << ( k_1_reg_101 );

    SC_METHOD(thread_p_shl10_cast_fu_234_p1);
    sensitive << ( p_shl10_fu_226_p3 );

    SC_METHOD(thread_p_shl10_fu_226_p3);
    sensitive << ( tmp_177_fu_222_p1 );

    SC_METHOD(thread_p_shl11_cast_fu_244_p1);
    sensitive << ( tmp_178_fu_238_p2 );

    SC_METHOD(thread_p_shl12_cast_fu_278_p1);
    sensitive << ( p_shl12_fu_270_p3 );

    SC_METHOD(thread_p_shl12_fu_270_p3);
    sensitive << ( b_k_1_reg_112 );

    SC_METHOD(thread_p_shl13_cast_fu_290_p1);
    sensitive << ( p_shl13_fu_282_p3 );

    SC_METHOD(thread_p_shl13_fu_282_p3);
    sensitive << ( b_k_1_reg_112 );

    SC_METHOD(thread_p_shl9_cast_fu_170_p1);
    sensitive << ( p_shl9_fu_162_p3 );

    SC_METHOD(thread_p_shl9_fu_162_p3);
    sensitive << ( k_reg_79 );

    SC_METHOD(thread_p_shl_cast_fu_158_p1);
    sensitive << ( p_shl_fu_150_p3 );

    SC_METHOD(thread_p_shl_fu_150_p3);
    sensitive << ( k_reg_79 );

    SC_METHOD(thread_tmp1_fu_304_p2);
    sensitive << ( tmp_cast_reg_402 );
    sensitive << ( tmp_177_cast_fu_300_p1 );

    SC_METHOD(thread_tmp2_cast_fu_335_p1);
    sensitive << ( tmp2_fu_329_p2 );

    SC_METHOD(thread_tmp2_fu_329_p2);
    sensitive << ( c_k_cast3_fu_313_p1 );

    SC_METHOD(thread_tmp_169_fu_196_p2);
    sensitive << ( tmp_reg_371 );
    sensitive << ( b_k_cast7_fu_180_p1 );

    SC_METHOD(thread_tmp_170_fu_205_p1);
    sensitive << ( tmp_175_cast_fu_201_p1 );

    SC_METHOD(thread_tmp_171_fu_294_p2);
    sensitive << ( p_shl12_cast_fu_278_p1 );
    sensitive << ( p_shl13_cast_fu_290_p1 );

    SC_METHOD(thread_tmp_172_fu_339_p2);
    sensitive << ( tmp1_reg_420 );
    sensitive << ( tmp2_cast_fu_335_p1 );

    SC_METHOD(thread_tmp_173_fu_344_p1);
    sensitive << ( tmp_172_fu_339_p2 );

    SC_METHOD(thread_tmp_174_fu_349_p2);
    sensitive << ( tmp_171_reg_415 );
    sensitive << ( c_k_cast4_fu_309_p1 );

    SC_METHOD(thread_tmp_175_cast_fu_201_p1);
    sensitive << ( tmp_169_fu_196_p2 );

    SC_METHOD(thread_tmp_175_fu_358_p1);
    sensitive << ( tmp_181_cast_fu_354_p1 );

    SC_METHOD(thread_tmp_177_cast_fu_300_p1);
    sensitive << ( tmp_171_fu_294_p2 );

    SC_METHOD(thread_tmp_177_fu_222_p1);
    sensitive << ( k_1_reg_101 );

    SC_METHOD(thread_tmp_178_fu_238_p2);
    sensitive << ( k_1_reg_101 );

    SC_METHOD(thread_tmp_181_cast_fu_354_p1);
    sensitive << ( tmp_174_fu_349_p2 );

    SC_METHOD(thread_tmp_cast_fu_254_p1);
    sensitive << ( tmp_s_fu_248_p2 );

    SC_METHOD(thread_tmp_fu_174_p2);
    sensitive << ( p_shl_cast_fu_158_p1 );
    sensitive << ( p_shl9_cast_fu_170_p1 );

    SC_METHOD(thread_tmp_s_fu_248_p2);
    sensitive << ( p_shl10_cast_fu_234_p1 );
    sensitive << ( p_shl11_cast_fu_244_p1 );

    SC_METHOD(thread_x_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_170_fu_205_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_173_fu_344_p1 );

    SC_METHOD(thread_x_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_y_address0);
    sensitive << ( tmp_170_reg_384 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( y_addr_5_reg_438 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_175_fu_358_p1 );

    SC_METHOD(thread_y_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_y_d0);
    sensitive << ( x_q0 );
    sensitive << ( tmp_176_reg_453 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_y_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_138_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_184_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_210_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_258_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_317_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "c_sum_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_address0, "(port)x_address0");
    sc_trace(mVcdFile, x_ce0, "(port)x_ce0");
    sc_trace(mVcdFile, x_q0, "(port)x_q0");
    sc_trace(mVcdFile, y_address0, "(port)y_address0");
    sc_trace(mVcdFile, y_ce0, "(port)y_ce0");
    sc_trace(mVcdFile, y_we0, "(port)y_we0");
    sc_trace(mVcdFile, y_d0, "(port)y_d0");
    sc_trace(mVcdFile, y_q0, "(port)y_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, k_29_fu_144_p2, "k_29_fu_144_p2");
    sc_trace(mVcdFile, k_29_reg_366, "k_29_reg_366");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_174_p2, "tmp_fu_174_p2");
    sc_trace(mVcdFile, tmp_reg_371, "tmp_reg_371");
    sc_trace(mVcdFile, exitcond4_fu_138_p2, "exitcond4_fu_138_p2");
    sc_trace(mVcdFile, b_k_13_fu_190_p2, "b_k_13_fu_190_p2");
    sc_trace(mVcdFile, b_k_13_reg_379, "b_k_13_reg_379");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_170_fu_205_p1, "tmp_170_fu_205_p1");
    sc_trace(mVcdFile, tmp_170_reg_384, "tmp_170_reg_384");
    sc_trace(mVcdFile, exitcond3_fu_184_p2, "exitcond3_fu_184_p2");
    sc_trace(mVcdFile, k_30_fu_216_p2, "k_30_fu_216_p2");
    sc_trace(mVcdFile, k_30_reg_397, "k_30_reg_397");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_cast_fu_254_p1, "tmp_cast_fu_254_p1");
    sc_trace(mVcdFile, tmp_cast_reg_402, "tmp_cast_reg_402");
    sc_trace(mVcdFile, exitcond2_fu_210_p2, "exitcond2_fu_210_p2");
    sc_trace(mVcdFile, b_k_14_fu_264_p2, "b_k_14_fu_264_p2");
    sc_trace(mVcdFile, b_k_14_reg_410, "b_k_14_reg_410");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_171_fu_294_p2, "tmp_171_fu_294_p2");
    sc_trace(mVcdFile, tmp_171_reg_415, "tmp_171_reg_415");
    sc_trace(mVcdFile, exitcond1_fu_258_p2, "exitcond1_fu_258_p2");
    sc_trace(mVcdFile, tmp1_fu_304_p2, "tmp1_fu_304_p2");
    sc_trace(mVcdFile, tmp1_reg_420, "tmp1_reg_420");
    sc_trace(mVcdFile, c_k_2_fu_323_p2, "c_k_2_fu_323_p2");
    sc_trace(mVcdFile, c_k_2_reg_428, "c_k_2_reg_428");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond_fu_317_p2, "exitcond_fu_317_p2");
    sc_trace(mVcdFile, y_addr_5_reg_438, "y_addr_5_reg_438");
    sc_trace(mVcdFile, x_load_5_reg_443, "x_load_5_reg_443");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, y_load_reg_448, "y_load_reg_448");
    sc_trace(mVcdFile, grp_fu_134_p2, "grp_fu_134_p2");
    sc_trace(mVcdFile, tmp_176_reg_453, "tmp_176_reg_453");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, k_reg_79, "k_reg_79");
    sc_trace(mVcdFile, b_k_reg_90, "b_k_reg_90");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, k_1_reg_101, "k_1_reg_101");
    sc_trace(mVcdFile, b_k_1_reg_112, "b_k_1_reg_112");
    sc_trace(mVcdFile, c_k_reg_123, "c_k_reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_173_fu_344_p1, "tmp_173_fu_344_p1");
    sc_trace(mVcdFile, tmp_175_fu_358_p1, "tmp_175_fu_358_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, p_shl_fu_150_p3, "p_shl_fu_150_p3");
    sc_trace(mVcdFile, p_shl9_fu_162_p3, "p_shl9_fu_162_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_158_p1, "p_shl_cast_fu_158_p1");
    sc_trace(mVcdFile, p_shl9_cast_fu_170_p1, "p_shl9_cast_fu_170_p1");
    sc_trace(mVcdFile, b_k_cast7_fu_180_p1, "b_k_cast7_fu_180_p1");
    sc_trace(mVcdFile, tmp_169_fu_196_p2, "tmp_169_fu_196_p2");
    sc_trace(mVcdFile, tmp_175_cast_fu_201_p1, "tmp_175_cast_fu_201_p1");
    sc_trace(mVcdFile, tmp_177_fu_222_p1, "tmp_177_fu_222_p1");
    sc_trace(mVcdFile, p_shl10_fu_226_p3, "p_shl10_fu_226_p3");
    sc_trace(mVcdFile, tmp_178_fu_238_p2, "tmp_178_fu_238_p2");
    sc_trace(mVcdFile, p_shl10_cast_fu_234_p1, "p_shl10_cast_fu_234_p1");
    sc_trace(mVcdFile, p_shl11_cast_fu_244_p1, "p_shl11_cast_fu_244_p1");
    sc_trace(mVcdFile, tmp_s_fu_248_p2, "tmp_s_fu_248_p2");
    sc_trace(mVcdFile, p_shl12_fu_270_p3, "p_shl12_fu_270_p3");
    sc_trace(mVcdFile, p_shl13_fu_282_p3, "p_shl13_fu_282_p3");
    sc_trace(mVcdFile, p_shl12_cast_fu_278_p1, "p_shl12_cast_fu_278_p1");
    sc_trace(mVcdFile, p_shl13_cast_fu_290_p1, "p_shl13_cast_fu_290_p1");
    sc_trace(mVcdFile, tmp_177_cast_fu_300_p1, "tmp_177_cast_fu_300_p1");
    sc_trace(mVcdFile, c_k_cast3_fu_313_p1, "c_k_cast3_fu_313_p1");
    sc_trace(mVcdFile, tmp2_fu_329_p2, "tmp2_fu_329_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_335_p1, "tmp2_cast_fu_335_p1");
    sc_trace(mVcdFile, tmp_172_fu_339_p2, "tmp_172_fu_339_p2");
    sc_trace(mVcdFile, c_k_cast4_fu_309_p1, "c_k_cast4_fu_309_p1");
    sc_trace(mVcdFile, tmp_174_fu_349_p2, "tmp_174_fu_349_p2");
    sc_trace(mVcdFile, tmp_181_cast_fu_354_p1, "tmp_181_cast_fu_354_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

c_sum::~c_sum() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenetSynthMatlab_bkb_U5;
}

void c_sum::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void c_sum::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_317_p2.read(), ap_const_lv1_1))) {
        b_k_1_reg_112 = b_k_14_reg_410.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_fu_210_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        b_k_1_reg_112 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_138_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        b_k_reg_90 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        b_k_reg_90 = b_k_13_reg_379.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_258_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        c_k_reg_123 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        c_k_reg_123 = c_k_2_reg_428.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_138_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        k_1_reg_101 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(exitcond1_fu_258_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        k_1_reg_101 = k_30_reg_397.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_184_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        k_reg_79 = k_29_reg_366.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_reg_79 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        b_k_13_reg_379 = b_k_13_fu_190_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        b_k_14_reg_410 = b_k_14_fu_264_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c_k_2_reg_428 = c_k_2_fu_323_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_29_reg_366 = k_29_fu_144_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_30_reg_397 = k_30_fu_216_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_258_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        tmp1_reg_420 = tmp1_fu_304_p2.read();
        tmp_171_reg_415 = tmp_171_fu_294_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_184_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_170_reg_384 = tmp_170_fu_205_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        tmp_176_reg_453 = grp_fu_134_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_fu_210_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        tmp_cast_reg_402 = tmp_cast_fu_254_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_138_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_reg_371 = tmp_fu_174_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_load_5_reg_443 = x_q0.read();
        y_load_reg_448 = y_q0.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        y_addr_5_reg_438 =  (sc_lv<5>) (tmp_175_fu_358_p1.read());
    }
}

void c_sum::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void c_sum::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void c_sum::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void c_sum::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void c_sum::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void c_sum::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void c_sum::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void c_sum::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void c_sum::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void c_sum::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void c_sum::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void c_sum::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond2_fu_210_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void c_sum::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void c_sum::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_210_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void c_sum::thread_b_k_13_fu_190_p2() {
    b_k_13_fu_190_p2 = (!b_k_reg_90.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(b_k_reg_90.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void c_sum::thread_b_k_14_fu_264_p2() {
    b_k_14_fu_264_p2 = (!b_k_1_reg_112.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(b_k_1_reg_112.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void c_sum::thread_b_k_cast7_fu_180_p1() {
    b_k_cast7_fu_180_p1 = esl_zext<7,3>(b_k_reg_90.read());
}

void c_sum::thread_c_k_2_fu_323_p2() {
    c_k_2_fu_323_p2 = (!c_k_reg_123.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(c_k_reg_123.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void c_sum::thread_c_k_cast3_fu_313_p1() {
    c_k_cast3_fu_313_p1 = esl_zext<6,3>(c_k_reg_123.read());
}

void c_sum::thread_c_k_cast4_fu_309_p1() {
    c_k_cast4_fu_309_p1 = esl_zext<7,3>(c_k_reg_123.read());
}

void c_sum::thread_exitcond1_fu_258_p2() {
    exitcond1_fu_258_p2 = (!b_k_1_reg_112.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(b_k_1_reg_112.read() == ap_const_lv3_5);
}

void c_sum::thread_exitcond2_fu_210_p2() {
    exitcond2_fu_210_p2 = (!k_1_reg_101.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_101.read() == ap_const_lv3_4);
}

void c_sum::thread_exitcond3_fu_184_p2() {
    exitcond3_fu_184_p2 = (!b_k_reg_90.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(b_k_reg_90.read() == ap_const_lv3_6);
}

void c_sum::thread_exitcond4_fu_138_p2() {
    exitcond4_fu_138_p2 = (!k_reg_79.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_79.read() == ap_const_lv3_5);
}

void c_sum::thread_exitcond_fu_317_p2() {
    exitcond_fu_317_p2 = (!c_k_reg_123.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(c_k_reg_123.read() == ap_const_lv3_6);
}

void c_sum::thread_k_29_fu_144_p2() {
    k_29_fu_144_p2 = (!k_reg_79.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_reg_79.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void c_sum::thread_k_30_fu_216_p2() {
    k_30_fu_216_p2 = (!k_1_reg_101.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_1_reg_101.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void c_sum::thread_p_shl10_cast_fu_234_p1() {
    p_shl10_cast_fu_234_p1 = esl_zext<8,7>(p_shl10_fu_226_p3.read());
}

void c_sum::thread_p_shl10_fu_226_p3() {
    p_shl10_fu_226_p3 = esl_concat<2,5>(tmp_177_fu_222_p1.read(), ap_const_lv5_0);
}

void c_sum::thread_p_shl11_cast_fu_244_p1() {
    p_shl11_cast_fu_244_p1 = esl_zext<8,3>(tmp_178_fu_238_p2.read());
}

void c_sum::thread_p_shl12_cast_fu_278_p1() {
    p_shl12_cast_fu_278_p1 = esl_zext<7,6>(p_shl12_fu_270_p3.read());
}

void c_sum::thread_p_shl12_fu_270_p3() {
    p_shl12_fu_270_p3 = esl_concat<3,3>(b_k_1_reg_112.read(), ap_const_lv3_0);
}

void c_sum::thread_p_shl13_cast_fu_290_p1() {
    p_shl13_cast_fu_290_p1 = esl_zext<7,4>(p_shl13_fu_282_p3.read());
}

void c_sum::thread_p_shl13_fu_282_p3() {
    p_shl13_fu_282_p3 = esl_concat<3,1>(b_k_1_reg_112.read(), ap_const_lv1_0);
}

void c_sum::thread_p_shl9_cast_fu_170_p1() {
    p_shl9_cast_fu_170_p1 = esl_zext<7,4>(p_shl9_fu_162_p3.read());
}

void c_sum::thread_p_shl9_fu_162_p3() {
    p_shl9_fu_162_p3 = esl_concat<3,1>(k_reg_79.read(), ap_const_lv1_0);
}

void c_sum::thread_p_shl_cast_fu_158_p1() {
    p_shl_cast_fu_158_p1 = esl_zext<7,6>(p_shl_fu_150_p3.read());
}

void c_sum::thread_p_shl_fu_150_p3() {
    p_shl_fu_150_p3 = esl_concat<3,3>(k_reg_79.read(), ap_const_lv3_0);
}

void c_sum::thread_tmp1_fu_304_p2() {
    tmp1_fu_304_p2 = (!tmp_177_cast_fu_300_p1.read().is_01() || !tmp_cast_reg_402.read().is_01())? sc_lv<9>(): (sc_bigint<9>(tmp_177_cast_fu_300_p1.read()) + sc_bigint<9>(tmp_cast_reg_402.read()));
}

void c_sum::thread_tmp2_cast_fu_335_p1() {
    tmp2_cast_fu_335_p1 = esl_zext<9,6>(tmp2_fu_329_p2.read());
}

void c_sum::thread_tmp2_fu_329_p2() {
    tmp2_fu_329_p2 = (!c_k_cast3_fu_313_p1.read().is_01() || !ap_const_lv6_1E.is_01())? sc_lv<6>(): (sc_biguint<6>(c_k_cast3_fu_313_p1.read()) + sc_biguint<6>(ap_const_lv6_1E));
}

void c_sum::thread_tmp_169_fu_196_p2() {
    tmp_169_fu_196_p2 = (!tmp_reg_371.read().is_01() || !b_k_cast7_fu_180_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_reg_371.read()) + sc_biguint<7>(b_k_cast7_fu_180_p1.read()));
}

void c_sum::thread_tmp_170_fu_205_p1() {
    tmp_170_fu_205_p1 = esl_zext<64,32>(tmp_175_cast_fu_201_p1.read());
}

void c_sum::thread_tmp_171_fu_294_p2() {
    tmp_171_fu_294_p2 = (!p_shl12_cast_fu_278_p1.read().is_01() || !p_shl13_cast_fu_290_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl12_cast_fu_278_p1.read()) - sc_biguint<7>(p_shl13_cast_fu_290_p1.read()));
}

void c_sum::thread_tmp_172_fu_339_p2() {
    tmp_172_fu_339_p2 = (!tmp2_cast_fu_335_p1.read().is_01() || !tmp1_reg_420.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp2_cast_fu_335_p1.read()) + sc_biguint<9>(tmp1_reg_420.read()));
}

void c_sum::thread_tmp_173_fu_344_p1() {
    tmp_173_fu_344_p1 = esl_zext<64,9>(tmp_172_fu_339_p2.read());
}

void c_sum::thread_tmp_174_fu_349_p2() {
    tmp_174_fu_349_p2 = (!tmp_171_reg_415.read().is_01() || !c_k_cast4_fu_309_p1.read().is_01())? sc_lv<7>(): (sc_bigint<7>(tmp_171_reg_415.read()) + sc_biguint<7>(c_k_cast4_fu_309_p1.read()));
}

void c_sum::thread_tmp_175_cast_fu_201_p1() {
    tmp_175_cast_fu_201_p1 = esl_sext<32,7>(tmp_169_fu_196_p2.read());
}

void c_sum::thread_tmp_175_fu_358_p1() {
    tmp_175_fu_358_p1 = esl_zext<64,32>(tmp_181_cast_fu_354_p1.read());
}

void c_sum::thread_tmp_177_cast_fu_300_p1() {
    tmp_177_cast_fu_300_p1 = esl_sext<9,7>(tmp_171_fu_294_p2.read());
}

void c_sum::thread_tmp_177_fu_222_p1() {
    tmp_177_fu_222_p1 = k_1_reg_101.read().range(2-1, 0);
}

void c_sum::thread_tmp_178_fu_238_p2() {
    tmp_178_fu_238_p2 = (!ap_const_lv3_1.is_01())? sc_lv<3>(): k_1_reg_101.read() << (unsigned short)ap_const_lv3_1.to_uint();
}

void c_sum::thread_tmp_181_cast_fu_354_p1() {
    tmp_181_cast_fu_354_p1 = esl_sext<32,7>(tmp_174_fu_349_p2.read());
}

void c_sum::thread_tmp_cast_fu_254_p1() {
    tmp_cast_fu_254_p1 = esl_sext<9,8>(tmp_s_fu_248_p2.read());
}

void c_sum::thread_tmp_fu_174_p2() {
    tmp_fu_174_p2 = (!p_shl_cast_fu_158_p1.read().is_01() || !p_shl9_cast_fu_170_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl_cast_fu_158_p1.read()) - sc_biguint<7>(p_shl9_cast_fu_170_p1.read()));
}

void c_sum::thread_tmp_s_fu_248_p2() {
    tmp_s_fu_248_p2 = (!p_shl10_cast_fu_234_p1.read().is_01() || !p_shl11_cast_fu_244_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl10_cast_fu_234_p1.read()) - sc_biguint<8>(p_shl11_cast_fu_244_p1.read()));
}

void c_sum::thread_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_address0 =  (sc_lv<8>) (tmp_173_fu_344_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_address0 =  (sc_lv<8>) (tmp_170_fu_205_p1.read());
    } else {
        x_address0 = "XXXXXXXX";
    }
}

void c_sum::thread_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        x_ce0 = ap_const_logic_1;
    } else {
        x_ce0 = ap_const_logic_0;
    }
}

void c_sum::thread_y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        y_address0 = y_addr_5_reg_438.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        y_address0 =  (sc_lv<5>) (tmp_175_fu_358_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_address0 =  (sc_lv<5>) (tmp_170_reg_384.read());
    } else {
        y_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void c_sum::thread_y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        y_ce0 = ap_const_logic_1;
    } else {
        y_ce0 = ap_const_logic_0;
    }
}

void c_sum::thread_y_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        y_d0 = tmp_176_reg_453.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_d0 = x_q0.read();
    } else {
        y_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void c_sum::thread_y_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        y_we0 = ap_const_logic_1;
    } else {
        y_we0 = ap_const_logic_0;
    }
}

void c_sum::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_138_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond3_fu_184_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(exitcond2_fu_210_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_258_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond_fu_317_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

