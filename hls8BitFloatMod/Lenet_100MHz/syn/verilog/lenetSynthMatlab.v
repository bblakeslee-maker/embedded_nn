// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lenetSynthMatlab,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.315100,HLS_SYN_LAT=7433930,HLS_SYN_TPT=none,HLS_SYN_MEM=224,HLS_SYN_DSP=18,HLS_SYN_FF=5810,HLS_SYN_LUT=9258,HLS_VERSION=2018_2}" *)

module lenetSynthMatlab (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputImg_address0,
        inputImg_ce0,
        inputImg_q0,
        netScores_address0,
        netScores_ce0,
        netScores_we0,
        netScores_d0
);

parameter    ap_ST_fsm_state1 = 180'd1;
parameter    ap_ST_fsm_state2 = 180'd2;
parameter    ap_ST_fsm_state3 = 180'd4;
parameter    ap_ST_fsm_state4 = 180'd8;
parameter    ap_ST_fsm_state5 = 180'd16;
parameter    ap_ST_fsm_state6 = 180'd32;
parameter    ap_ST_fsm_state7 = 180'd64;
parameter    ap_ST_fsm_state8 = 180'd128;
parameter    ap_ST_fsm_state9 = 180'd256;
parameter    ap_ST_fsm_state10 = 180'd512;
parameter    ap_ST_fsm_state11 = 180'd1024;
parameter    ap_ST_fsm_state12 = 180'd2048;
parameter    ap_ST_fsm_state13 = 180'd4096;
parameter    ap_ST_fsm_state14 = 180'd8192;
parameter    ap_ST_fsm_state15 = 180'd16384;
parameter    ap_ST_fsm_state16 = 180'd32768;
parameter    ap_ST_fsm_state17 = 180'd65536;
parameter    ap_ST_fsm_state18 = 180'd131072;
parameter    ap_ST_fsm_state19 = 180'd262144;
parameter    ap_ST_fsm_state20 = 180'd524288;
parameter    ap_ST_fsm_state21 = 180'd1048576;
parameter    ap_ST_fsm_state22 = 180'd2097152;
parameter    ap_ST_fsm_state23 = 180'd4194304;
parameter    ap_ST_fsm_state24 = 180'd8388608;
parameter    ap_ST_fsm_state25 = 180'd16777216;
parameter    ap_ST_fsm_state26 = 180'd33554432;
parameter    ap_ST_fsm_state27 = 180'd67108864;
parameter    ap_ST_fsm_state28 = 180'd134217728;
parameter    ap_ST_fsm_state29 = 180'd268435456;
parameter    ap_ST_fsm_state30 = 180'd536870912;
parameter    ap_ST_fsm_state31 = 180'd1073741824;
parameter    ap_ST_fsm_state32 = 180'd2147483648;
parameter    ap_ST_fsm_state33 = 180'd4294967296;
parameter    ap_ST_fsm_state34 = 180'd8589934592;
parameter    ap_ST_fsm_state35 = 180'd17179869184;
parameter    ap_ST_fsm_state36 = 180'd34359738368;
parameter    ap_ST_fsm_state37 = 180'd68719476736;
parameter    ap_ST_fsm_state38 = 180'd137438953472;
parameter    ap_ST_fsm_state39 = 180'd274877906944;
parameter    ap_ST_fsm_state40 = 180'd549755813888;
parameter    ap_ST_fsm_state41 = 180'd1099511627776;
parameter    ap_ST_fsm_state42 = 180'd2199023255552;
parameter    ap_ST_fsm_state43 = 180'd4398046511104;
parameter    ap_ST_fsm_state44 = 180'd8796093022208;
parameter    ap_ST_fsm_state45 = 180'd17592186044416;
parameter    ap_ST_fsm_state46 = 180'd35184372088832;
parameter    ap_ST_fsm_state47 = 180'd70368744177664;
parameter    ap_ST_fsm_state48 = 180'd140737488355328;
parameter    ap_ST_fsm_state49 = 180'd281474976710656;
parameter    ap_ST_fsm_state50 = 180'd562949953421312;
parameter    ap_ST_fsm_state51 = 180'd1125899906842624;
parameter    ap_ST_fsm_state52 = 180'd2251799813685248;
parameter    ap_ST_fsm_state53 = 180'd4503599627370496;
parameter    ap_ST_fsm_state54 = 180'd9007199254740992;
parameter    ap_ST_fsm_state55 = 180'd18014398509481984;
parameter    ap_ST_fsm_state56 = 180'd36028797018963968;
parameter    ap_ST_fsm_state57 = 180'd72057594037927936;
parameter    ap_ST_fsm_state58 = 180'd144115188075855872;
parameter    ap_ST_fsm_state59 = 180'd288230376151711744;
parameter    ap_ST_fsm_state60 = 180'd576460752303423488;
parameter    ap_ST_fsm_state61 = 180'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 180'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 180'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 180'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 180'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 180'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 180'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 180'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 180'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 180'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 180'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 180'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 180'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 180'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 180'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 180'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 180'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 180'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 180'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 180'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 180'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 180'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 180'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 180'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 180'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 180'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 180'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 180'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 180'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 180'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 180'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 180'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 180'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 180'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 180'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 180'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 180'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 180'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 180'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 180'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 180'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 180'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 180'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 180'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 180'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 180'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 180'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 180'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 180'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 180'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 180'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 180'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 180'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 180'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 180'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 180'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 180'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 180'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 180'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 180'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 180'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 180'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 180'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 180'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 180'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 180'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 180'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 180'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 180'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 180'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 180'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 180'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 180'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 180'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 180'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 180'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 180'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 180'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 180'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 180'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 180'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 180'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 180'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 180'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 180'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 180'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 180'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 180'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 180'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 180'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 180'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 180'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 180'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 180'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 180'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 180'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 180'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 180'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 180'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 180'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 180'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 180'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 180'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 180'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 180'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 180'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 180'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 180'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 180'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 180'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 180'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 180'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 180'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 180'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 180'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 180'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 180'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 180'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 180'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 180'd766247770432944429179173513575154591809369561091801088;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] inputImg_address0;
output   inputImg_ce0;
input  [7:0] inputImg_q0;
output  [3:0] netScores_address0;
output   netScores_ce0;
output   netScores_we0;
output  [31:0] netScores_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg inputImg_ce0;
reg netScores_ce0;
reg netScores_we0;

(* fsm_encoding = "none" *) reg   [179:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] biasConv1_address0;
reg    biasConv1_ce0;
wire   [31:0] biasConv1_q0;
wire   [7:0] weightsConv1_address0;
reg    weightsConv1_ce0;
wire   [31:0] weightsConv1_q0;
wire   [3:0] biasConv2_address0;
reg    biasConv2_ce0;
wire   [31:0] biasConv2_q0;
wire   [11:0] weightsConv2_address0;
reg    weightsConv2_ce0;
wire   [31:0] weightsConv2_q0;
wire   [15:0] weightsFC1_address0;
reg    weightsFC1_ce0;
wire   [31:0] weightsFC1_q0;
wire   [6:0] biasFC1_address0;
reg    biasFC1_ce0;
wire   [31:0] biasFC1_q0;
wire   [13:0] weightsFC2_address0;
reg    weightsFC2_ce0;
wire   [31:0] weightsFC2_q0;
wire   [6:0] biasFC2_address0;
reg    biasFC2_ce0;
wire   [31:0] biasFC2_q0;
wire   [9:0] weightsFC3_address0;
reg    weightsFC3_ce0;
wire   [31:0] weightsFC3_q0;
wire   [3:0] biasFC3_address0;
reg    biasFC3_ce0;
wire   [31:0] biasFC3_q0;
wire   [31:0] grp_fu_1428_p2;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state173;
reg   [31:0] reg_1482;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state160;
wire    ap_CS_fsm_state179;
wire   [31:0] grp_fu_1442_p2;
reg   [31:0] reg_1491;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state168;
wire   [13:0] f_cast_fu_1498_p1;
reg   [13:0] f_cast_reg_4142;
wire    ap_CS_fsm_state2;
wire   [8:0] f_cast1_fu_1502_p1;
reg   [8:0] f_cast1_reg_4147;
wire   [2:0] f_5_fu_1512_p2;
reg   [2:0] f_5_reg_4155;
wire   [0:0] exitcond33_fu_1506_p2;
reg   [31:0] biasConv1_load_reg_4165;
wire    ap_CS_fsm_state3;
wire   [13:0] phi_mul_cast_fu_1523_p1;
reg   [13:0] phi_mul_cast_reg_4170;
wire    ap_CS_fsm_state4;
wire   [12:0] next_mul_fu_1527_p2;
reg   [12:0] next_mul_reg_4175;
wire   [4:0] r_4_fu_1539_p2;
reg   [4:0] r_4_reg_4183;
wire   [9:0] c_cast1_fu_1545_p1;
reg   [9:0] c_cast1_reg_4188;
wire    ap_CS_fsm_state5;
wire   [4:0] c_4_fu_1555_p2;
reg   [4:0] c_4_reg_4196;
wire   [4:0] k4_cast2_fu_1561_p1;
reg   [4:0] k4_cast2_reg_4201;
wire    ap_CS_fsm_state6;
wire   [2:0] k_9_fu_1571_p2;
reg   [2:0] k_9_reg_4209;
wire   [4:0] tmp_17_fu_1577_p2;
reg   [4:0] tmp_17_reg_4214;
wire   [0:0] exitcond30_fu_1565_p2;
wire   [4:0] p_shl6_fu_1583_p3;
reg   [4:0] p_shl6_reg_4219;
wire   [8:0] tmp_18_fu_1615_p2;
reg   [8:0] tmp_18_reg_4224;
wire   [2:0] colOutIdx_2_fu_1631_p2;
reg   [2:0] colOutIdx_2_reg_4232;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond29_fu_1625_p2;
wire   [4:0] tmp_24_fu_1661_p2;
reg   [4:0] tmp_24_reg_4242;
wire   [8:0] tmp_27_fu_1705_p2;
reg   [8:0] tmp_27_reg_4247;
reg   [7:0] inputImg_load_reg_4252;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
reg   [31:0] weightsConv1_load_reg_4267;
wire    ap_CS_fsm_state14;
wire   [31:0] grp_fu_1447_p1;
reg   [31:0] tmp_30_reg_4272;
wire   [31:0] fv11_q0;
wire    ap_CS_fsm_state21;
wire   [2:0] k_10_fu_1732_p2;
reg   [2:0] k_10_reg_4285;
wire    ap_CS_fsm_state22;
wire   [0:0] exitcond_i_fu_1726_p2;
wire   [13:0] tmp_14_fu_1782_p2;
reg   [13:0] tmp_14_reg_4295;
reg   [31:0] fv11_load_reg_4300;
wire    ap_CS_fsm_state23;
wire   [13:0] phi_mul2_cast_fu_1795_p1;
reg   [13:0] phi_mul2_cast_reg_4305;
wire    ap_CS_fsm_state34;
wire   [12:0] next_mul3_fu_1799_p2;
reg   [12:0] next_mul3_reg_4310;
wire   [4:0] k_fu_1811_p2;
reg   [4:0] k_reg_4318;
wire   [4:0] colOutIdx_fu_1823_p2;
reg   [4:0] colOutIdx_reg_4326;
wire    ap_CS_fsm_state35;
wire   [8:0] tmp_4_fu_1853_p2;
reg   [8:0] tmp_4_reg_4331;
wire   [0:0] exitcond27_fu_1817_p2;
wire   [2:0] b_k_4_fu_1869_p2;
reg   [2:0] b_k_4_reg_4339;
wire    ap_CS_fsm_state36;
wire   [63:0] tmp_8_fu_1893_p1;
reg   [63:0] tmp_8_reg_4344;
wire   [0:0] exitcond26_fu_1863_p2;
wire   [31:0] conv1ActivationMap_q0;
reg   [31:0] rowOutIdx_reg_4354;
wire    ap_CS_fsm_state37;
wire   [31:0] rowOutIdx_1_fu_1939_p3;
reg   [31:0] rowOutIdx_1_reg_4361;
wire    ap_CS_fsm_state38;
wire   [10:0] indvarinc_fu_1946_p2;
wire    ap_CS_fsm_state40;
reg   [31:0] maxval_1_load_reg_4386;
wire    ap_CS_fsm_state41;
reg   [31:0] maxval_1_3_load_reg_4391;
wire   [8:0] f_1_cast_fu_1963_p1;
reg   [8:0] f_1_cast_reg_4396;
wire   [2:0] f_6_fu_1977_p2;
reg   [2:0] f_6_reg_4404;
wire  signed [31:0] tmp_5_cast_fu_1989_p1;
reg  signed [31:0] tmp_5_cast_reg_4409;
wire   [0:0] exitcond25_fu_1971_p2;
wire   [13:0] phi_mul4_cast_fu_1993_p1;
reg   [13:0] phi_mul4_cast_reg_4419;
wire    ap_CS_fsm_state42;
wire   [12:0] next_mul5_fu_1997_p2;
reg   [12:0] next_mul5_reg_4424;
wire   [3:0] r_5_fu_2009_p2;
reg   [3:0] r_5_reg_4432;
wire   [13:0] tmp_21_fu_2033_p2;
reg   [13:0] tmp_21_reg_4437;
wire   [0:0] exitcond24_fu_2003_p2;
wire   [31:0] p_Val2_s_fu_2039_p1;
reg   [31:0] p_Val2_s_reg_4442;
wire   [3:0] colOutIdx_15_fu_2049_p2;
reg   [3:0] colOutIdx_15_reg_4452;
wire    ap_CS_fsm_state43;
wire   [7:0] b_k_5_cast_fu_2063_p1;
reg   [7:0] b_k_5_cast_reg_4457;
wire   [0:0] exitcond23_fu_2043_p2;
wire   [0:0] tmp_32_fu_2067_p1;
reg   [0:0] tmp_32_reg_4462;
wire    ap_CS_fsm_state44;
wire   [1:0] j_2_fu_2077_p2;
reg   [1:0] j_2_reg_4471;
wire  signed [13:0] tmp_45_fu_2126_p2;
reg  signed [13:0] tmp_45_reg_4476;
wire   [0:0] exitcond22_fu_2071_p2;
wire  signed [13:0] tmp_51_fu_2131_p2;
reg  signed [13:0] tmp_51_reg_4482;
wire   [7:0] tmp_47_fu_2148_p2;
reg   [7:0] tmp_47_reg_4488;
reg   [0:0] tmp_50_reg_4493;
wire   [31:0] p_Val2_2_fu_2268_p3;
reg   [31:0] p_Val2_2_reg_4498;
wire    ap_CS_fsm_state45;
wire   [31:0] relu1ActivationMap_q0;
reg   [31:0] b_maxval_reg_4514;
wire    ap_CS_fsm_state46;
wire   [31:0] relu1ActivationMap_q1;
reg   [31:0] b_maxval_1_reg_4520;
wire   [13:0] b_maxval_6_fu_2374_p3;
reg   [13:0] b_maxval_6_reg_4526;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire  signed [31:0] p_Val2_6_fu_2417_p3;
reg  signed [31:0] p_Val2_6_reg_4536;
wire    ap_CS_fsm_state50;
wire   [31:0] tmp_60_fu_2507_p2;
reg   [31:0] tmp_60_reg_4541;
wire    ap_CS_fsm_state51;
wire   [31:0] maxval_1_3_maxval_0_3_fu_2512_p3;
reg   [31:0] maxval_1_3_maxval_0_3_reg_4546;
wire   [7:0] f_2_cast_fu_2538_p1;
reg   [7:0] f_2_cast_reg_4551;
wire    ap_CS_fsm_state57;
wire   [4:0] f_7_fu_2548_p2;
reg   [4:0] f_7_reg_4559;
wire   [0:0] exitcond21_fu_2542_p2;
reg   [31:0] biasConv2_load_reg_4569;
wire    ap_CS_fsm_state58;
wire   [3:0] r_6_fu_2565_p2;
reg   [3:0] r_6_reg_4577;
wire    ap_CS_fsm_state59;
wire   [10:0] tmp13_fu_2591_p2;
reg   [10:0] tmp13_reg_4582;
wire   [0:0] exitcond20_fu_2559_p2;
wire   [3:0] c_5_fu_2603_p2;
reg   [3:0] c_5_reg_4590;
wire    ap_CS_fsm_state60;
wire   [2:0] k_14_fu_2619_p2;
reg   [2:0] k_14_reg_4598;
wire    ap_CS_fsm_state61;
wire   [11:0] tmp_75_fu_2635_p2;
reg   [11:0] tmp_75_reg_4603;
wire   [0:0] exitcond18_fu_2613_p2;
wire   [8:0] tmp_76_fu_2669_p2;
reg   [8:0] tmp_76_reg_4608;
wire   [12:0] tmp_79_fu_2687_p2;
reg   [12:0] tmp_79_reg_4613;
wire   [2:0] colOutIdx_10_fu_2703_p2;
reg   [2:0] colOutIdx_10_reg_4621;
wire    ap_CS_fsm_state62;
wire   [7:0] tmp_87_fu_2739_p2;
reg   [7:0] tmp_87_reg_4626;
wire   [0:0] exitcond17_fu_2697_p2;
wire   [6:0] tmp_88_fu_2769_p2;
reg   [6:0] tmp_88_reg_4631;
wire   [10:0] tmp_89_fu_2799_p2;
reg   [10:0] tmp_89_reg_4636;
wire   [2:0] b_k_8_fu_2819_p2;
reg   [2:0] b_k_8_reg_4644;
wire    ap_CS_fsm_state63;
wire   [0:0] exitcond16_fu_2813_p2;
wire   [8:0] tmp_101_fu_2857_p2;
reg   [8:0] tmp_101_reg_4654;
wire   [31:0] pool1ActivationMap_q0;
reg   [31:0] pool1ActivationMap_l_reg_4664;
wire    ap_CS_fsm_state64;
reg   [31:0] weightsConv2_load_reg_4669;
wire   [31:0] fv14_q0;
wire    ap_CS_fsm_state74;
wire   [2:0] k_20_fu_2929_p2;
reg   [2:0] k_20_reg_4682;
wire    ap_CS_fsm_state75;
wire   [0:0] exitcond_i1_fu_2923_p2;
wire   [10:0] tmp_80_fu_2957_p2;
reg   [10:0] tmp_80_reg_4692;
reg   [31:0] fv14_load_reg_4697;
wire    ap_CS_fsm_state76;
wire   [3:0] k_11_fu_2972_p2;
reg   [3:0] k_11_reg_4705;
wire    ap_CS_fsm_state87;
wire   [10:0] tmp8_fu_2998_p2;
reg   [10:0] tmp8_reg_4710;
wire   [0:0] exitcond15_fu_2966_p2;
wire   [3:0] colOutIdx_5_fu_3010_p2;
reg   [3:0] colOutIdx_5_reg_4718;
wire    ap_CS_fsm_state88;
wire   [7:0] tmp_33_fu_3016_p3;
reg   [7:0] tmp_33_reg_4723;
wire   [0:0] exitcond14_fu_3004_p2;
wire   [4:0] b_k_6_fu_3034_p2;
reg   [4:0] b_k_6_reg_4731;
wire    ap_CS_fsm_state89;
wire   [63:0] tmp_72_fu_3054_p1;
reg   [63:0] tmp_72_reg_4736;
wire   [0:0] exitcond13_fu_3028_p2;
wire   [31:0] conv2ActivationMap_q0;
reg   [31:0] rowOutIdx_5_reg_4746;
wire    ap_CS_fsm_state90;
wire   [31:0] rowOutIdx_2_fu_3100_p3;
reg   [31:0] rowOutIdx_2_reg_4753;
wire    ap_CS_fsm_state91;
wire   [8:0] indvarinc1_fu_3107_p2;
wire    ap_CS_fsm_state93;
wire   [7:0] f_3_cast_fu_3132_p1;
reg   [7:0] f_3_cast_reg_4780;
wire    ap_CS_fsm_state94;
wire   [4:0] f_8_fu_3142_p2;
reg   [4:0] f_8_reg_4788;
wire   [7:0] tmp_48_fu_3148_p2;
reg   [7:0] tmp_48_reg_4793;
wire   [0:0] exitcond12_fu_3136_p2;
wire   [2:0] r_7_fu_3160_p2;
reg   [2:0] r_7_reg_4806;
wire    ap_CS_fsm_state95;
wire   [10:0] p_shl35_cast_fu_3182_p1;
reg   [10:0] p_shl35_cast_reg_4811;
wire   [0:0] exitcond11_fu_3154_p2;
wire   [11:0] p_shl36_cast_fu_3200_p1;
reg   [11:0] p_shl36_cast_reg_4816;
wire   [11:0] p_shl37_cast_fu_3212_p1;
reg   [11:0] p_shl37_cast_reg_4821;
wire   [31:0] p_Val2_s_41_fu_3216_p1;
reg   [31:0] p_Val2_s_41_reg_4826;
wire   [2:0] colOutIdx_16_fu_3226_p2;
reg   [2:0] colOutIdx_16_reg_4836;
wire    ap_CS_fsm_state96;
wire   [1:0] j_3_fu_3238_p2;
reg   [1:0] j_3_reg_4844;
wire    ap_CS_fsm_state97;
wire   [0:0] tmp_165_fu_3244_p1;
reg   [0:0] tmp_165_reg_4849;
wire   [0:0] exitcond9_fu_3232_p2;
wire   [10:0] tmp_121_fu_3275_p2;
reg   [10:0] tmp_121_reg_4855;
wire   [11:0] tmp_131_fu_3285_p2;
reg   [11:0] tmp_131_reg_4861;
reg   [0:0] tmp_143_reg_4867;
wire   [31:0] p_Val2_9_fu_3417_p3;
reg   [31:0] p_Val2_9_reg_4872;
wire   [7:0] tmp20_fu_3425_p2;
reg   [7:0] tmp20_reg_4878;
wire    ap_CS_fsm_state98;
wire   [31:0] relu2ActivationMap_q0;
reg   [31:0] b_maxval_3_reg_4893;
wire    ap_CS_fsm_state99;
wire   [31:0] relu2ActivationMap_q1;
reg   [31:0] b_maxval_4_reg_4899;
wire   [11:0] b_maxval_7_fu_3523_p3;
reg   [11:0] b_maxval_7_reg_4905;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state101;
wire   [31:0] tmp_139_fu_3674_p2;
reg   [31:0] tmp_139_reg_4915;
wire    ap_CS_fsm_state103;
wire   [31:0] maxval_1_8_maxval_0_8_fu_3680_p3;
reg   [31:0] maxval_1_8_maxval_0_8_reg_4920;
wire   [6:0] f_9_fu_3698_p2;
reg   [6:0] f_9_reg_4928;
wire    ap_CS_fsm_state109;
wire   [15:0] next_mul7_fu_3704_p2;
reg   [15:0] next_mul7_reg_4933;
wire    ap_CS_fsm_state110;
wire   [2:0] k_13_fu_3716_p2;
reg   [2:0] k_13_reg_4941;
wire   [8:0] tmp23_fu_3742_p2;
reg   [8:0] tmp23_reg_4946;
wire   [0:0] exitcond7_fu_3710_p2;
wire   [2:0] colOutIdx_9_fu_3754_p2;
reg   [2:0] colOutIdx_9_reg_4954;
wire    ap_CS_fsm_state111;
wire   [6:0] tmp_96_fu_3760_p3;
reg   [6:0] tmp_96_reg_4959;
wire   [0:0] exitcond6_fu_3748_p2;
wire   [14:0] tmp_109_fu_3792_p2;
reg   [14:0] tmp_109_reg_4964;
wire   [4:0] b_k_7_fu_3808_p2;
reg   [4:0] b_k_7_reg_4972;
wire    ap_CS_fsm_state112;
wire   [8:0] tmp_147_fu_3823_p2;
reg   [8:0] tmp_147_reg_4977;
wire   [0:0] exitcond5_fu_3802_p2;
wire   [16:0] tmp_151_fu_3897_p2;
reg   [16:0] tmp_151_reg_4982;
wire   [63:0] tmp_148_fu_3903_p1;
reg   [63:0] tmp_148_reg_4987;
wire    ap_CS_fsm_state113;
wire   [31:0] pool2ActivationMap_q0;
reg   [31:0] pool2ActivationMap_l_reg_5002;
wire    ap_CS_fsm_state114;
reg   [31:0] weightsFC1_load_reg_5007;
wire   [31:0] fv16_q0;
wire    ap_CS_fsm_state124;
wire   [3:0] k_15_fu_3921_p2;
reg   [3:0] k_15_reg_5020;
wire    ap_CS_fsm_state125;
wire   [0:0] exitcond_i2_fu_3915_p2;
wire   [63:0] tmp_52_fu_3932_p1;
reg   [63:0] tmp_52_reg_5030;
reg   [31:0] fv16_load_reg_5040;
wire    ap_CS_fsm_state126;
reg   [31:0] biasFC1_load_reg_5045;
wire    ap_CS_fsm_state132;
wire   [6:0] k_21_fu_3943_p2;
reg   [6:0] k_21_reg_5053;
wire    ap_CS_fsm_state139;
wire   [63:0] tmp_49_fu_3949_p1;
reg   [63:0] tmp_49_reg_5058;
wire   [0:0] exitcond4_fu_3937_p2;
wire   [31:0] fc1ActivationMap_q0;
reg   [31:0] rowOutIdx_6_reg_5068;
wire    ap_CS_fsm_state140;
wire   [31:0] rowOutIdx_4_fu_3995_p3;
reg   [31:0] rowOutIdx_4_reg_5075;
wire    ap_CS_fsm_state141;
wire   [6:0] k_22_fu_4008_p2;
reg   [6:0] k_22_reg_5083;
wire    ap_CS_fsm_state143;
wire   [63:0] tmp_91_fu_4014_p1;
reg   [63:0] tmp_91_reg_5088;
wire   [0:0] exitcond3_fu_4002_p2;
wire   [14:0] tmp_92_fu_4042_p2;
reg   [14:0] tmp_92_reg_5094;
wire   [6:0] colOutIdx_13_fu_4058_p2;
reg   [6:0] colOutIdx_13_reg_5102;
wire    ap_CS_fsm_state144;
wire   [0:0] exitcond2_fu_4052_p2;
wire   [31:0] relu3ActivationMap_q0;
reg   [31:0] relu3ActivationMap_l_reg_5122;
wire    ap_CS_fsm_state145;
reg   [31:0] weightsFC2_load_reg_5127;
reg   [31:0] biasFC2_load_reg_5132;
wire    ap_CS_fsm_state155;
wire   [9:0] next_mul9_fu_4083_p2;
reg   [9:0] next_mul9_reg_5137;
wire    ap_CS_fsm_state162;
wire   [3:0] k_16_fu_4095_p2;
reg   [3:0] k_16_reg_5145;
wire   [63:0] tmp_93_fu_4101_p1;
reg   [63:0] tmp_93_reg_5150;
wire   [0:0] exitcond1_fu_4089_p2;
wire   [6:0] colOutIdx_14_fu_4115_p2;
reg   [6:0] colOutIdx_14_reg_5159;
wire    ap_CS_fsm_state163;
wire   [0:0] exitcond_fu_4109_p2;
wire   [31:0] d_relu3ActivationMap_q0;
reg   [31:0] d_relu3ActivationMap_3_reg_5179;
wire    ap_CS_fsm_state164;
reg   [31:0] weightsFC3_load_reg_5184;
reg   [31:0] biasFC3_load_reg_5189;
wire    ap_CS_fsm_state174;
reg   [10:0] pool1ActivationMap_address0;
reg    pool1ActivationMap_ce0;
reg    pool1ActivationMap_we0;
reg   [31:0] pool1ActivationMap_d0;
reg   [12:0] conv1ActivationMap_address0;
reg    conv1ActivationMap_ce0;
reg    conv1ActivationMap_we0;
reg   [12:0] relu1ActivationMap_address0;
reg    relu1ActivationMap_ce0;
reg    relu1ActivationMap_we0;
reg   [12:0] relu1ActivationMap_address1;
reg    relu1ActivationMap_ce1;
reg   [4:0] fv10_address0;
reg    fv10_ce0;
reg    fv10_we0;
wire   [31:0] fv10_q0;
reg   [2:0] fv11_address0;
reg    fv11_ce0;
reg    fv11_we0;
reg   [8:0] pool2ActivationMap_address0;
reg    pool2ActivationMap_ce0;
reg    pool2ActivationMap_we0;
reg   [31:0] pool2ActivationMap_d0;
reg   [10:0] conv2ActivationMap_address0;
reg    conv2ActivationMap_ce0;
reg    conv2ActivationMap_we0;
reg   [10:0] relu2ActivationMap_address0;
reg    relu2ActivationMap_ce0;
reg    relu2ActivationMap_we0;
reg   [10:0] relu2ActivationMap_address1;
reg    relu2ActivationMap_ce1;
reg   [7:0] fv12_address0;
reg    fv12_ce0;
reg    fv12_we0;
wire   [31:0] fv12_q0;
reg   [4:0] fv13_address0;
reg    fv13_ce0;
reg    fv13_we0;
wire   [31:0] fv13_q0;
reg   [2:0] fv14_address0;
reg    fv14_ce0;
reg    fv14_we0;
reg   [8:0] b_pool2ActivationMap_address0;
reg    b_pool2ActivationMap_ce0;
reg    b_pool2ActivationMap_we0;
wire   [31:0] b_pool2ActivationMap_q0;
reg   [6:0] fv15_address0;
reg    fv15_ce0;
reg    fv15_we0;
wire   [31:0] fv15_q0;
reg   [6:0] fc1ActivationMap_address0;
reg    fc1ActivationMap_ce0;
reg    fc1ActivationMap_we0;
reg   [3:0] fv16_address0;
reg    fv16_ce0;
reg    fv16_we0;
reg   [6:0] relu3ActivationMap_address0;
reg    relu3ActivationMap_ce0;
reg    relu3ActivationMap_we0;
reg   [6:0] d_relu3ActivationMap_address0;
reg    d_relu3ActivationMap_ce0;
reg    d_relu3ActivationMap_we0;
wire    grp_c_sum_fu_1398_ap_start;
wire    grp_c_sum_fu_1398_ap_done;
wire    grp_c_sum_fu_1398_ap_idle;
wire    grp_c_sum_fu_1398_ap_ready;
wire   [7:0] grp_c_sum_fu_1398_x_address0;
wire    grp_c_sum_fu_1398_x_ce0;
wire   [4:0] grp_c_sum_fu_1398_y_address0;
wire    grp_c_sum_fu_1398_y_ce0;
wire    grp_c_sum_fu_1398_y_we0;
wire   [31:0] grp_c_sum_fu_1398_y_d0;
wire    grp_f_sum_fu_1404_ap_start;
wire    grp_f_sum_fu_1404_ap_done;
wire    grp_f_sum_fu_1404_ap_idle;
wire    grp_f_sum_fu_1404_ap_ready;
wire   [8:0] grp_f_sum_fu_1404_x_address0;
wire    grp_f_sum_fu_1404_x_ce0;
wire   [6:0] grp_f_sum_fu_1404_y_address0;
wire    grp_f_sum_fu_1404_y_ce0;
wire    grp_f_sum_fu_1404_y_we0;
wire   [31:0] grp_f_sum_fu_1404_y_d0;
wire    grp_d_sum_fu_1410_ap_start;
wire    grp_d_sum_fu_1410_ap_done;
wire    grp_d_sum_fu_1410_ap_idle;
wire    grp_d_sum_fu_1410_ap_ready;
wire   [4:0] grp_d_sum_fu_1410_x_address0;
wire    grp_d_sum_fu_1410_x_ce0;
wire   [2:0] grp_d_sum_fu_1410_y_address0;
wire    grp_d_sum_fu_1410_y_ce0;
wire    grp_d_sum_fu_1410_y_we0;
wire   [31:0] grp_d_sum_fu_1410_y_d0;
wire    grp_g_sum_fu_1416_ap_start;
wire    grp_g_sum_fu_1416_ap_done;
wire    grp_g_sum_fu_1416_ap_idle;
wire    grp_g_sum_fu_1416_ap_ready;
wire   [6:0] grp_g_sum_fu_1416_x_address0;
wire    grp_g_sum_fu_1416_x_ce0;
wire   [3:0] grp_g_sum_fu_1416_y_address0;
wire    grp_g_sum_fu_1416_y_ce0;
wire    grp_g_sum_fu_1416_y_we0;
wire   [31:0] grp_g_sum_fu_1416_y_d0;
wire    grp_sum_fu_1422_ap_start;
wire    grp_sum_fu_1422_ap_done;
wire    grp_sum_fu_1422_ap_idle;
wire    grp_sum_fu_1422_ap_ready;
wire   [4:0] grp_sum_fu_1422_x_address0;
wire    grp_sum_fu_1422_x_ce0;
wire   [2:0] grp_sum_fu_1422_y_address0;
wire    grp_sum_fu_1422_y_ce0;
wire    grp_sum_fu_1422_y_we0;
wire   [31:0] grp_sum_fu_1422_y_d0;
reg   [2:0] f_reg_825;
wire   [0:0] exitcond32_fu_1533_p2;
reg   [4:0] r_reg_836;
wire   [0:0] exitcond31_fu_1549_p2;
reg   [12:0] phi_mul_reg_848;
reg   [4:0] c_reg_859;
wire    ap_CS_fsm_state33;
reg   [2:0] k4_reg_871;
reg   [2:0] colOutIdx1_reg_882;
wire    ap_CS_fsm_state18;
wire   [31:0] ap_phi_mux_y5_i_phi_fu_896_p4;
reg   [31:0] y5_i_reg_893;
reg   [2:0] k_i_reg_903;
reg   [4:0] k_1_reg_914;
reg   [12:0] phi_mul2_reg_925;
reg   [4:0] colOutIdx_1_reg_936;
wire   [0:0] exitcond28_fu_1805_p2;
reg   [2:0] b_k_reg_947;
wire    ap_CS_fsm_state39;
reg   [10:0] invdar_reg_958;
wire   [0:0] tmp_3_fu_1957_p2;
reg   [2:0] f_1_reg_969;
reg   [31:0] x_assign_reg_980;
reg   [3:0] r_1_reg_992;
reg   [12:0] phi_mul4_reg_1003;
reg   [3:0] c_1_reg_1014;
wire    ap_CS_fsm_state52;
reg   [1:0] j_reg_1026;
wire    ap_CS_fsm_state49;
reg   [4:0] f_2_reg_1037;
reg   [3:0] r_2_reg_1049;
wire   [0:0] exitcond19_fu_2597_p2;
reg   [3:0] c_2_reg_1061;
wire    ap_CS_fsm_state86;
reg   [2:0] k_2_reg_1073;
reg   [2:0] colOutIdx_3_reg_1084;
reg   [2:0] b_k_1_reg_1095;
wire    ap_CS_fsm_state69;
wire   [31:0] ap_phi_mux_y3_i_phi_fu_1109_p4;
reg   [31:0] y3_i_reg_1106;
reg   [2:0] k_i1_reg_1116;
reg   [3:0] k_3_reg_1127;
reg   [3:0] colOutIdx_4_reg_1138;
reg   [4:0] b_k_2_reg_1149;
wire    ap_CS_fsm_state92;
reg   [8:0] invdar1_reg_1160;
wire   [0:0] tmp_20_fu_3118_p2;
reg   [4:0] f_3_reg_1171;
reg   [31:0] x_assign_5_reg_1182;
reg   [2:0] r_3_reg_1194;
reg   [2:0] c_3_reg_1206;
wire    ap_CS_fsm_state104;
reg   [1:0] j_1_reg_1218;
wire    ap_CS_fsm_state102;
wire   [0:0] exitcond10_fu_3220_p2;
reg   [6:0] f_4_reg_1229;
wire    ap_CS_fsm_state138;
reg   [2:0] k_4_reg_1241;
wire   [0:0] exitcond8_fu_3692_p2;
reg   [15:0] phi_mul6_reg_1252;
reg   [2:0] colOutIdx_6_reg_1264;
reg   [4:0] b_k_3_reg_1275;
wire    ap_CS_fsm_state119;
reg   [31:0] y1_i_reg_1286;
reg   [3:0] k_i2_reg_1296;
reg   [6:0] k_5_reg_1307;
wire    ap_CS_fsm_state142;
reg   [6:0] k_6_reg_1318;
wire    ap_CS_fsm_state161;
reg   [31:0] tmp_95_reg_1329;
reg   [6:0] colOutIdx_7_reg_1341;
reg   [3:0] k_7_reg_1352;
wire    ap_CS_fsm_state180;
reg   [9:0] phi_mul8_reg_1363;
reg   [31:0] tmp_111_reg_1375;
reg   [6:0] colOutIdx_8_reg_1387;
reg    grp_c_sum_fu_1398_ap_start_reg;
wire    ap_CS_fsm_state70;
reg    grp_f_sum_fu_1404_ap_start_reg;
wire    ap_CS_fsm_state120;
reg    grp_d_sum_fu_1410_ap_start_reg;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
reg    grp_g_sum_fu_1416_ap_start_reg;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state122;
reg    grp_sum_fu_1422_ap_start_reg;
wire    ap_CS_fsm_state19;
wire   [63:0] tmp_fu_1518_p1;
wire   [63:0] tmp_23_fu_1651_p1;
wire   [63:0] tmp_28_fu_1717_p1;
wire   [63:0] tmp_25_fu_1722_p1;
wire   [63:0] tmp_i_fu_1738_p1;
wire   [63:0] tmp_15_fu_1790_p1;
wire   [63:0] tmp_2_fu_1952_p1;
wire   [63:0] tmp_46_fu_2279_p1;
wire   [63:0] tmp_53_fu_2287_p1;
wire   [63:0] b_maxval_6_cast_fu_2383_p1;
wire  signed [63:0] tmp_63_fu_2533_p1;
wire   [63:0] tmp_10_fu_2554_p1;
wire   [63:0] tmp_99_fu_2843_p1;
wire   [63:0] tmp_107_fu_2910_p1;
wire   [63:0] tmp_102_fu_2918_p1;
wire   [63:0] tmp_i1_fu_2935_p1;
wire   [63:0] tmp_81_fu_2962_p1;
wire   [63:0] tmp_16_fu_3113_p1;
wire   [63:0] tmp_122_fu_3430_p1;
wire   [63:0] tmp_132_fu_3434_p1;
wire   [63:0] b_maxval_7_cast_fu_3530_p1;
wire  signed [63:0] tmp_140_fu_3688_p1;
wire   [63:0] tmp_152_fu_3910_p1;
wire   [63:0] tmp_i2_fu_3927_p1;
wire   [63:0] tmp_114_fu_4064_p1;
wire   [63:0] tmp_117_fu_4078_p1;
wire   [63:0] tmp_125_fu_4121_p1;
wire   [63:0] tmp_127_fu_4132_p1;
reg   [31:0] maxval_1_fu_336;
wire   [31:0] maxval_1_2_fu_2395_p3;
reg   [31:0] maxval_1_3_fu_340;
wire   [31:0] maxval_1_1_fu_2388_p3;
reg   [31:0] maxval_1_6_fu_344;
wire   [31:0] maxval_1_5_fu_3541_p3;
reg   [31:0] maxval_1_7_fu_348;
wire   [31:0] maxval_1_4_fu_3534_p3;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state123;
reg   [31:0] grp_fu_1428_p0;
reg   [31:0] grp_fu_1428_p1;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state156;
wire    ap_CS_fsm_state169;
wire    ap_CS_fsm_state175;
reg   [31:0] grp_fu_1442_p0;
reg   [31:0] grp_fu_1442_p1;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state146;
wire    ap_CS_fsm_state165;
wire   [31:0] grp_fu_1447_p0;
reg   [31:0] grp_fu_1450_p0;
reg   [31:0] grp_fu_1450_p1;
wire   [7:0] p_shl_fu_1591_p3;
wire   [3:0] p_shl5_fu_1603_p3;
wire   [8:0] p_shl_cast_fu_1599_p1;
wire   [8:0] p_shl5_cast_fu_1611_p1;
wire   [9:0] tmp2_fu_1637_p4;
wire   [9:0] tmp_22_fu_1646_p2;
wire   [4:0] colOutIdx1_cast1_fu_1621_p1;
wire   [4:0] tmp3_fu_1656_p2;
wire   [5:0] p_shl11_fu_1666_p3;
wire   [3:0] p_shl12_fu_1678_p3;
wire   [6:0] p_shl11_cast_fu_1674_p1;
wire   [6:0] p_shl12_cast_fu_1686_p1;
wire   [6:0] tmp_26_fu_1690_p2;
wire  signed [8:0] tmp_26_cast_fu_1696_p1;
wire   [8:0] tmp4_fu_1700_p2;
wire  signed [31:0] tmp_28_cast_fu_1714_p1;
wire   [7:0] p_shl7_fu_1743_p3;
wire   [5:0] p_shl8_fu_1755_p3;
wire   [8:0] p_shl7_cast_fu_1751_p1;
wire   [8:0] p_shl8_cast_fu_1763_p1;
wire   [8:0] tmp_12_fu_1767_p2;
wire  signed [13:0] tmp_12_cast_fu_1773_p1;
wire   [13:0] tmp5_fu_1777_p2;
wire  signed [31:0] tmp_14_cast_fu_1787_p1;
wire   [7:0] p_shl1_fu_1829_p3;
wire   [5:0] p_shl2_fu_1841_p3;
wire   [8:0] p_shl1_cast_fu_1837_p1;
wire   [8:0] p_shl2_cast_fu_1849_p1;
wire   [8:0] b_k_cast_fu_1859_p1;
wire   [8:0] tmp6_fu_1875_p2;
wire  signed [13:0] tmp6_cast_fu_1880_p1;
wire   [13:0] tmp_7_fu_1884_p2;
wire  signed [31:0] tmp_7_cast_fu_1889_p1;
wire   [31:0] rowOutIdx_to_int_fu_1898_p1;
wire   [7:0] tmp_6_fu_1901_p4;
wire   [22:0] tmp_9_fu_1911_p1;
wire   [0:0] notrhs_fu_1921_p2;
wire   [0:0] notlhs_fu_1915_p2;
wire   [0:0] tmp_s_fu_1927_p2;
wire   [0:0] grp_fu_1450_p2;
wire   [0:0] tmp_13_fu_1933_p2;
wire   [7:0] f_1_cast1_fu_1967_p1;
wire   [7:0] tmp_5_fu_1983_p2;
wire   [4:0] k_8_fu_2015_p3;
wire   [4:0] tmp_19_fu_2023_p2;
wire   [4:0] tmp_21_fu_2033_p0;
wire   [4:0] b_k_5_fu_2055_p3;
wire   [7:0] p_shl18_fu_2083_p4;
wire   [5:0] p_shl19_fu_2097_p4;
wire   [8:0] p_shl18_cast_fu_2093_p1;
wire   [8:0] p_shl19_cast_fu_2107_p1;
wire   [8:0] tmp_40_fu_2111_p2;
wire   [8:0] tmp_44_fu_2117_p2;
wire  signed [13:0] tmp_44_cast_fu_2122_p1;
wire   [6:0] p_shl22_fu_2136_p3;
wire   [7:0] p_shl22_cast_fu_2144_p1;
wire   [22:0] tmp_56_fu_2169_p1;
wire   [24:0] tmp_161_i_i_i_fu_2172_p4;
wire   [7:0] loc_V_fu_2160_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_2186_p1;
wire   [8:0] sh_assign_fu_2190_p2;
wire   [7:0] tmp_162_i_i_i_fu_2204_p2;
wire   [0:0] tmp_58_fu_2196_p3;
wire  signed [8:0] tmp_162_i_i_i_cast_fu_2210_p1;
wire  signed [8:0] sh_assign_1_fu_2214_p3;
wire  signed [31:0] sh_assign_1_cast_fu_2222_p1;
wire  signed [24:0] sh_assign_1_cast_cas_fu_2226_p1;
wire   [78:0] tmp_161_i_i_i_cast1_fu_2182_p1;
wire   [78:0] tmp_163_i_i_i_fu_2230_p1;
wire   [24:0] tmp_164_i_i_i_fu_2234_p2;
wire   [0:0] tmp_59_fu_2246_p3;
wire   [78:0] tmp_165_i_i_i_fu_2240_p2;
wire   [31:0] tmp_64_fu_2254_p1;
wire   [31:0] tmp_65_fu_2258_p4;
wire  signed [31:0] tmp_45_cast_fu_2276_p1;
wire  signed [31:0] tmp_55_cast_fu_2284_p1;
wire   [31:0] b_maxval_to_int_fu_2292_p1;
wire   [31:0] b_maxval_1_to_int_fu_2309_p1;
wire   [7:0] tmp_55_fu_2295_p4;
wire   [22:0] tmp_67_fu_2305_p1;
wire   [0:0] notrhs3_fu_2332_p2;
wire   [0:0] notlhs3_fu_2326_p2;
wire   [7:0] tmp_57_fu_2312_p4;
wire   [22:0] tmp_71_fu_2322_p1;
wire   [0:0] notrhs4_fu_2350_p2;
wire   [0:0] notlhs4_fu_2344_p2;
wire   [0:0] tmp_61_fu_2338_p2;
wire   [0:0] tmp_66_fu_2356_p2;
wire   [0:0] tmp_68_fu_2362_p2;
wire   [0:0] tmp_73_fu_2368_p2;
wire  signed [31:0] b_maxval_6_cast1_fu_2380_p1;
wire   [31:0] p_Val2_6_i_i_i_fu_2412_p2;
wire   [31:0] maxval_0_3_to_int_fu_2423_p1;
wire   [31:0] maxval_1_3_to_int_fu_2441_p1;
wire   [7:0] tmp_34_fu_2427_p4;
wire   [22:0] tmp_35_fu_2437_p1;
wire   [0:0] notrhs1_fu_2465_p2;
wire   [0:0] notlhs1_fu_2459_p2;
wire   [7:0] tmp_36_fu_2445_p4;
wire   [22:0] tmp_37_fu_2455_p1;
wire   [0:0] notrhs2_fu_2483_p2;
wire   [0:0] notlhs2_fu_2477_p2;
wire   [0:0] tmp_38_fu_2471_p2;
wire   [0:0] tmp_39_fu_2489_p2;
wire   [0:0] tmp_41_fu_2495_p2;
wire   [0:0] tmp_43_fu_2501_p2;
wire  signed [31:0] tmp_58_cast_fu_2520_p1;
wire   [31:0] tmp7_fu_2523_p2;
wire   [31:0] tmp_62_fu_2528_p2;
wire   [8:0] p_shl10_fu_2579_p3;
wire   [10:0] p_shl10_cast_fu_2587_p1;
wire   [10:0] p_shl9_fu_2571_p3;
wire   [3:0] k_2_cast_fu_2609_p1;
wire   [3:0] tmp_74_fu_2625_p2;
wire   [3:0] tmp_75_fu_2635_p0;
wire   [7:0] p_shl15_fu_2641_p3;
wire   [3:0] p_shl16_fu_2657_p3;
wire   [8:0] p_shl15_cast_fu_2653_p1;
wire   [8:0] p_shl16_cast_fu_2665_p1;
wire   [11:0] p_shl17_fu_2675_p3;
wire   [12:0] p_shl17_cast_fu_2683_p1;
wire   [12:0] p_shl15_cast1_fu_2649_p1;
wire   [3:0] colOutIdx_3_cast_fu_2693_p1;
wire   [3:0] tmp_86_fu_2709_p2;
wire   [6:0] p_shl26_fu_2715_p3;
wire   [4:0] p_shl27_fu_2727_p3;
wire   [7:0] p_shl26_cast_fu_2723_p1;
wire   [7:0] p_shl27_cast_fu_2735_p1;
wire   [5:0] p_shl28_fu_2745_p3;
wire   [3:0] p_shl29_fu_2757_p3;
wire   [6:0] p_shl28_cast_fu_2753_p1;
wire   [6:0] p_shl29_cast_fu_2765_p1;
wire   [9:0] p_shl30_fu_2775_p3;
wire   [7:0] p_shl31_fu_2787_p3;
wire   [10:0] p_shl30_cast_fu_2783_p1;
wire   [10:0] p_shl31_cast_fu_2795_p1;
wire   [7:0] b_k_1_cast_fu_2805_p1;
wire   [7:0] tmp9_fu_2825_p2;
wire  signed [11:0] tmp9_cast_fu_2830_p1;
wire   [11:0] tmp_98_fu_2834_p2;
wire  signed [31:0] tmp_98_cast_fu_2839_p1;
wire   [6:0] b_k_1_cast1_fu_2809_p1;
wire   [6:0] tmp10_fu_2848_p2;
wire  signed [8:0] tmp10_cast_fu_2853_p1;
wire   [6:0] tmp_103_fu_2862_p3;
wire   [7:0] tmp_113_fu_2874_p4;
wire   [10:0] tmp_103_cast_fu_2870_p1;
wire   [10:0] tmp12_fu_2891_p2;
wire  signed [12:0] tmp12_cast_fu_2896_p1;
wire   [12:0] tmp11_fu_2883_p3;
wire   [12:0] tmp_106_fu_2900_p2;
wire  signed [31:0] tmp_106_cast_fu_2906_p1;
wire  signed [31:0] tmp_101_cast_fu_2915_p1;
wire   [7:0] tmp_78_fu_2940_p3;
wire   [7:0] tmp14_fu_2948_p2;
wire   [10:0] tmp14_cast_fu_2953_p1;
wire   [8:0] p_shl4_fu_2986_p3;
wire   [10:0] p_shl4_cast_fu_2994_p1;
wire   [10:0] p_shl3_fu_2978_p3;
wire   [7:0] b_k_2_cast_fu_3024_p1;
wire   [7:0] tmp16_fu_3040_p2;
wire   [10:0] tmp16_cast_fu_3045_p1;
wire   [10:0] tmp_69_fu_3049_p2;
wire   [31:0] rowOutIdx_7_to_int_fu_3059_p1;
wire   [7:0] tmp_82_fu_3062_p4;
wire   [22:0] tmp_83_fu_3072_p1;
wire   [0:0] notrhs5_fu_3082_p2;
wire   [0:0] notlhs5_fu_3076_p2;
wire   [0:0] tmp_85_fu_3088_p2;
wire   [0:0] tmp_94_fu_3094_p2;
wire   [8:0] p_shl23_fu_3174_p3;
wire   [3:0] k_12_fu_3166_p3;
wire   [3:0] tmp_84_fu_3186_p2;
wire   [10:0] p_shl34_fu_3192_p3;
wire   [8:0] p_shl35_fu_3204_p3;
wire   [7:0] tmp_116_fu_3248_p4;
wire   [7:0] tmp_120_fu_3258_p2;
wire   [10:0] tmp17_fu_3267_p3;
wire   [11:0] tmp_120_cast_fu_3263_p1;
wire   [11:0] tmp18_fu_3280_p2;
wire   [6:0] tmp_135_fu_3290_p3;
wire   [22:0] tmp_144_fu_3318_p1;
wire   [24:0] tmp_161_i_i_i2_fu_3321_p4;
wire   [7:0] loc_V_2_fu_3309_p4;
wire   [8:0] tmp_i_i_i_i2_cast_fu_3335_p1;
wire   [8:0] sh_assign_4_fu_3339_p2;
wire   [7:0] tmp_162_i_i_i2_fu_3353_p2;
wire   [0:0] tmp_150_fu_3345_p3;
wire  signed [8:0] tmp_162_i_i_i2_cast_fu_3359_p1;
wire  signed [8:0] sh_assign_5_fu_3363_p3;
wire  signed [31:0] sh_assign_5_cast_fu_3371_p1;
wire  signed [24:0] sh_assign_5_cast_cas_fu_3375_p1;
wire   [78:0] tmp_161_i_i_i2_cast1_fu_3331_p1;
wire   [78:0] tmp_163_i_i_i2_fu_3379_p1;
wire   [24:0] tmp_164_i_i_i2_fu_3383_p2;
wire   [0:0] tmp_154_fu_3395_p3;
wire   [78:0] tmp_165_i_i_i2_fu_3389_p2;
wire   [31:0] tmp_145_fu_3403_p1;
wire   [31:0] tmp_146_fu_3407_p4;
wire   [7:0] tmp_135_cast_fu_3298_p1;
wire   [31:0] b_maxval_3_to_int_fu_3441_p1;
wire   [31:0] b_maxval_4_to_int_fu_3458_p1;
wire   [7:0] tmp_155_fu_3444_p4;
wire   [22:0] tmp_166_fu_3454_p1;
wire   [0:0] notrhs9_fu_3481_p2;
wire   [0:0] notlhs9_fu_3475_p2;
wire   [7:0] tmp_157_fu_3461_p4;
wire   [22:0] tmp_167_fu_3471_p1;
wire   [0:0] notrhs10_fu_3499_p2;
wire   [0:0] notlhs10_fu_3493_p2;
wire   [0:0] tmp_159_fu_3487_p2;
wire   [0:0] tmp_160_fu_3505_p2;
wire   [0:0] tmp_161_fu_3511_p2;
wire   [0:0] tmp_163_fu_3517_p2;
wire   [11:0] tmp_122_cast_cast_fu_3438_p1;
wire   [31:0] maxval_0_8_to_int_fu_3558_p1;
wire   [31:0] maxval_1_8_to_int_fu_3576_p1;
wire   [7:0] tmp_119_fu_3562_p4;
wire   [22:0] tmp_129_fu_3572_p1;
wire   [0:0] notrhs7_fu_3600_p2;
wire   [0:0] notlhs7_fu_3594_p2;
wire   [7:0] tmp_133_fu_3580_p4;
wire   [22:0] tmp_134_fu_3590_p1;
wire   [0:0] notrhs8_fu_3618_p2;
wire   [0:0] notlhs8_fu_3612_p2;
wire   [0:0] tmp_136_fu_3606_p2;
wire   [0:0] tmp_137_fu_3624_p2;
wire   [0:0] tmp_138_fu_3630_p2;
wire   [31:0] p_Val2_6_i_i_i2_fu_3642_p2;
wire   [31:0] p_Val2_1_fu_3647_p3;
wire   [31:0] tmp_158_fu_3659_p2;
wire   [31:0] tmp_156_fu_3653_p2;
wire   [31:0] tmp19_fu_3665_p2;
wire  signed [31:0] tmp20_cast_fu_3671_p1;
wire   [0:0] tmp_142_fu_3636_p2;
wire   [6:0] p_shl14_fu_3730_p3;
wire   [8:0] p_shl13_fu_3722_p3;
wire   [8:0] p_shl14_cast_fu_3738_p1;
wire   [13:0] p_shl24_fu_3768_p3;
wire   [9:0] p_shl25_fu_3780_p3;
wire   [14:0] p_shl24_cast_fu_3776_p1;
wire   [14:0] p_shl25_cast_fu_3788_p1;
wire   [6:0] b_k_3_cast_fu_3798_p1;
wire   [6:0] tmp24_fu_3814_p2;
wire   [8:0] tmp24_cast_fu_3819_p1;
wire   [3:0] tmp_168_fu_3828_p1;
wire   [10:0] p_shl32_fu_3832_p3;
wire   [6:0] p_shl33_fu_3844_p3;
wire   [11:0] p_shl32_cast_fu_3840_p1;
wire   [11:0] p_shl33_cast_fu_3852_p1;
wire   [11:0] tmp_149_fu_3856_p2;
wire   [8:0] tmp_164_fu_3866_p4;
wire   [15:0] tmp25_fu_3876_p3;
wire  signed [14:0] tmp_149_cast_fu_3862_p1;
wire   [14:0] tmp26_fu_3888_p2;
wire  signed [16:0] tmp26_cast_fu_3893_p1;
wire   [16:0] tmp25_cast_fu_3884_p1;
wire  signed [31:0] tmp_151_cast_fu_3907_p1;
wire   [31:0] rowOutIdx_8_to_int_fu_3954_p1;
wire   [7:0] tmp_97_fu_3957_p4;
wire   [22:0] tmp_100_fu_3967_p1;
wire   [0:0] notrhs6_fu_3977_p2;
wire   [0:0] notlhs6_fu_3971_p2;
wire   [0:0] tmp_104_fu_3983_p2;
wire   [0:0] tmp_110_fu_3989_p2;
wire   [13:0] p_shl20_fu_4018_p3;
wire   [9:0] p_shl21_fu_4030_p3;
wire   [14:0] p_shl20_cast_fu_4026_p1;
wire   [14:0] p_shl21_cast_fu_4038_p1;
wire   [14:0] colOutIdx_7_cast_fu_4048_p1;
wire   [14:0] tmp_115_fu_4069_p2;
wire  signed [31:0] tmp_115_cast_fu_4074_p1;
wire   [9:0] colOutIdx_8_cast_fu_4105_p1;
wire   [9:0] tmp_126_fu_4126_p2;
reg   [179:0] ap_NS_fsm;
wire   [13:0] tmp_21_fu_2033_p00;
wire   [11:0] tmp_75_fu_2635_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 180'd1;
#0 grp_c_sum_fu_1398_ap_start_reg = 1'b0;
#0 grp_f_sum_fu_1404_ap_start_reg = 1'b0;
#0 grp_d_sum_fu_1410_ap_start_reg = 1'b0;
#0 grp_g_sum_fu_1416_ap_start_reg = 1'b0;
#0 grp_sum_fu_1422_ap_start_reg = 1'b0;
end

lenetSynthMatlab_cud #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
biasConv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biasConv1_address0),
    .ce0(biasConv1_ce0),
    .q0(biasConv1_q0)
);

lenetSynthMatlab_dEe #(
    .DataWidth( 32 ),
    .AddressRange( 150 ),
    .AddressWidth( 8 ))
weightsConv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weightsConv1_address0),
    .ce0(weightsConv1_ce0),
    .q0(weightsConv1_q0)
);

lenetSynthMatlab_eOg #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
biasConv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biasConv2_address0),
    .ce0(biasConv2_ce0),
    .q0(biasConv2_q0)
);

lenetSynthMatlab_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 2400 ),
    .AddressWidth( 12 ))
weightsConv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weightsConv2_address0),
    .ce0(weightsConv2_ce0),
    .q0(weightsConv2_q0)
);

lenetSynthMatlab_g8j #(
    .DataWidth( 32 ),
    .AddressRange( 48000 ),
    .AddressWidth( 16 ))
weightsFC1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weightsFC1_address0),
    .ce0(weightsFC1_ce0),
    .q0(weightsFC1_q0)
);

lenetSynthMatlab_hbi #(
    .DataWidth( 32 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
biasFC1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biasFC1_address0),
    .ce0(biasFC1_ce0),
    .q0(biasFC1_q0)
);

lenetSynthMatlab_ibs #(
    .DataWidth( 32 ),
    .AddressRange( 10080 ),
    .AddressWidth( 14 ))
weightsFC2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weightsFC2_address0),
    .ce0(weightsFC2_ce0),
    .q0(weightsFC2_q0)
);

lenetSynthMatlab_jbC #(
    .DataWidth( 32 ),
    .AddressRange( 84 ),
    .AddressWidth( 7 ))
biasFC2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biasFC2_address0),
    .ce0(biasFC2_ce0),
    .q0(biasFC2_q0)
);

lenetSynthMatlab_kbM #(
    .DataWidth( 32 ),
    .AddressRange( 840 ),
    .AddressWidth( 10 ))
weightsFC3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weightsFC3_address0),
    .ce0(weightsFC3_ce0),
    .q0(weightsFC3_q0)
);

lenetSynthMatlab_lbW #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
biasFC3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biasFC3_address0),
    .ce0(biasFC3_ce0),
    .q0(biasFC3_q0)
);

lenetSynthMatlab_mb6 #(
    .DataWidth( 32 ),
    .AddressRange( 1176 ),
    .AddressWidth( 11 ))
pool1ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool1ActivationMap_address0),
    .ce0(pool1ActivationMap_ce0),
    .we0(pool1ActivationMap_we0),
    .d0(pool1ActivationMap_d0),
    .q0(pool1ActivationMap_q0)
);

lenetSynthMatlab_ncg #(
    .DataWidth( 32 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
conv1ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1ActivationMap_address0),
    .ce0(conv1ActivationMap_ce0),
    .we0(conv1ActivationMap_we0),
    .d0(reg_1482),
    .q0(conv1ActivationMap_q0)
);

lenetSynthMatlab_ocq #(
    .DataWidth( 32 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
relu1ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(relu1ActivationMap_address0),
    .ce0(relu1ActivationMap_ce0),
    .we0(relu1ActivationMap_we0),
    .d0(rowOutIdx_1_reg_4361),
    .q0(relu1ActivationMap_q0),
    .address1(relu1ActivationMap_address1),
    .ce1(relu1ActivationMap_ce1),
    .q1(relu1ActivationMap_q1)
);

lenetSynthMatlab_pcA #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
fv10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fv10_address0),
    .ce0(fv10_ce0),
    .we0(fv10_we0),
    .d0(grp_fu_1442_p2),
    .q0(fv10_q0)
);

lenetSynthMatlab_qcK #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
fv11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fv11_address0),
    .ce0(fv11_ce0),
    .we0(fv11_we0),
    .d0(grp_sum_fu_1422_y_d0),
    .q0(fv11_q0)
);

lenetSynthMatlab_rcU #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
pool2ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool2ActivationMap_address0),
    .ce0(pool2ActivationMap_ce0),
    .we0(pool2ActivationMap_we0),
    .d0(pool2ActivationMap_d0),
    .q0(pool2ActivationMap_q0)
);

lenetSynthMatlab_sc4 #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
conv2ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2ActivationMap_address0),
    .ce0(conv2ActivationMap_ce0),
    .we0(conv2ActivationMap_we0),
    .d0(reg_1482),
    .q0(conv2ActivationMap_q0)
);

lenetSynthMatlab_tde #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
relu2ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(relu2ActivationMap_address0),
    .ce0(relu2ActivationMap_ce0),
    .we0(relu2ActivationMap_we0),
    .d0(rowOutIdx_2_reg_4753),
    .q0(relu2ActivationMap_q0),
    .address1(relu2ActivationMap_address1),
    .ce1(relu2ActivationMap_ce1),
    .q1(relu2ActivationMap_q1)
);

lenetSynthMatlab_udo #(
    .DataWidth( 32 ),
    .AddressRange( 150 ),
    .AddressWidth( 8 ))
fv12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fv12_address0),
    .ce0(fv12_ce0),
    .we0(fv12_we0),
    .d0(reg_1491),
    .q0(fv12_q0)
);

lenetSynthMatlab_vdy #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
fv13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fv13_address0),
    .ce0(fv13_ce0),
    .we0(fv13_we0),
    .d0(grp_c_sum_fu_1398_y_d0),
    .q0(fv13_q0)
);

lenetSynthMatlab_wdI #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
fv14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fv14_address0),
    .ce0(fv14_ce0),
    .we0(fv14_we0),
    .d0(grp_d_sum_fu_1410_y_d0),
    .q0(fv14_q0)
);

lenetSynthMatlab_rcU #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
b_pool2ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_pool2ActivationMap_address0),
    .ce0(b_pool2ActivationMap_ce0),
    .we0(b_pool2ActivationMap_we0),
    .d0(reg_1491),
    .q0(b_pool2ActivationMap_q0)
);

lenetSynthMatlab_yd2 #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
fv15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fv15_address0),
    .ce0(fv15_ce0),
    .we0(fv15_we0),
    .d0(grp_f_sum_fu_1404_y_d0),
    .q0(fv15_q0)
);

lenetSynthMatlab_zec #(
    .DataWidth( 32 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
fc1ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1ActivationMap_address0),
    .ce0(fc1ActivationMap_ce0),
    .we0(fc1ActivationMap_we0),
    .d0(reg_1482),
    .q0(fc1ActivationMap_q0)
);

lenetSynthMatlab_Aem #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
fv16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fv16_address0),
    .ce0(fv16_ce0),
    .we0(fv16_we0),
    .d0(grp_g_sum_fu_1416_y_d0),
    .q0(fv16_q0)
);

lenetSynthMatlab_zec #(
    .DataWidth( 32 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
relu3ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(relu3ActivationMap_address0),
    .ce0(relu3ActivationMap_ce0),
    .we0(relu3ActivationMap_we0),
    .d0(rowOutIdx_4_reg_5075),
    .q0(relu3ActivationMap_q0)
);

lenetSynthMatlab_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 84 ),
    .AddressWidth( 7 ))
d_relu3ActivationMap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(d_relu3ActivationMap_address0),
    .ce0(d_relu3ActivationMap_ce0),
    .we0(d_relu3ActivationMap_we0),
    .d0(reg_1482),
    .q0(d_relu3ActivationMap_q0)
);

c_sum grp_c_sum_fu_1398(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_c_sum_fu_1398_ap_start),
    .ap_done(grp_c_sum_fu_1398_ap_done),
    .ap_idle(grp_c_sum_fu_1398_ap_idle),
    .ap_ready(grp_c_sum_fu_1398_ap_ready),
    .x_address0(grp_c_sum_fu_1398_x_address0),
    .x_ce0(grp_c_sum_fu_1398_x_ce0),
    .x_q0(fv12_q0),
    .y_address0(grp_c_sum_fu_1398_y_address0),
    .y_ce0(grp_c_sum_fu_1398_y_ce0),
    .y_we0(grp_c_sum_fu_1398_y_we0),
    .y_d0(grp_c_sum_fu_1398_y_d0),
    .y_q0(fv13_q0)
);

f_sum grp_f_sum_fu_1404(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_f_sum_fu_1404_ap_start),
    .ap_done(grp_f_sum_fu_1404_ap_done),
    .ap_idle(grp_f_sum_fu_1404_ap_idle),
    .ap_ready(grp_f_sum_fu_1404_ap_ready),
    .x_address0(grp_f_sum_fu_1404_x_address0),
    .x_ce0(grp_f_sum_fu_1404_x_ce0),
    .x_q0(b_pool2ActivationMap_q0),
    .y_address0(grp_f_sum_fu_1404_y_address0),
    .y_ce0(grp_f_sum_fu_1404_y_ce0),
    .y_we0(grp_f_sum_fu_1404_y_we0),
    .y_d0(grp_f_sum_fu_1404_y_d0),
    .y_q0(fv15_q0)
);

d_sum grp_d_sum_fu_1410(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_d_sum_fu_1410_ap_start),
    .ap_done(grp_d_sum_fu_1410_ap_done),
    .ap_idle(grp_d_sum_fu_1410_ap_idle),
    .ap_ready(grp_d_sum_fu_1410_ap_ready),
    .x_address0(grp_d_sum_fu_1410_x_address0),
    .x_ce0(grp_d_sum_fu_1410_x_ce0),
    .x_q0(fv13_q0),
    .y_address0(grp_d_sum_fu_1410_y_address0),
    .y_ce0(grp_d_sum_fu_1410_y_ce0),
    .y_we0(grp_d_sum_fu_1410_y_we0),
    .y_d0(grp_d_sum_fu_1410_y_d0),
    .y_q0(fv14_q0)
);

g_sum grp_g_sum_fu_1416(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_g_sum_fu_1416_ap_start),
    .ap_done(grp_g_sum_fu_1416_ap_done),
    .ap_idle(grp_g_sum_fu_1416_ap_idle),
    .ap_ready(grp_g_sum_fu_1416_ap_ready),
    .x_address0(grp_g_sum_fu_1416_x_address0),
    .x_ce0(grp_g_sum_fu_1416_x_ce0),
    .x_q0(fv15_q0),
    .y_address0(grp_g_sum_fu_1416_y_address0),
    .y_ce0(grp_g_sum_fu_1416_y_ce0),
    .y_we0(grp_g_sum_fu_1416_y_we0),
    .y_d0(grp_g_sum_fu_1416_y_d0),
    .y_q0(fv16_q0)
);

sum grp_sum_fu_1422(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sum_fu_1422_ap_start),
    .ap_done(grp_sum_fu_1422_ap_done),
    .ap_idle(grp_sum_fu_1422_ap_idle),
    .ap_ready(grp_sum_fu_1422_ap_ready),
    .x_address0(grp_sum_fu_1422_x_address0),
    .x_ce0(grp_sum_fu_1422_x_ce0),
    .x_q0(fv10_q0),
    .y_address0(grp_sum_fu_1422_y_address0),
    .y_ce0(grp_sum_fu_1422_y_ce0),
    .y_we0(grp_sum_fu_1422_y_we0),
    .y_d0(grp_sum_fu_1422_y_d0),
    .y_q0(fv11_q0)
);

lenetSynthMatlab_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenetSynthMatlab_bkb_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1428_p0),
    .din1(grp_fu_1428_p1),
    .ce(1'b1),
    .dout(grp_fu_1428_p2)
);

lenetSynthMatlab_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenetSynthMatlab_DeQ_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1442_p0),
    .din1(grp_fu_1442_p1),
    .ce(1'b1),
    .dout(grp_fu_1442_p2)
);

lenetSynthMatlab_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenetSynthMatlab_Ee0_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1447_p0),
    .ce(1'b1),
    .dout(grp_fu_1447_p1)
);

lenetSynthMatlab_Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
lenetSynthMatlab_Ffa_U20(
    .din0(grp_fu_1450_p0),
    .din1(grp_fu_1450_p1),
    .opcode(5'd4),
    .dout(grp_fu_1450_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_c_sum_fu_1398_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond18_fu_2613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
            grp_c_sum_fu_1398_ap_start_reg <= 1'b1;
        end else if ((grp_c_sum_fu_1398_ap_ready == 1'b1)) begin
            grp_c_sum_fu_1398_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_d_sum_fu_1410_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state71)) begin
            grp_d_sum_fu_1410_ap_start_reg <= 1'b1;
        end else if ((grp_d_sum_fu_1410_ap_ready == 1'b1)) begin
            grp_d_sum_fu_1410_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_f_sum_fu_1404_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond7_fu_3710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state110))) begin
            grp_f_sum_fu_1404_ap_start_reg <= 1'b1;
        end else if ((grp_f_sum_fu_1404_ap_ready == 1'b1)) begin
            grp_f_sum_fu_1404_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_g_sum_fu_1416_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state121)) begin
            grp_g_sum_fu_1416_ap_start_reg <= 1'b1;
        end else if ((grp_g_sum_fu_1416_ap_ready == 1'b1)) begin
            grp_g_sum_fu_1416_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sum_fu_1422_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond30_fu_1565_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            grp_sum_fu_1422_ap_start_reg <= 1'b1;
        end else if ((grp_sum_fu_1422_ap_ready == 1'b1)) begin
            grp_sum_fu_1422_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond17_fu_2697_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        b_k_1_reg_1095 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        b_k_1_reg_1095 <= b_k_8_reg_4644;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14_fu_3004_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state88))) begin
        b_k_2_reg_1149 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        b_k_2_reg_1149 <= b_k_6_reg_4731;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_3748_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
        b_k_3_reg_1275 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        b_k_3_reg_1275 <= b_k_7_reg_4972;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond27_fu_1817_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        b_k_reg_947 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        b_k_reg_947 <= b_k_4_reg_4339;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        c_1_reg_1014 <= colOutIdx_15_reg_4452;
    end else if (((exitcond24_fu_2003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        c_1_reg_1014 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond20_fu_2559_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
        c_2_reg_1061 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        c_2_reg_1061 <= c_5_reg_4590;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        c_3_reg_1206 <= colOutIdx_16_reg_4836;
    end else if (((exitcond11_fu_3154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state95))) begin
        c_3_reg_1206 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond32_fu_1533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c_reg_859 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_reg_859 <= c_4_reg_4196;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond30_fu_1565_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        colOutIdx1_reg_882 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        colOutIdx1_reg_882 <= colOutIdx_2_reg_4232;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond28_fu_1805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        colOutIdx_1_reg_936 <= 5'd0;
    end else if (((exitcond26_fu_1863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        colOutIdx_1_reg_936 <= colOutIdx_reg_4326;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond16_fu_2813_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
        colOutIdx_3_reg_1084 <= colOutIdx_10_reg_4621;
    end else if (((exitcond18_fu_2613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        colOutIdx_3_reg_1084 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_fu_3028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state89))) begin
        colOutIdx_4_reg_1138 <= colOutIdx_5_reg_4718;
    end else if (((exitcond15_fu_2966_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
        colOutIdx_4_reg_1138 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_3802_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state112))) begin
        colOutIdx_6_reg_1264 <= colOutIdx_9_reg_4954;
    end else if (((exitcond7_fu_3710_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state110))) begin
        colOutIdx_6_reg_1264 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        colOutIdx_7_reg_1341 <= colOutIdx_13_reg_5102;
    end else if (((exitcond3_fu_4002_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        colOutIdx_7_reg_1341 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state173)) begin
        colOutIdx_8_reg_1387 <= colOutIdx_14_reg_5159;
    end else if (((exitcond1_fu_4089_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state162))) begin
        colOutIdx_8_reg_1387 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond24_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        f_1_reg_969 <= f_6_reg_4404;
    end else if (((tmp_3_fu_1957_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        f_1_reg_969 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond20_fu_2559_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
        f_2_reg_1037 <= f_7_reg_4559;
    end else if (((exitcond25_fu_1971_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        f_2_reg_1037 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_fu_3154_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state95))) begin
        f_3_reg_1171 <= f_8_reg_4788;
    end else if (((tmp_20_fu_3118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
        f_3_reg_1171 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_fu_3136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state94))) begin
        f_4_reg_1229 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        f_4_reg_1229 <= f_9_reg_4928;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond32_fu_1533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        f_reg_825 <= f_5_reg_4155;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_reg_825 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond15_fu_2966_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        invdar1_reg_1160 <= 9'd0;
    end else if (((tmp_20_fu_3118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state93))) begin
        invdar1_reg_1160 <= indvarinc1_fu_3107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond28_fu_1805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        invdar_reg_958 <= 11'd0;
    end else if (((tmp_3_fu_1957_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        invdar_reg_958 <= indvarinc_fu_1946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_fu_3220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
        j_1_reg_1218 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        j_1_reg_1218 <= j_3_reg_4844;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        j_reg_1026 <= j_2_reg_4471;
    end else if (((exitcond23_fu_2043_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        j_reg_1026 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond31_fu_1549_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        k4_reg_871 <= 3'd0;
    end else if (((exitcond29_fu_1625_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        k4_reg_871 <= k_9_reg_4209;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond33_fu_1506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        k_1_reg_914 <= 5'd0;
    end else if (((exitcond27_fu_1817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        k_1_reg_914 <= k_reg_4318;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19_fu_2597_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60))) begin
        k_2_reg_1073 <= 3'd0;
    end else if (((exitcond17_fu_2697_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        k_2_reg_1073 <= k_14_reg_4598;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond21_fu_2542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        k_3_reg_1127 <= 4'd0;
    end else if (((exitcond14_fu_3004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state88))) begin
        k_3_reg_1127 <= k_11_reg_4705;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_3692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state109))) begin
        k_4_reg_1241 <= 3'd0;
    end else if (((exitcond6_fu_3748_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
        k_4_reg_1241 <= k_13_reg_4941;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_3692_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        k_5_reg_1307 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        k_5_reg_1307 <= k_21_reg_5053;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3937_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state139))) begin
        k_6_reg_1318 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        k_6_reg_1318 <= k_22_reg_5083;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_4002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state143))) begin
        k_7_reg_1352 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state180)) begin
        k_7_reg_1352 <= k_16_reg_5145;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        k_i1_reg_1116 <= k_20_reg_4682;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        k_i1_reg_1116 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        k_i2_reg_1296 <= k_15_reg_5020;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        k_i2_reg_1296 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        k_i_reg_903 <= k_10_reg_4285;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_i_reg_903 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        maxval_1_6_fu_344 <= maxval_1_5_fu_3541_p3;
    end else if (((tmp_20_fu_3118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
        maxval_1_6_fu_344 <= maxval_1_load_reg_4386;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        maxval_1_7_fu_348 <= maxval_1_4_fu_3534_p3;
    end else if (((tmp_20_fu_3118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
        maxval_1_7_fu_348 <= maxval_1_3_load_reg_4391;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond33_fu_1506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul2_reg_925 <= 13'd0;
    end else if (((exitcond27_fu_1817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        phi_mul2_reg_925 <= next_mul3_reg_4310;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        phi_mul4_reg_1003 <= next_mul5_reg_4424;
    end else if (((exitcond25_fu_1971_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        phi_mul4_reg_1003 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_3692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state109))) begin
        phi_mul6_reg_1252 <= 16'd0;
    end else if (((exitcond6_fu_3748_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
        phi_mul6_reg_1252 <= next_mul7_reg_4933;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_4002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state143))) begin
        phi_mul8_reg_1363 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state180)) begin
        phi_mul8_reg_1363 <= next_mul9_reg_5137;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond31_fu_1549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul_reg_848 <= next_mul_reg_4175;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        phi_mul_reg_848 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        r_1_reg_992 <= r_5_reg_4432;
    end else if (((exitcond25_fu_1971_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        r_1_reg_992 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19_fu_2597_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        r_2_reg_1049 <= r_6_reg_4577;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        r_2_reg_1049 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        r_3_reg_1194 <= r_7_reg_4806;
    end else if (((exitcond12_fu_3136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        r_3_reg_1194 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond31_fu_1549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        r_reg_836 <= r_4_reg_4183;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_reg_836 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state173)) begin
        tmp_111_reg_1375 <= grp_fu_1428_p2;
    end else if (((exitcond1_fu_4089_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state162))) begin
        tmp_111_reg_1375 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        tmp_95_reg_1329 <= grp_fu_1428_p2;
    end else if (((exitcond3_fu_4002_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        tmp_95_reg_1329 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        x_assign_5_reg_1182 <= grp_fu_1428_p2;
    end else if (((exitcond12_fu_3136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        x_assign_5_reg_1182 <= 32'd1065353216;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        x_assign_reg_980 <= grp_fu_1428_p2;
    end else if (((exitcond25_fu_1971_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        x_assign_reg_980 <= 32'd1065353216;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        y1_i_reg_1286 <= grp_fu_1428_p2;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        y1_i_reg_1286 <= fv16_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        y3_i_reg_1106 <= grp_fu_1428_p2;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        y3_i_reg_1106 <= fv14_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        y5_i_reg_893 <= grp_fu_1428_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        y5_i_reg_893 <= fv11_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        b_k_4_reg_4339 <= b_k_4_fu_1869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond23_fu_2043_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        b_k_5_cast_reg_4457[4 : 1] <= b_k_5_cast_fu_2063_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        b_k_6_reg_4731 <= b_k_6_fu_3034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        b_k_7_reg_4972 <= b_k_7_fu_3808_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        b_k_8_reg_4644 <= b_k_8_fu_2819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        b_maxval_1_reg_4520 <= relu1ActivationMap_q1;
        b_maxval_reg_4514 <= relu1ActivationMap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        b_maxval_3_reg_4893 <= relu2ActivationMap_q0;
        b_maxval_4_reg_4899 <= relu2ActivationMap_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        b_maxval_6_reg_4526 <= b_maxval_6_fu_2374_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        b_maxval_7_reg_4905 <= b_maxval_7_fu_3523_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        biasConv1_load_reg_4165 <= biasConv1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        biasConv2_load_reg_4569 <= biasConv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        biasFC1_load_reg_5045 <= biasFC1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        biasFC2_load_reg_5132 <= biasFC2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        biasFC3_load_reg_5189 <= biasFC3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c_4_reg_4196 <= c_4_fu_1555_p2;
        c_cast1_reg_4188[4 : 0] <= c_cast1_fu_1545_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        c_5_reg_4590 <= c_5_fu_2603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        colOutIdx_10_reg_4621 <= colOutIdx_10_fu_2703_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        colOutIdx_13_reg_5102 <= colOutIdx_13_fu_4058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        colOutIdx_14_reg_5159 <= colOutIdx_14_fu_4115_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        colOutIdx_15_reg_4452 <= colOutIdx_15_fu_2049_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        colOutIdx_16_reg_4836 <= colOutIdx_16_fu_3226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        colOutIdx_2_reg_4232 <= colOutIdx_2_fu_1631_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        colOutIdx_5_reg_4718 <= colOutIdx_5_fu_3010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        colOutIdx_9_reg_4954 <= colOutIdx_9_fu_3754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        colOutIdx_reg_4326 <= colOutIdx_fu_1823_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        d_relu3ActivationMap_3_reg_5179 <= d_relu3ActivationMap_q0;
        weightsFC3_load_reg_5184 <= weightsFC3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        f_1_cast_reg_4396[2 : 0] <= f_1_cast_fu_1963_p1[2 : 0];
        f_6_reg_4404 <= f_6_fu_1977_p2;
        maxval_1_3_load_reg_4391 <= maxval_1_3_fu_340;
        maxval_1_load_reg_4386 <= maxval_1_fu_336;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        f_2_cast_reg_4551[4 : 0] <= f_2_cast_fu_2538_p1[4 : 0];
        f_7_reg_4559 <= f_7_fu_2548_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        f_3_cast_reg_4780[4 : 0] <= f_3_cast_fu_3132_p1[4 : 0];
        f_8_reg_4788 <= f_8_fu_3142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        f_5_reg_4155 <= f_5_fu_1512_p2;
        f_cast1_reg_4147[2 : 0] <= f_cast1_fu_1502_p1[2 : 0];
        f_cast_reg_4142[2 : 0] <= f_cast_fu_1498_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        f_9_reg_4928 <= f_9_fu_3698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        fv11_load_reg_4300 <= fv11_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        fv14_load_reg_4697 <= fv14_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        fv16_load_reg_5040 <= fv16_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        inputImg_load_reg_4252 <= inputImg_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        j_2_reg_4471 <= j_2_fu_2077_p2;
        tmp_32_reg_4462 <= tmp_32_fu_2067_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        j_3_reg_4844 <= j_3_fu_3238_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k4_cast2_reg_4201[2 : 0] <= k4_cast2_fu_1561_p1[2 : 0];
        k_9_reg_4209 <= k_9_fu_1571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        k_10_reg_4285 <= k_10_fu_1732_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        k_11_reg_4705 <= k_11_fu_2972_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        k_13_reg_4941 <= k_13_fu_3716_p2;
        next_mul7_reg_4933 <= next_mul7_fu_3704_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        k_14_reg_4598 <= k_14_fu_2619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        k_15_reg_5020 <= k_15_fu_3921_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state162)) begin
        k_16_reg_5145 <= k_16_fu_4095_p2;
        next_mul9_reg_5137 <= next_mul9_fu_4083_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        k_20_reg_4682 <= k_20_fu_2929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        k_21_reg_5053 <= k_21_fu_3943_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        k_22_reg_5083 <= k_22_fu_4008_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        k_reg_4318 <= k_fu_1811_p2;
        next_mul3_reg_4310 <= next_mul3_fu_1799_p2;
        phi_mul2_cast_reg_4305[12 : 0] <= phi_mul2_cast_fu_1795_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        maxval_1_3_fu_340 <= maxval_1_1_fu_2388_p3;
        maxval_1_fu_336 <= maxval_1_2_fu_2395_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        maxval_1_3_maxval_0_3_reg_4546 <= maxval_1_3_maxval_0_3_fu_2512_p3;
        tmp_60_reg_4541 <= tmp_60_fu_2507_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        maxval_1_8_maxval_0_8_reg_4920 <= maxval_1_8_maxval_0_8_fu_3680_p3;
        tmp_139_reg_4915 <= tmp_139_fu_3674_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        next_mul5_reg_4424 <= next_mul5_fu_1997_p2;
        phi_mul4_cast_reg_4419[12 : 0] <= phi_mul4_cast_fu_1993_p1[12 : 0];
        r_5_reg_4432 <= r_5_fu_2009_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        next_mul_reg_4175 <= next_mul_fu_1527_p2;
        phi_mul_cast_reg_4170[12 : 0] <= phi_mul_cast_fu_1523_p1[12 : 0];
        r_4_reg_4183 <= r_4_fu_1539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond22_fu_2071_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        p_Val2_2_reg_4498 <= p_Val2_2_fu_2268_p3;
        tmp_47_reg_4488[7 : 1] <= tmp_47_fu_2148_p2[7 : 1];
        tmp_50_reg_4493 <= p_Val2_s_reg_4442[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        p_Val2_6_reg_4536 <= p_Val2_6_fu_2417_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_3232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        p_Val2_9_reg_4872 <= p_Val2_9_fu_3417_p3;
        tmp20_reg_4878 <= tmp20_fu_3425_p2;
        tmp_143_reg_4867 <= p_Val2_s_41_reg_4826[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_fu_3154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state95))) begin
        p_Val2_s_41_reg_4826 <= p_Val2_s_41_fu_3216_p1;
        p_shl35_cast_reg_4811[8 : 6] <= p_shl35_cast_fu_3182_p1[8 : 6];
        p_shl36_cast_reg_4816[10 : 8] <= p_shl36_cast_fu_3200_p1[10 : 8];
        p_shl37_cast_reg_4821[8 : 6] <= p_shl37_cast_fu_3212_p1[8 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond24_fu_2003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        p_Val2_s_reg_4442 <= p_Val2_s_fu_2039_p1;
        tmp_21_reg_4437[13 : 3] <= tmp_21_fu_2033_p2[13 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond30_fu_1565_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        p_shl6_reg_4219[4 : 2] <= p_shl6_fu_1583_p3[4 : 2];
        tmp_17_reg_4214 <= tmp_17_fu_1577_p2;
        tmp_18_reg_4224[8 : 1] <= tmp_18_fu_1615_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        pool1ActivationMap_l_reg_4664 <= pool1ActivationMap_q0;
        weightsConv2_load_reg_4669 <= weightsConv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        pool2ActivationMap_l_reg_5002 <= pool2ActivationMap_q0;
        weightsFC1_load_reg_5007 <= weightsFC1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        r_6_reg_4577 <= r_6_fu_2565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        r_7_reg_4806 <= r_7_fu_3160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state32))) begin
        reg_1482 <= grp_fu_1428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state68))) begin
        reg_1491 <= grp_fu_1442_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        relu3ActivationMap_l_reg_5122 <= relu3ActivationMap_q0;
        weightsFC2_load_reg_5127 <= weightsFC2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        rowOutIdx_1_reg_4361 <= rowOutIdx_1_fu_1939_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        rowOutIdx_2_reg_4753 <= rowOutIdx_2_fu_3100_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        rowOutIdx_4_reg_5075 <= rowOutIdx_4_fu_3995_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        rowOutIdx_5_reg_4746 <= conv2ActivationMap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        rowOutIdx_6_reg_5068 <= fc1ActivationMap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        rowOutIdx_reg_4354 <= conv1ActivationMap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond20_fu_2559_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
        tmp13_reg_4582[10 : 5] <= tmp13_fu_2591_p2[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_3710_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state110))) begin
        tmp23_reg_4946[8 : 4] <= tmp23_fu_3742_p2[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond15_fu_2966_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
        tmp8_reg_4710[10 : 5] <= tmp8_fu_2998_p2[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond16_fu_2813_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
        tmp_101_reg_4654 <= tmp_101_fu_2857_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_3748_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
        tmp_109_reg_4964[14 : 7] <= tmp_109_fu_3792_p2[14 : 7];
        tmp_96_reg_4959[6 : 4] <= tmp_96_fu_3760_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_3232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        tmp_121_reg_4855 <= tmp_121_fu_3275_p2;
        tmp_131_reg_4861 <= tmp_131_fu_3285_p2;
        tmp_165_reg_4849 <= tmp_165_fu_3244_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_3802_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state112))) begin
        tmp_147_reg_4977 <= tmp_147_fu_3823_p2;
        tmp_151_reg_4982 <= tmp_151_fu_3897_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        tmp_148_reg_4987[8 : 0] <= tmp_148_fu_3903_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_1726_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        tmp_14_reg_4295 <= tmp_14_fu_1782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond29_fu_1625_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_24_reg_4242 <= tmp_24_fu_1661_p2;
        tmp_27_reg_4247 <= tmp_27_fu_1705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_30_reg_4272 <= grp_fu_1447_p1;
        weightsConv1_load_reg_4267 <= weightsConv1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14_fu_3004_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state88))) begin
        tmp_33_reg_4723[7 : 4] <= tmp_33_fu_3016_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond22_fu_2071_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        tmp_45_reg_4476 <= tmp_45_fu_2126_p2;
        tmp_51_reg_4482 <= tmp_51_fu_2131_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_fu_3136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        tmp_48_reg_4793 <= tmp_48_fu_3148_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3937_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state139))) begin
        tmp_49_reg_5058[6 : 0] <= tmp_49_fu_3949_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond27_fu_1817_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        tmp_4_reg_4331[8 : 1] <= tmp_4_fu_1853_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i2_fu_3915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state125))) begin
        tmp_52_reg_5030[6 : 0] <= tmp_52_fu_3932_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond25_fu_1971_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        tmp_5_cast_reg_4409 <= tmp_5_cast_fu_1989_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_fu_3028_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state89))) begin
        tmp_72_reg_4736[10 : 0] <= tmp_72_fu_3054_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18_fu_2613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        tmp_75_reg_4603[11 : 2] <= tmp_75_fu_2635_p2[11 : 2];
        tmp_76_reg_4608[8 : 1] <= tmp_76_fu_2669_p2[8 : 1];
        tmp_79_reg_4613[12 : 5] <= tmp_79_fu_2687_p2[12 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i1_fu_2923_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
        tmp_80_reg_4692 <= tmp_80_fu_2957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond17_fu_2697_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        tmp_87_reg_4626[7 : 1] <= tmp_87_fu_2739_p2[7 : 1];
        tmp_88_reg_4631[6 : 1] <= tmp_88_fu_2769_p2[6 : 1];
        tmp_89_reg_4636[10 : 5] <= tmp_89_fu_2799_p2[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond26_fu_1863_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        tmp_8_reg_4344[31 : 0] <= tmp_8_fu_1893_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_4002_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        tmp_91_reg_5088[6 : 0] <= tmp_91_fu_4014_p1[6 : 0];
        tmp_92_reg_5094[14 : 3] <= tmp_92_fu_4042_p2[14 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_4089_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state162))) begin
        tmp_93_reg_5150[3 : 0] <= tmp_93_fu_4101_p1[3 : 0];
    end
end

always @ (*) begin
    if (((exitcond1_fu_4089_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state162))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_4089_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state162))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        b_pool2ActivationMap_address0 = tmp_148_reg_4987;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        b_pool2ActivationMap_address0 = grp_f_sum_fu_1404_x_address0;
    end else begin
        b_pool2ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        b_pool2ActivationMap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        b_pool2ActivationMap_ce0 = grp_f_sum_fu_1404_x_ce0;
    end else begin
        b_pool2ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        b_pool2ActivationMap_we0 = 1'b1;
    end else begin
        b_pool2ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        biasConv1_ce0 = 1'b1;
    end else begin
        biasConv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        biasConv2_ce0 = 1'b1;
    end else begin
        biasConv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        biasFC1_ce0 = 1'b1;
    end else begin
        biasFC1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        biasFC2_ce0 = 1'b1;
    end else begin
        biasFC2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        biasFC3_ce0 = 1'b1;
    end else begin
        biasFC3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        conv1ActivationMap_address0 = tmp_8_fu_1893_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        conv1ActivationMap_address0 = tmp_15_fu_1790_p1;
    end else begin
        conv1ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33))) begin
        conv1ActivationMap_ce0 = 1'b1;
    end else begin
        conv1ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        conv1ActivationMap_we0 = 1'b1;
    end else begin
        conv1ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        conv2ActivationMap_address0 = tmp_72_fu_3054_p1;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        conv2ActivationMap_address0 = tmp_81_fu_2962_p1;
    end else begin
        conv2ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state86))) begin
        conv2ActivationMap_ce0 = 1'b1;
    end else begin
        conv2ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        conv2ActivationMap_we0 = 1'b1;
    end else begin
        conv2ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        d_relu3ActivationMap_address0 = tmp_125_fu_4121_p1;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        d_relu3ActivationMap_address0 = tmp_91_reg_5088;
    end else begin
        d_relu3ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state163))) begin
        d_relu3ActivationMap_ce0 = 1'b1;
    end else begin
        d_relu3ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state161)) begin
        d_relu3ActivationMap_we0 = 1'b1;
    end else begin
        d_relu3ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        fc1ActivationMap_address0 = tmp_49_fu_3949_p1;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        fc1ActivationMap_address0 = tmp_52_reg_5030;
    end else begin
        fc1ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state139))) begin
        fc1ActivationMap_ce0 = 1'b1;
    end else begin
        fc1ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        fc1ActivationMap_we0 = 1'b1;
    end else begin
        fc1ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        fv10_address0 = tmp_25_fu_1722_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fv10_address0 = grp_sum_fu_1422_x_address0;
    end else begin
        fv10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        fv10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fv10_ce0 = grp_sum_fu_1422_x_ce0;
    end else begin
        fv10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        fv10_we0 = 1'b1;
    end else begin
        fv10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        fv11_address0 = tmp_i_fu_1738_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        fv11_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fv11_address0 = grp_sum_fu_1422_y_address0;
    end else begin
        fv11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        fv11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fv11_ce0 = grp_sum_fu_1422_y_ce0;
    end else begin
        fv11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        fv11_we0 = grp_sum_fu_1422_y_we0;
    end else begin
        fv11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        fv12_address0 = tmp_102_fu_2918_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        fv12_address0 = grp_c_sum_fu_1398_x_address0;
    end else begin
        fv12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        fv12_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        fv12_ce0 = grp_c_sum_fu_1398_x_ce0;
    end else begin
        fv12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        fv12_we0 = 1'b1;
    end else begin
        fv12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        fv13_address0 = grp_d_sum_fu_1410_x_address0;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        fv13_address0 = grp_c_sum_fu_1398_y_address0;
    end else begin
        fv13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        fv13_ce0 = grp_d_sum_fu_1410_x_ce0;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        fv13_ce0 = grp_c_sum_fu_1398_y_ce0;
    end else begin
        fv13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        fv13_we0 = grp_c_sum_fu_1398_y_we0;
    end else begin
        fv13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fv14_address0 = tmp_i1_fu_2935_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fv14_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        fv14_address0 = grp_d_sum_fu_1410_y_address0;
    end else begin
        fv14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state73))) begin
        fv14_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        fv14_ce0 = grp_d_sum_fu_1410_y_ce0;
    end else begin
        fv14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        fv14_we0 = grp_d_sum_fu_1410_y_we0;
    end else begin
        fv14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        fv15_address0 = grp_g_sum_fu_1416_x_address0;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        fv15_address0 = grp_f_sum_fu_1404_y_address0;
    end else begin
        fv15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        fv15_ce0 = grp_g_sum_fu_1416_x_ce0;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        fv15_ce0 = grp_f_sum_fu_1404_y_ce0;
    end else begin
        fv15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        fv15_we0 = grp_f_sum_fu_1404_y_we0;
    end else begin
        fv15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        fv16_address0 = tmp_i2_fu_3927_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        fv16_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        fv16_address0 = grp_g_sum_fu_1416_y_address0;
    end else begin
        fv16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state125))) begin
        fv16_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        fv16_ce0 = grp_g_sum_fu_1416_y_ce0;
    end else begin
        fv16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        fv16_we0 = grp_g_sum_fu_1416_y_we0;
    end else begin
        fv16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state169))) begin
        grp_fu_1428_p0 = tmp_111_reg_1375;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state150))) begin
        grp_fu_1428_p0 = tmp_95_reg_1329;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state127))) begin
        grp_fu_1428_p0 = y1_i_reg_1286;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_1428_p0 = x_assign_5_reg_1182;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_1428_p0 = y3_i_reg_1106;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_1428_p0 = ap_phi_mux_y3_i_phi_fu_1109_p4;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_1428_p0 = x_assign_reg_980;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1428_p0 = y5_i_reg_893;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1428_p0 = ap_phi_mux_y5_i_phi_fu_896_p4;
    end else begin
        grp_fu_1428_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_fu_1428_p1 = biasFC3_load_reg_5189;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_1428_p1 = biasFC2_load_reg_5132;
    end else if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state150))) begin
        grp_fu_1428_p1 = reg_1491;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_1428_p1 = biasFC1_load_reg_5045;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_1428_p1 = fv16_load_reg_5040;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_1428_p1 = fv14_load_reg_4697;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_1428_p1 = biasConv2_load_reg_4569;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_1428_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1428_p1 = fv11_load_reg_4300;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1428_p1 = biasConv1_load_reg_4165;
    end else begin
        grp_fu_1428_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state165)) begin
        grp_fu_1442_p0 = d_relu3ActivationMap_3_reg_5179;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1442_p0 = relu3ActivationMap_l_reg_5122;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        grp_fu_1442_p0 = pool2ActivationMap_l_reg_5002;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1442_p0 = weightsConv2_load_reg_4669;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1442_p0 = weightsConv1_load_reg_4267;
    end else begin
        grp_fu_1442_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state165)) begin
        grp_fu_1442_p1 = weightsFC3_load_reg_5184;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1442_p1 = weightsFC2_load_reg_5127;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        grp_fu_1442_p1 = weightsFC1_load_reg_5007;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1442_p1 = pool1ActivationMap_l_reg_4664;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1442_p1 = tmp_30_reg_4272;
    end else begin
        grp_fu_1442_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_1450_p0 = rowOutIdx_6_reg_5068;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_1450_p0 = maxval_1_6_fu_344;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1450_p0 = b_maxval_3_reg_4893;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_1450_p0 = rowOutIdx_5_reg_4746;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_1450_p0 = maxval_1_fu_336;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1450_p0 = b_maxval_reg_4514;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1450_p0 = rowOutIdx_reg_4354;
    end else begin
        grp_fu_1450_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_1450_p1 = maxval_1_7_fu_348;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1450_p1 = b_maxval_4_reg_4899;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_1450_p1 = maxval_1_3_fu_340;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1450_p1 = b_maxval_1_reg_4520;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state141))) begin
        grp_fu_1450_p1 = 32'd0;
    end else begin
        grp_fu_1450_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        inputImg_ce0 = 1'b1;
    end else begin
        inputImg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state180)) begin
        netScores_ce0 = 1'b1;
    end else begin
        netScores_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state180)) begin
        netScores_we0 = 1'b1;
    end else begin
        netScores_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        pool1ActivationMap_address0 = tmp_99_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        pool1ActivationMap_address0 = tmp_63_fu_2533_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        pool1ActivationMap_address0 = tmp_2_fu_1952_p1;
    end else begin
        pool1ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state52))) begin
        pool1ActivationMap_ce0 = 1'b1;
    end else begin
        pool1ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        pool1ActivationMap_d0 = maxval_1_3_maxval_0_3_reg_4546;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        pool1ActivationMap_d0 = 32'd0;
    end else begin
        pool1ActivationMap_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state52))) begin
        pool1ActivationMap_we0 = 1'b1;
    end else begin
        pool1ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        pool2ActivationMap_address0 = tmp_148_fu_3903_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        pool2ActivationMap_address0 = tmp_140_fu_3688_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        pool2ActivationMap_address0 = tmp_16_fu_3113_p1;
    end else begin
        pool2ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state113))) begin
        pool2ActivationMap_ce0 = 1'b1;
    end else begin
        pool2ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        pool2ActivationMap_d0 = maxval_1_8_maxval_0_8_reg_4920;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        pool2ActivationMap_d0 = 32'd0;
    end else begin
        pool2ActivationMap_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state104))) begin
        pool2ActivationMap_we0 = 1'b1;
    end else begin
        pool2ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        relu1ActivationMap_address0 = tmp_46_fu_2279_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        relu1ActivationMap_address0 = tmp_8_reg_4344;
    end else begin
        relu1ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        relu1ActivationMap_address1 = b_maxval_6_cast_fu_2383_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        relu1ActivationMap_address1 = tmp_53_fu_2287_p1;
    end else begin
        relu1ActivationMap_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state39))) begin
        relu1ActivationMap_ce0 = 1'b1;
    end else begin
        relu1ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state45))) begin
        relu1ActivationMap_ce1 = 1'b1;
    end else begin
        relu1ActivationMap_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        relu1ActivationMap_we0 = 1'b1;
    end else begin
        relu1ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        relu2ActivationMap_address0 = tmp_122_fu_3430_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        relu2ActivationMap_address0 = tmp_72_reg_4736;
    end else begin
        relu2ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        relu2ActivationMap_address1 = b_maxval_7_cast_fu_3530_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        relu2ActivationMap_address1 = tmp_132_fu_3434_p1;
    end else begin
        relu2ActivationMap_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state92))) begin
        relu2ActivationMap_ce0 = 1'b1;
    end else begin
        relu2ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state98))) begin
        relu2ActivationMap_ce1 = 1'b1;
    end else begin
        relu2ActivationMap_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        relu2ActivationMap_we0 = 1'b1;
    end else begin
        relu2ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        relu3ActivationMap_address0 = tmp_114_fu_4064_p1;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        relu3ActivationMap_address0 = tmp_49_reg_5058;
    end else begin
        relu3ActivationMap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state144))) begin
        relu3ActivationMap_ce0 = 1'b1;
    end else begin
        relu3ActivationMap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        relu3ActivationMap_we0 = 1'b1;
    end else begin
        relu3ActivationMap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weightsConv1_ce0 = 1'b1;
    end else begin
        weightsConv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        weightsConv2_ce0 = 1'b1;
    end else begin
        weightsConv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weightsFC1_ce0 = 1'b1;
    end else begin
        weightsFC1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        weightsFC2_ce0 = 1'b1;
    end else begin
        weightsFC2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        weightsFC3_ce0 = 1'b1;
    end else begin
        weightsFC3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond33_fu_1506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond32_fu_1533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond31_fu_1549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond30_fu_1565_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond29_fu_1625_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (grp_sum_fu_1422_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((exitcond_i_fu_1726_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state34 : begin
            if (((exitcond28_fu_1805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((exitcond27_fu_1817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((exitcond26_fu_1863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state40 : begin
            if (((tmp_3_fu_1957_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((exitcond25_fu_1971_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((exitcond24_fu_2003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((exitcond23_fu_2043_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((exitcond22_fu_2071_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state57 : begin
            if (((exitcond21_fu_2542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((exitcond20_fu_2559_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((exitcond19_fu_2597_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((exitcond18_fu_2613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((exitcond17_fu_2697_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((exitcond16_fu_2813_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & (grp_c_sum_fu_1398_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (grp_d_sum_fu_1410_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((exitcond_i1_fu_2923_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state87 : begin
            if (((exitcond15_fu_2966_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state88 : begin
            if (((exitcond14_fu_3004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state89 : begin
            if (((exitcond13_fu_3028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state89))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state93 : begin
            if (((tmp_20_fu_3118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state94 : begin
            if (((exitcond12_fu_3136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state95 : begin
            if (((exitcond11_fu_3154_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state95))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state96 : begin
            if (((exitcond10_fu_3220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state97 : begin
            if (((exitcond9_fu_3232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state109 : begin
            if (((exitcond8_fu_3692_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state110 : begin
            if (((exitcond7_fu_3710_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end
        end
        ap_ST_fsm_state111 : begin
            if (((exitcond6_fu_3748_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((exitcond5_fu_3802_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state112))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state120 : begin
            if (((1'b1 == ap_CS_fsm_state120) & (grp_f_sum_fu_1404_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            if (((1'b1 == ap_CS_fsm_state122) & (grp_g_sum_fu_1416_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            if (((exitcond_i2_fu_3915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state125))) begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state139 : begin
            if (((exitcond4_fu_3937_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state139))) begin
                ap_NS_fsm = ap_ST_fsm_state143;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state143 : begin
            if (((exitcond3_fu_4002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state143))) begin
                ap_NS_fsm = ap_ST_fsm_state162;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state144;
            end
        end
        ap_ST_fsm_state144 : begin
            if (((exitcond2_fu_4052_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state144))) begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state145;
            end
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state162 : begin
            if (((exitcond1_fu_4089_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state162))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state163;
            end
        end
        ap_ST_fsm_state163 : begin
            if (((exitcond_fu_4109_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state163))) begin
                ap_NS_fsm = ap_ST_fsm_state174;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state164;
            end
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd174];

assign ap_CS_fsm_state179 = ap_CS_fsm[32'd178];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd179];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_phi_mux_y3_i_phi_fu_1109_p4 = y3_i_reg_1106;

assign ap_phi_mux_y5_i_phi_fu_896_p4 = y5_i_reg_893;

assign b_k_1_cast1_fu_2809_p1 = b_k_1_reg_1095;

assign b_k_1_cast_fu_2805_p1 = b_k_1_reg_1095;

assign b_k_2_cast_fu_3024_p1 = b_k_2_reg_1149;

assign b_k_3_cast_fu_3798_p1 = b_k_3_reg_1275;

assign b_k_4_fu_1869_p2 = (b_k_reg_947 + 3'd1);

assign b_k_5_cast_fu_2063_p1 = b_k_5_fu_2055_p3;

assign b_k_5_fu_2055_p3 = {{c_1_reg_1014}, {1'd0}};

assign b_k_6_fu_3034_p2 = (b_k_2_reg_1149 + 5'd1);

assign b_k_7_fu_3808_p2 = (b_k_3_reg_1275 + 5'd1);

assign b_k_8_fu_2819_p2 = (b_k_1_reg_1095 + 3'd1);

assign b_k_cast_fu_1859_p1 = b_k_reg_947;

assign b_maxval_1_to_int_fu_2309_p1 = b_maxval_1_reg_4520;

assign b_maxval_3_to_int_fu_3441_p1 = b_maxval_3_reg_4893;

assign b_maxval_4_to_int_fu_3458_p1 = b_maxval_4_reg_4899;

assign b_maxval_6_cast1_fu_2380_p1 = $signed(b_maxval_6_reg_4526);

assign b_maxval_6_cast_fu_2383_p1 = $unsigned(b_maxval_6_cast1_fu_2380_p1);

assign b_maxval_6_fu_2374_p3 = ((tmp_73_fu_2368_p2[0:0] === 1'b1) ? tmp_51_reg_4482 : tmp_45_reg_4476);

assign b_maxval_7_cast_fu_3530_p1 = b_maxval_7_reg_4905;

assign b_maxval_7_fu_3523_p3 = ((tmp_163_fu_3517_p2[0:0] === 1'b1) ? tmp_131_reg_4861 : tmp_122_cast_cast_fu_3438_p1);

assign b_maxval_to_int_fu_2292_p1 = b_maxval_reg_4514;

assign biasConv1_address0 = tmp_fu_1518_p1;

assign biasConv2_address0 = tmp_10_fu_2554_p1;

assign biasFC1_address0 = tmp_52_fu_3932_p1;

assign biasFC2_address0 = tmp_91_reg_5088;

assign biasFC3_address0 = tmp_93_reg_5150;

assign c_4_fu_1555_p2 = (c_reg_859 + 5'd1);

assign c_5_fu_2603_p2 = (c_2_reg_1061 + 4'd1);

assign c_cast1_fu_1545_p1 = c_reg_859;

assign colOutIdx1_cast1_fu_1621_p1 = colOutIdx1_reg_882;

assign colOutIdx_10_fu_2703_p2 = (colOutIdx_3_reg_1084 + 3'd1);

assign colOutIdx_13_fu_4058_p2 = (colOutIdx_7_reg_1341 + 7'd1);

assign colOutIdx_14_fu_4115_p2 = (colOutIdx_8_reg_1387 + 7'd1);

assign colOutIdx_15_fu_2049_p2 = (c_1_reg_1014 + 4'd1);

assign colOutIdx_16_fu_3226_p2 = (c_3_reg_1206 + 3'd1);

assign colOutIdx_2_fu_1631_p2 = (colOutIdx1_reg_882 + 3'd1);

assign colOutIdx_3_cast_fu_2693_p1 = colOutIdx_3_reg_1084;

assign colOutIdx_5_fu_3010_p2 = (colOutIdx_4_reg_1138 + 4'd1);

assign colOutIdx_7_cast_fu_4048_p1 = colOutIdx_7_reg_1341;

assign colOutIdx_8_cast_fu_4105_p1 = colOutIdx_8_reg_1387;

assign colOutIdx_9_fu_3754_p2 = (colOutIdx_6_reg_1264 + 3'd1);

assign colOutIdx_fu_1823_p2 = (colOutIdx_1_reg_936 + 5'd1);

assign exitcond10_fu_3220_p2 = ((c_3_reg_1206 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond11_fu_3154_p2 = ((r_3_reg_1194 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond12_fu_3136_p2 = ((f_3_reg_1171 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond13_fu_3028_p2 = ((b_k_2_reg_1149 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond14_fu_3004_p2 = ((colOutIdx_4_reg_1138 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond15_fu_2966_p2 = ((k_3_reg_1127 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond16_fu_2813_p2 = ((b_k_1_reg_1095 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond17_fu_2697_p2 = ((colOutIdx_3_reg_1084 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond18_fu_2613_p2 = ((k_2_reg_1073 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond19_fu_2597_p2 = ((c_2_reg_1061 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond1_fu_4089_p2 = ((k_7_reg_1352 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond20_fu_2559_p2 = ((r_2_reg_1049 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond21_fu_2542_p2 = ((f_2_reg_1037 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond22_fu_2071_p2 = ((j_reg_1026 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond23_fu_2043_p2 = ((c_1_reg_1014 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond24_fu_2003_p2 = ((r_1_reg_992 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond25_fu_1971_p2 = ((f_1_reg_969 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond26_fu_1863_p2 = ((b_k_reg_947 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond27_fu_1817_p2 = ((colOutIdx_1_reg_936 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond28_fu_1805_p2 = ((k_1_reg_914 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond29_fu_1625_p2 = ((colOutIdx1_reg_882 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond2_fu_4052_p2 = ((colOutIdx_7_reg_1341 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond30_fu_1565_p2 = ((k4_reg_871 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond31_fu_1549_p2 = ((c_reg_859 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond32_fu_1533_p2 = ((r_reg_836 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond33_fu_1506_p2 = ((f_reg_825 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond3_fu_4002_p2 = ((k_6_reg_1318 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond4_fu_3937_p2 = ((k_5_reg_1307 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond5_fu_3802_p2 = ((b_k_3_reg_1275 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond6_fu_3748_p2 = ((colOutIdx_6_reg_1264 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond7_fu_3710_p2 = ((k_4_reg_1241 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond8_fu_3692_p2 = ((f_4_reg_1229 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond9_fu_3232_p2 = ((j_1_reg_1218 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_fu_4109_p2 = ((colOutIdx_8_reg_1387 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_2923_p2 = ((k_i1_reg_1116 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_3915_p2 = ((k_i2_reg_1296 == 4'd15) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1726_p2 = ((k_i_reg_903 == 3'd4) ? 1'b1 : 1'b0);

assign f_1_cast1_fu_1967_p1 = f_1_reg_969;

assign f_1_cast_fu_1963_p1 = f_1_reg_969;

assign f_2_cast_fu_2538_p1 = f_2_reg_1037;

assign f_3_cast_fu_3132_p1 = f_3_reg_1171;

assign f_5_fu_1512_p2 = (f_reg_825 + 3'd1);

assign f_6_fu_1977_p2 = (f_1_reg_969 + 3'd1);

assign f_7_fu_2548_p2 = (f_2_reg_1037 + 5'd1);

assign f_8_fu_3142_p2 = (f_3_reg_1171 + 5'd1);

assign f_9_fu_3698_p2 = (f_4_reg_1229 + 7'd1);

assign f_cast1_fu_1502_p1 = f_reg_825;

assign f_cast_fu_1498_p1 = f_reg_825;

assign grp_c_sum_fu_1398_ap_start = grp_c_sum_fu_1398_ap_start_reg;

assign grp_d_sum_fu_1410_ap_start = grp_d_sum_fu_1410_ap_start_reg;

assign grp_f_sum_fu_1404_ap_start = grp_f_sum_fu_1404_ap_start_reg;

assign grp_fu_1447_p0 = inputImg_load_reg_4252;

assign grp_g_sum_fu_1416_ap_start = grp_g_sum_fu_1416_ap_start_reg;

assign grp_sum_fu_1422_ap_start = grp_sum_fu_1422_ap_start_reg;

assign indvarinc1_fu_3107_p2 = (invdar1_reg_1160 + 9'd1);

assign indvarinc_fu_1946_p2 = (invdar_reg_958 + 11'd1);

assign inputImg_address0 = tmp_23_fu_1651_p1;

assign j_2_fu_2077_p2 = (2'd1 + j_reg_1026);

assign j_3_fu_3238_p2 = (j_1_reg_1218 + 2'd1);

assign k4_cast2_fu_1561_p1 = k4_reg_871;

assign k_10_fu_1732_p2 = (k_i_reg_903 + 3'd1);

assign k_11_fu_2972_p2 = (k_3_reg_1127 + 4'd1);

assign k_12_fu_3166_p3 = {{r_3_reg_1194}, {1'd0}};

assign k_13_fu_3716_p2 = (k_4_reg_1241 + 3'd1);

assign k_14_fu_2619_p2 = (k_2_reg_1073 + 3'd1);

assign k_15_fu_3921_p2 = (k_i2_reg_1296 + 4'd1);

assign k_16_fu_4095_p2 = (k_7_reg_1352 + 4'd1);

assign k_20_fu_2929_p2 = (k_i1_reg_1116 + 3'd1);

assign k_21_fu_3943_p2 = (k_5_reg_1307 + 7'd1);

assign k_22_fu_4008_p2 = (k_6_reg_1318 + 7'd1);

assign k_2_cast_fu_2609_p1 = k_2_reg_1073;

assign k_8_fu_2015_p3 = {{r_1_reg_992}, {1'd0}};

assign k_9_fu_1571_p2 = (k4_reg_871 + 3'd1);

assign k_fu_1811_p2 = (k_1_reg_914 + 5'd1);

assign loc_V_2_fu_3309_p4 = {{p_Val2_s_41_reg_4826[30:23]}};

assign loc_V_fu_2160_p4 = {{p_Val2_s_reg_4442[30:23]}};

assign maxval_0_3_to_int_fu_2423_p1 = maxval_1_fu_336;

assign maxval_0_8_to_int_fu_3558_p1 = maxval_1_6_fu_344;

assign maxval_1_1_fu_2388_p3 = ((tmp_32_reg_4462[0:0] === 1'b1) ? relu1ActivationMap_q1 : maxval_1_3_fu_340);

assign maxval_1_2_fu_2395_p3 = ((tmp_32_reg_4462[0:0] === 1'b1) ? maxval_1_fu_336 : relu1ActivationMap_q1);

assign maxval_1_3_maxval_0_3_fu_2512_p3 = ((tmp_43_fu_2501_p2[0:0] === 1'b1) ? maxval_1_3_fu_340 : maxval_1_fu_336);

assign maxval_1_3_to_int_fu_2441_p1 = maxval_1_3_fu_340;

assign maxval_1_4_fu_3534_p3 = ((tmp_165_reg_4849[0:0] === 1'b1) ? relu2ActivationMap_q1 : maxval_1_7_fu_348);

assign maxval_1_5_fu_3541_p3 = ((tmp_165_reg_4849[0:0] === 1'b1) ? maxval_1_6_fu_344 : relu2ActivationMap_q1);

assign maxval_1_8_maxval_0_8_fu_3680_p3 = ((tmp_142_fu_3636_p2[0:0] === 1'b1) ? maxval_1_7_fu_348 : maxval_1_6_fu_344);

assign maxval_1_8_to_int_fu_3576_p1 = maxval_1_7_fu_348;

assign netScores_address0 = tmp_93_reg_5150;

assign netScores_d0 = reg_1482;

assign next_mul3_fu_1799_p2 = (phi_mul2_reg_925 + 13'd168);

assign next_mul5_fu_1997_p2 = (phi_mul4_reg_1003 + 13'd336);

assign next_mul7_fu_3704_p2 = (phi_mul6_reg_1252 + 16'd9600);

assign next_mul9_fu_4083_p2 = (phi_mul8_reg_1363 + 10'd84);

assign next_mul_fu_1527_p2 = (phi_mul_reg_848 + 13'd168);

assign notlhs10_fu_3493_p2 = ((tmp_157_fu_3461_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs1_fu_2459_p2 = ((tmp_34_fu_2427_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_2477_p2 = ((tmp_36_fu_2445_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_2326_p2 = ((tmp_55_fu_2295_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_2344_p2 = ((tmp_57_fu_2312_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_3076_p2 = ((tmp_82_fu_3062_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs6_fu_3971_p2 = ((tmp_97_fu_3957_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs7_fu_3594_p2 = ((tmp_119_fu_3562_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs8_fu_3612_p2 = ((tmp_133_fu_3580_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs9_fu_3475_p2 = ((tmp_155_fu_3444_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_1915_p2 = ((tmp_6_fu_1901_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs10_fu_3499_p2 = ((tmp_167_fu_3471_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs1_fu_2465_p2 = ((tmp_35_fu_2437_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_2483_p2 = ((tmp_37_fu_2455_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_2332_p2 = ((tmp_67_fu_2305_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_2350_p2 = ((tmp_71_fu_2322_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_3082_p2 = ((tmp_83_fu_3072_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_3977_p2 = ((tmp_100_fu_3967_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_3600_p2 = ((tmp_129_fu_3572_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_3618_p2 = ((tmp_134_fu_3590_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs9_fu_3481_p2 = ((tmp_166_fu_3454_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_1921_p2 = ((tmp_9_fu_1911_p1 == 23'd0) ? 1'b1 : 1'b0);

assign p_Val2_1_fu_3647_p3 = ((tmp_143_reg_4867[0:0] === 1'b1) ? p_Val2_6_i_i_i2_fu_3642_p2 : p_Val2_9_reg_4872);

assign p_Val2_2_fu_2268_p3 = ((tmp_58_fu_2196_p3[0:0] === 1'b1) ? tmp_64_fu_2254_p1 : tmp_65_fu_2258_p4);

assign p_Val2_6_fu_2417_p3 = ((tmp_50_reg_4493[0:0] === 1'b1) ? p_Val2_6_i_i_i_fu_2412_p2 : p_Val2_2_reg_4498);

assign p_Val2_6_i_i_i2_fu_3642_p2 = (32'd0 - p_Val2_9_reg_4872);

assign p_Val2_6_i_i_i_fu_2412_p2 = (32'd0 - p_Val2_2_reg_4498);

assign p_Val2_9_fu_3417_p3 = ((tmp_150_fu_3345_p3[0:0] === 1'b1) ? tmp_145_fu_3403_p1 : tmp_146_fu_3407_p4);

assign p_Val2_s_41_fu_3216_p1 = x_assign_5_reg_1182;

assign p_Val2_s_fu_2039_p1 = x_assign_reg_980;

assign p_shl10_cast_fu_2587_p1 = p_shl10_fu_2579_p3;

assign p_shl10_fu_2579_p3 = {{r_2_reg_1049}, {5'd0}};

assign p_shl11_cast_fu_1674_p1 = p_shl11_fu_1666_p3;

assign p_shl11_fu_1666_p3 = {{colOutIdx1_reg_882}, {3'd0}};

assign p_shl12_cast_fu_1686_p1 = p_shl12_fu_1678_p3;

assign p_shl12_fu_1678_p3 = {{colOutIdx1_reg_882}, {1'd0}};

assign p_shl13_fu_3722_p3 = {{k_4_reg_1241}, {6'd0}};

assign p_shl14_cast_fu_3738_p1 = p_shl14_fu_3730_p3;

assign p_shl14_fu_3730_p3 = {{k_4_reg_1241}, {4'd0}};

assign p_shl15_cast1_fu_2649_p1 = p_shl15_fu_2641_p3;

assign p_shl15_cast_fu_2653_p1 = p_shl15_fu_2641_p3;

assign p_shl15_fu_2641_p3 = {{k_2_reg_1073}, {5'd0}};

assign p_shl16_cast_fu_2665_p1 = p_shl16_fu_2657_p3;

assign p_shl16_fu_2657_p3 = {{k_2_reg_1073}, {1'd0}};

assign p_shl17_cast_fu_2683_p1 = p_shl17_fu_2675_p3;

assign p_shl17_fu_2675_p3 = {{k_2_reg_1073}, {9'd0}};

assign p_shl18_cast_fu_2093_p1 = p_shl18_fu_2083_p4;

assign p_shl18_fu_2083_p4 = {{{c_1_reg_1014}, {tmp_32_fu_2067_p1}}, {3'd0}};

assign p_shl19_cast_fu_2107_p1 = p_shl19_fu_2097_p4;

assign p_shl19_fu_2097_p4 = {{{c_1_reg_1014}, {tmp_32_fu_2067_p1}}, {1'd0}};

assign p_shl1_cast_fu_1837_p1 = p_shl1_fu_1829_p3;

assign p_shl1_fu_1829_p3 = {{colOutIdx_1_reg_936}, {3'd0}};

assign p_shl20_cast_fu_4026_p1 = p_shl20_fu_4018_p3;

assign p_shl20_fu_4018_p3 = {{k_6_reg_1318}, {7'd0}};

assign p_shl21_cast_fu_4038_p1 = p_shl21_fu_4030_p3;

assign p_shl21_fu_4030_p3 = {{k_6_reg_1318}, {3'd0}};

assign p_shl22_cast_fu_2144_p1 = p_shl22_fu_2136_p3;

assign p_shl22_fu_2136_p3 = {{c_1_reg_1014}, {3'd0}};

assign p_shl23_fu_3174_p3 = {{r_3_reg_1194}, {6'd0}};

assign p_shl24_cast_fu_3776_p1 = p_shl24_fu_3768_p3;

assign p_shl24_fu_3768_p3 = {{colOutIdx_6_reg_1264}, {11'd0}};

assign p_shl25_cast_fu_3788_p1 = p_shl25_fu_3780_p3;

assign p_shl25_fu_3780_p3 = {{colOutIdx_6_reg_1264}, {7'd0}};

assign p_shl26_cast_fu_2723_p1 = p_shl26_fu_2715_p3;

assign p_shl26_fu_2715_p3 = {{tmp_86_fu_2709_p2}, {3'd0}};

assign p_shl27_cast_fu_2735_p1 = p_shl27_fu_2727_p3;

assign p_shl27_fu_2727_p3 = {{tmp_86_fu_2709_p2}, {1'd0}};

assign p_shl28_cast_fu_2753_p1 = p_shl28_fu_2745_p3;

assign p_shl28_fu_2745_p3 = {{colOutIdx_3_reg_1084}, {3'd0}};

assign p_shl29_cast_fu_2765_p1 = p_shl29_fu_2757_p3;

assign p_shl29_fu_2757_p3 = {{colOutIdx_3_reg_1084}, {1'd0}};

assign p_shl2_cast_fu_1849_p1 = p_shl2_fu_1841_p3;

assign p_shl2_fu_1841_p3 = {{colOutIdx_1_reg_936}, {1'd0}};

assign p_shl30_cast_fu_2783_p1 = p_shl30_fu_2775_p3;

assign p_shl30_fu_2775_p3 = {{colOutIdx_3_reg_1084}, {7'd0}};

assign p_shl31_cast_fu_2795_p1 = p_shl31_fu_2787_p3;

assign p_shl31_fu_2787_p3 = {{colOutIdx_3_reg_1084}, {5'd0}};

assign p_shl32_cast_fu_3840_p1 = p_shl32_fu_3832_p3;

assign p_shl32_fu_3832_p3 = {{tmp_168_fu_3828_p1}, {7'd0}};

assign p_shl33_cast_fu_3852_p1 = p_shl33_fu_3844_p3;

assign p_shl33_fu_3844_p3 = {{tmp_168_fu_3828_p1}, {3'd0}};

assign p_shl34_fu_3192_p3 = {{tmp_84_fu_3186_p2}, {7'd0}};

assign p_shl35_cast_fu_3182_p1 = p_shl23_fu_3174_p3;

assign p_shl35_fu_3204_p3 = {{tmp_84_fu_3186_p2}, {5'd0}};

assign p_shl36_cast_fu_3200_p1 = p_shl34_fu_3192_p3;

assign p_shl37_cast_fu_3212_p1 = p_shl35_fu_3204_p3;

assign p_shl3_fu_2978_p3 = {{k_3_reg_1127}, {7'd0}};

assign p_shl4_cast_fu_2994_p1 = p_shl4_fu_2986_p3;

assign p_shl4_fu_2986_p3 = {{k_3_reg_1127}, {5'd0}};

assign p_shl5_cast_fu_1611_p1 = p_shl5_fu_1603_p3;

assign p_shl5_fu_1603_p3 = {{k4_reg_871}, {1'd0}};

assign p_shl6_fu_1583_p3 = {{k4_reg_871}, {2'd0}};

assign p_shl7_cast_fu_1751_p1 = p_shl7_fu_1743_p3;

assign p_shl7_fu_1743_p3 = {{c_reg_859}, {3'd0}};

assign p_shl8_cast_fu_1763_p1 = p_shl8_fu_1755_p3;

assign p_shl8_fu_1755_p3 = {{c_reg_859}, {1'd0}};

assign p_shl9_fu_2571_p3 = {{r_2_reg_1049}, {7'd0}};

assign p_shl_cast_fu_1599_p1 = p_shl_fu_1591_p3;

assign p_shl_fu_1591_p3 = {{k4_reg_871}, {5'd0}};

assign phi_mul2_cast_fu_1795_p1 = phi_mul2_reg_925;

assign phi_mul4_cast_fu_1993_p1 = phi_mul4_reg_1003;

assign phi_mul_cast_fu_1523_p1 = phi_mul_reg_848;

assign r_4_fu_1539_p2 = (r_reg_836 + 5'd1);

assign r_5_fu_2009_p2 = (r_1_reg_992 + 4'd1);

assign r_6_fu_2565_p2 = (r_2_reg_1049 + 4'd1);

assign r_7_fu_3160_p2 = (r_3_reg_1194 + 3'd1);

assign rowOutIdx_1_fu_1939_p3 = ((tmp_13_fu_1933_p2[0:0] === 1'b1) ? 32'd0 : rowOutIdx_reg_4354);

assign rowOutIdx_2_fu_3100_p3 = ((tmp_94_fu_3094_p2[0:0] === 1'b1) ? 32'd0 : rowOutIdx_5_reg_4746);

assign rowOutIdx_4_fu_3995_p3 = ((tmp_110_fu_3989_p2[0:0] === 1'b1) ? 32'd0 : rowOutIdx_6_reg_5068);

assign rowOutIdx_7_to_int_fu_3059_p1 = rowOutIdx_5_reg_4746;

assign rowOutIdx_8_to_int_fu_3954_p1 = rowOutIdx_6_reg_5068;

assign rowOutIdx_to_int_fu_1898_p1 = rowOutIdx_reg_4354;

assign sh_assign_1_cast_cas_fu_2226_p1 = sh_assign_1_fu_2214_p3;

assign sh_assign_1_cast_fu_2222_p1 = sh_assign_1_fu_2214_p3;

assign sh_assign_1_fu_2214_p3 = ((tmp_58_fu_2196_p3[0:0] === 1'b1) ? tmp_162_i_i_i_cast_fu_2210_p1 : sh_assign_fu_2190_p2);

assign sh_assign_4_fu_3339_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i2_cast_fu_3335_p1));

assign sh_assign_5_cast_cas_fu_3375_p1 = sh_assign_5_fu_3363_p3;

assign sh_assign_5_cast_fu_3371_p1 = sh_assign_5_fu_3363_p3;

assign sh_assign_5_fu_3363_p3 = ((tmp_150_fu_3345_p3[0:0] === 1'b1) ? tmp_162_i_i_i2_cast_fu_3359_p1 : sh_assign_4_fu_3339_p2);

assign sh_assign_fu_2190_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_2186_p1));

assign tmp10_cast_fu_2853_p1 = $signed(tmp10_fu_2848_p2);

assign tmp10_fu_2848_p2 = (tmp_88_reg_4631 + b_k_1_cast1_fu_2809_p1);

assign tmp11_fu_2883_p3 = {{tmp_113_fu_2874_p4}, {f_2_reg_1037}};

assign tmp12_cast_fu_2896_p1 = $signed(tmp12_fu_2891_p2);

assign tmp12_fu_2891_p2 = (tmp_89_reg_4636 + tmp_103_cast_fu_2870_p1);

assign tmp13_fu_2591_p2 = (p_shl10_cast_fu_2587_p1 + p_shl9_fu_2571_p3);

assign tmp14_cast_fu_2953_p1 = tmp14_fu_2948_p2;

assign tmp14_fu_2948_p2 = (tmp_78_fu_2940_p3 + f_2_cast_reg_4551);

assign tmp16_cast_fu_3045_p1 = tmp16_fu_3040_p2;

assign tmp16_fu_3040_p2 = (tmp_33_reg_4723 + b_k_2_cast_fu_3024_p1);

assign tmp17_fu_3267_p3 = {{r_3_reg_1194}, {tmp_120_fu_3258_p2}};

assign tmp18_fu_3280_p2 = (tmp_120_cast_fu_3263_p1 + p_shl36_cast_reg_4816);

assign tmp19_fu_3665_p2 = (tmp_158_fu_3659_p2 + tmp_156_fu_3653_p2);

assign tmp20_cast_fu_3671_p1 = $signed(tmp20_reg_4878);

assign tmp20_fu_3425_p2 = (tmp_48_reg_4793 + tmp_135_cast_fu_3298_p1);

assign tmp23_fu_3742_p2 = (p_shl13_fu_3722_p3 + p_shl14_cast_fu_3738_p1);

assign tmp24_cast_fu_3819_p1 = tmp24_fu_3814_p2;

assign tmp24_fu_3814_p2 = (tmp_96_reg_4959 + b_k_3_cast_fu_3798_p1);

assign tmp25_cast_fu_3884_p1 = tmp25_fu_3876_p3;

assign tmp25_fu_3876_p3 = {{tmp_164_fu_3866_p4}, {f_4_reg_1229}};

assign tmp26_cast_fu_3893_p1 = $signed(tmp26_fu_3888_p2);

assign tmp26_fu_3888_p2 = ($signed(tmp_109_reg_4964) + $signed(tmp_149_cast_fu_3862_p1));

assign tmp2_fu_1637_p4 = {{{tmp_17_reg_4214}, {2'd0}}, {colOutIdx1_reg_882}};

assign tmp3_fu_1656_p2 = (colOutIdx1_cast1_fu_1621_p1 + p_shl6_reg_4219);

assign tmp4_fu_1700_p2 = ($signed(tmp_26_cast_fu_1696_p1) + $signed(tmp_18_reg_4224));

assign tmp5_fu_1777_p2 = ($signed(tmp_12_cast_fu_1773_p1) + $signed(phi_mul_cast_reg_4170));

assign tmp6_cast_fu_1880_p1 = $signed(tmp6_fu_1875_p2);

assign tmp6_fu_1875_p2 = (tmp_4_reg_4331 + b_k_cast_fu_1859_p1);

assign tmp7_fu_2523_p2 = ($signed(tmp_60_reg_4541) + $signed(tmp_58_cast_fu_2520_p1));

assign tmp8_fu_2998_p2 = (p_shl4_cast_fu_2994_p1 + p_shl3_fu_2978_p3);

assign tmp9_cast_fu_2830_p1 = $signed(tmp9_fu_2825_p2);

assign tmp9_fu_2825_p2 = (tmp_87_reg_4626 + b_k_1_cast_fu_2805_p1);

assign tmp_100_fu_3967_p1 = rowOutIdx_8_to_int_fu_3954_p1[22:0];

assign tmp_101_cast_fu_2915_p1 = $signed(tmp_101_reg_4654);

assign tmp_101_fu_2857_p2 = ($signed(tmp10_cast_fu_2853_p1) + $signed(tmp_76_reg_4608));

assign tmp_102_fu_2918_p1 = $unsigned(tmp_101_cast_fu_2915_p1);

assign tmp_103_cast_fu_2870_p1 = tmp_103_fu_2862_p3;

assign tmp_103_fu_2862_p3 = {{b_k_1_reg_1095}, {4'd0}};

assign tmp_104_fu_3983_p2 = (notrhs6_fu_3977_p2 | notlhs6_fu_3971_p2);

assign tmp_106_cast_fu_2906_p1 = $signed(tmp_106_fu_2900_p2);

assign tmp_106_fu_2900_p2 = ($signed(tmp12_cast_fu_2896_p1) + $signed(tmp11_fu_2883_p3));

assign tmp_107_fu_2910_p1 = $unsigned(tmp_106_cast_fu_2906_p1);

assign tmp_109_fu_3792_p2 = (p_shl24_cast_fu_3776_p1 - p_shl25_cast_fu_3788_p1);

assign tmp_10_fu_2554_p1 = f_2_reg_1037;

assign tmp_110_fu_3989_p2 = (tmp_104_fu_3983_p2 & grp_fu_1450_p2);

assign tmp_113_fu_2874_p4 = {{tmp_79_reg_4613[12:5]}};

assign tmp_114_fu_4064_p1 = colOutIdx_7_reg_1341;

assign tmp_115_cast_fu_4074_p1 = $signed(tmp_115_fu_4069_p2);

assign tmp_115_fu_4069_p2 = (tmp_92_reg_5094 + colOutIdx_7_cast_fu_4048_p1);

assign tmp_116_fu_3248_p4 = {{{c_3_reg_1206}, {tmp_165_fu_3244_p1}}, {4'd0}};

assign tmp_117_fu_4078_p1 = $unsigned(tmp_115_cast_fu_4074_p1);

assign tmp_119_fu_3562_p4 = {{maxval_0_8_to_int_fu_3558_p1[30:23]}};

assign tmp_120_cast_fu_3263_p1 = tmp_120_fu_3258_p2;

assign tmp_120_fu_3258_p2 = (tmp_116_fu_3248_p4 + f_3_cast_reg_4780);

assign tmp_121_fu_3275_p2 = (p_shl35_cast_reg_4811 + tmp17_fu_3267_p3);

assign tmp_122_cast_cast_fu_3438_p1 = tmp_121_reg_4855;

assign tmp_122_fu_3430_p1 = tmp_121_reg_4855;

assign tmp_125_fu_4121_p1 = colOutIdx_8_reg_1387;

assign tmp_126_fu_4126_p2 = (phi_mul8_reg_1363 + colOutIdx_8_cast_fu_4105_p1);

assign tmp_127_fu_4132_p1 = tmp_126_fu_4126_p2;

assign tmp_129_fu_3572_p1 = maxval_0_8_to_int_fu_3558_p1[22:0];

assign tmp_12_cast_fu_1773_p1 = $signed(tmp_12_fu_1767_p2);

assign tmp_12_fu_1767_p2 = (p_shl7_cast_fu_1751_p1 - p_shl8_cast_fu_1763_p1);

assign tmp_131_fu_3285_p2 = (p_shl37_cast_reg_4821 + tmp18_fu_3280_p2);

assign tmp_132_fu_3434_p1 = tmp_131_reg_4861;

assign tmp_133_fu_3580_p4 = {{maxval_1_8_to_int_fu_3576_p1[30:23]}};

assign tmp_134_fu_3590_p1 = maxval_1_8_to_int_fu_3576_p1[22:0];

assign tmp_135_cast_fu_3298_p1 = tmp_135_fu_3290_p3;

assign tmp_135_fu_3290_p3 = {{c_3_reg_1206}, {4'd0}};

assign tmp_136_fu_3606_p2 = (notrhs7_fu_3600_p2 | notlhs7_fu_3594_p2);

assign tmp_137_fu_3624_p2 = (notrhs8_fu_3618_p2 | notlhs8_fu_3612_p2);

assign tmp_138_fu_3630_p2 = (tmp_137_fu_3624_p2 & tmp_136_fu_3606_p2);

assign tmp_139_fu_3674_p2 = ($signed(tmp19_fu_3665_p2) + $signed(tmp20_cast_fu_3671_p1));

assign tmp_13_fu_1933_p2 = (tmp_s_fu_1927_p2 & grp_fu_1450_p2);

assign tmp_140_fu_3688_p1 = $signed(tmp_139_reg_4915);

assign tmp_142_fu_3636_p2 = (tmp_138_fu_3630_p2 & grp_fu_1450_p2);

assign tmp_144_fu_3318_p1 = p_Val2_s_41_reg_4826[22:0];

assign tmp_145_fu_3403_p1 = tmp_154_fu_3395_p3;

assign tmp_146_fu_3407_p4 = {{tmp_165_i_i_i2_fu_3389_p2[55:24]}};

assign tmp_147_fu_3823_p2 = (tmp24_cast_fu_3819_p1 + tmp23_reg_4946);

assign tmp_148_fu_3903_p1 = tmp_147_reg_4977;

assign tmp_149_cast_fu_3862_p1 = $signed(tmp_149_fu_3856_p2);

assign tmp_149_fu_3856_p2 = (p_shl32_cast_fu_3840_p1 - p_shl33_cast_fu_3852_p1);

assign tmp_14_cast_fu_1787_p1 = $signed(tmp_14_reg_4295);

assign tmp_14_fu_1782_p2 = (f_cast_reg_4142 + tmp5_fu_1777_p2);

assign tmp_150_fu_3345_p3 = sh_assign_4_fu_3339_p2[32'd8];

assign tmp_151_cast_fu_3907_p1 = $signed(tmp_151_reg_4982);

assign tmp_151_fu_3897_p2 = ($signed(tmp26_cast_fu_3893_p1) + $signed(tmp25_cast_fu_3884_p1));

assign tmp_152_fu_3910_p1 = $unsigned(tmp_151_cast_fu_3907_p1);

assign tmp_154_fu_3395_p3 = tmp_164_i_i_i2_fu_3383_p2[32'd24];

assign tmp_155_fu_3444_p4 = {{b_maxval_3_to_int_fu_3441_p1[30:23]}};

assign tmp_156_fu_3653_p2 = p_Val2_1_fu_3647_p3 << 32'd6;

assign tmp_157_fu_3461_p4 = {{b_maxval_4_to_int_fu_3458_p1[30:23]}};

assign tmp_158_fu_3659_p2 = p_Val2_1_fu_3647_p3 << 32'd4;

assign tmp_159_fu_3487_p2 = (notrhs9_fu_3481_p2 | notlhs9_fu_3475_p2);

assign tmp_15_fu_1790_p1 = $unsigned(tmp_14_cast_fu_1787_p1);

assign tmp_160_fu_3505_p2 = (notrhs10_fu_3499_p2 | notlhs10_fu_3493_p2);

assign tmp_161_fu_3511_p2 = (tmp_160_fu_3505_p2 & tmp_159_fu_3487_p2);

assign tmp_161_i_i_i2_cast1_fu_3331_p1 = tmp_161_i_i_i2_fu_3321_p4;

assign tmp_161_i_i_i2_fu_3321_p4 = {{{{1'd1}, {tmp_144_fu_3318_p1}}}, {1'd0}};

assign tmp_161_i_i_i_cast1_fu_2182_p1 = tmp_161_i_i_i_fu_2172_p4;

assign tmp_161_i_i_i_fu_2172_p4 = {{{{1'd1}, {tmp_56_fu_2169_p1}}}, {1'd0}};

assign tmp_162_i_i_i2_cast_fu_3359_p1 = $signed(tmp_162_i_i_i2_fu_3353_p2);

assign tmp_162_i_i_i2_fu_3353_p2 = (8'd127 - loc_V_2_fu_3309_p4);

assign tmp_162_i_i_i_cast_fu_2210_p1 = $signed(tmp_162_i_i_i_fu_2204_p2);

assign tmp_162_i_i_i_fu_2204_p2 = (8'd127 - loc_V_fu_2160_p4);

assign tmp_163_fu_3517_p2 = (tmp_161_fu_3511_p2 & grp_fu_1450_p2);

assign tmp_163_i_i_i2_fu_3379_p1 = $unsigned(sh_assign_5_cast_fu_3371_p1);

assign tmp_163_i_i_i_fu_2230_p1 = $unsigned(sh_assign_1_cast_fu_2222_p1);

assign tmp_164_fu_3866_p4 = {{phi_mul6_reg_1252[15:7]}};

assign tmp_164_i_i_i2_fu_3383_p2 = tmp_161_i_i_i2_fu_3321_p4 >> sh_assign_5_cast_cas_fu_3375_p1;

assign tmp_164_i_i_i_fu_2234_p2 = tmp_161_i_i_i_fu_2172_p4 >> sh_assign_1_cast_cas_fu_2226_p1;

assign tmp_165_fu_3244_p1 = j_1_reg_1218[0:0];

assign tmp_165_i_i_i2_fu_3389_p2 = tmp_161_i_i_i2_cast1_fu_3331_p1 << tmp_163_i_i_i2_fu_3379_p1;

assign tmp_165_i_i_i_fu_2240_p2 = tmp_161_i_i_i_cast1_fu_2182_p1 << tmp_163_i_i_i_fu_2230_p1;

assign tmp_166_fu_3454_p1 = b_maxval_3_to_int_fu_3441_p1[22:0];

assign tmp_167_fu_3471_p1 = b_maxval_4_to_int_fu_3458_p1[22:0];

assign tmp_168_fu_3828_p1 = b_k_3_reg_1275[3:0];

assign tmp_16_fu_3113_p1 = invdar1_reg_1160;

assign tmp_17_fu_1577_p2 = (k4_cast2_fu_1561_p1 + r_reg_836);

assign tmp_18_fu_1615_p2 = (p_shl_cast_fu_1599_p1 - p_shl5_cast_fu_1611_p1);

assign tmp_19_fu_2023_p2 = (k_8_fu_2015_p3 | 5'd1);

assign tmp_20_fu_3118_p2 = ((invdar1_reg_1160 == 9'd399) ? 1'b1 : 1'b0);

assign tmp_21_fu_2033_p0 = tmp_21_fu_2033_p00;

assign tmp_21_fu_2033_p00 = tmp_19_fu_2023_p2;

assign tmp_21_fu_2033_p2 = (tmp_21_fu_2033_p0 * $signed('hA8));

assign tmp_22_fu_1646_p2 = (c_cast1_reg_4188 + tmp2_fu_1637_p4);

assign tmp_23_fu_1651_p1 = tmp_22_fu_1646_p2;

assign tmp_24_fu_1661_p2 = (k4_cast2_reg_4201 + tmp3_fu_1656_p2);

assign tmp_25_fu_1722_p1 = tmp_24_reg_4242;

assign tmp_26_cast_fu_1696_p1 = $signed(tmp_26_fu_1690_p2);

assign tmp_26_fu_1690_p2 = (p_shl11_cast_fu_1674_p1 - p_shl12_cast_fu_1686_p1);

assign tmp_27_fu_1705_p2 = (f_cast1_reg_4147 + tmp4_fu_1700_p2);

assign tmp_28_cast_fu_1714_p1 = $signed(tmp_27_reg_4247);

assign tmp_28_fu_1717_p1 = $unsigned(tmp_28_cast_fu_1714_p1);

assign tmp_2_fu_1952_p1 = invdar_reg_958;

assign tmp_32_fu_2067_p1 = j_reg_1026[0:0];

assign tmp_33_fu_3016_p3 = {{colOutIdx_4_reg_1138}, {4'd0}};

assign tmp_34_fu_2427_p4 = {{maxval_0_3_to_int_fu_2423_p1[30:23]}};

assign tmp_35_fu_2437_p1 = maxval_0_3_to_int_fu_2423_p1[22:0];

assign tmp_36_fu_2445_p4 = {{maxval_1_3_to_int_fu_2441_p1[30:23]}};

assign tmp_37_fu_2455_p1 = maxval_1_3_to_int_fu_2441_p1[22:0];

assign tmp_38_fu_2471_p2 = (notrhs1_fu_2465_p2 | notlhs1_fu_2459_p2);

assign tmp_39_fu_2489_p2 = (notrhs2_fu_2483_p2 | notlhs2_fu_2477_p2);

assign tmp_3_fu_1957_p2 = ((invdar_reg_958 == 11'd1175) ? 1'b1 : 1'b0);

assign tmp_40_fu_2111_p2 = (p_shl18_cast_fu_2093_p1 - p_shl19_cast_fu_2107_p1);

assign tmp_41_fu_2495_p2 = (tmp_39_fu_2489_p2 & tmp_38_fu_2471_p2);

assign tmp_43_fu_2501_p2 = (tmp_41_fu_2495_p2 & grp_fu_1450_p2);

assign tmp_44_cast_fu_2122_p1 = $signed(tmp_44_fu_2117_p2);

assign tmp_44_fu_2117_p2 = (tmp_40_fu_2111_p2 + f_1_cast_reg_4396);

assign tmp_45_cast_fu_2276_p1 = tmp_45_reg_4476;

assign tmp_45_fu_2126_p2 = ($signed(tmp_44_cast_fu_2122_p1) + $signed(phi_mul4_cast_reg_4419));

assign tmp_46_fu_2279_p1 = $unsigned(tmp_45_cast_fu_2276_p1);

assign tmp_47_fu_2148_p2 = (p_shl22_cast_fu_2144_p1 - b_k_5_cast_reg_4457);

assign tmp_48_fu_3148_p2 = ($signed(f_3_cast_fu_3132_p1) + $signed(8'd176));

assign tmp_49_fu_3949_p1 = k_5_reg_1307;

assign tmp_4_fu_1853_p2 = (p_shl1_cast_fu_1837_p1 - p_shl2_cast_fu_1849_p1);

assign tmp_51_fu_2131_p2 = ($signed(tmp_44_cast_fu_2122_p1) + $signed(tmp_21_reg_4437));

assign tmp_52_fu_3932_p1 = f_4_reg_1229;

assign tmp_53_fu_2287_p1 = $unsigned(tmp_55_cast_fu_2284_p1);

assign tmp_55_cast_fu_2284_p1 = tmp_51_reg_4482;

assign tmp_55_fu_2295_p4 = {{b_maxval_to_int_fu_2292_p1[30:23]}};

assign tmp_56_fu_2169_p1 = p_Val2_s_reg_4442[22:0];

assign tmp_57_fu_2312_p4 = {{b_maxval_1_to_int_fu_2309_p1[30:23]}};

assign tmp_58_cast_fu_2520_p1 = $signed(tmp_47_reg_4488);

assign tmp_58_fu_2196_p3 = sh_assign_fu_2190_p2[32'd8];

assign tmp_59_fu_2246_p3 = tmp_164_i_i_i_fu_2234_p2[32'd24];

assign tmp_5_cast_fu_1989_p1 = $signed(tmp_5_fu_1983_p2);

assign tmp_5_fu_1983_p2 = ($signed(f_1_cast1_fu_1967_p1) + $signed(8'd172));

assign tmp_60_fu_2507_p2 = ($signed({{1'b0}, {32'd84}}) * $signed(p_Val2_6_reg_4536));

assign tmp_61_fu_2338_p2 = (notrhs3_fu_2332_p2 | notlhs3_fu_2326_p2);

assign tmp_62_fu_2528_p2 = ($signed(tmp_5_cast_reg_4409) + $signed(tmp7_fu_2523_p2));

assign tmp_63_fu_2533_p1 = $signed(tmp_62_fu_2528_p2);

assign tmp_64_fu_2254_p1 = tmp_59_fu_2246_p3;

assign tmp_65_fu_2258_p4 = {{tmp_165_i_i_i_fu_2240_p2[55:24]}};

assign tmp_66_fu_2356_p2 = (notrhs4_fu_2350_p2 | notlhs4_fu_2344_p2);

assign tmp_67_fu_2305_p1 = b_maxval_to_int_fu_2292_p1[22:0];

assign tmp_68_fu_2362_p2 = (tmp_66_fu_2356_p2 & tmp_61_fu_2338_p2);

assign tmp_69_fu_3049_p2 = (tmp16_cast_fu_3045_p1 + tmp8_reg_4710);

assign tmp_6_fu_1901_p4 = {{rowOutIdx_to_int_fu_1898_p1[30:23]}};

assign tmp_71_fu_2322_p1 = b_maxval_1_to_int_fu_2309_p1[22:0];

assign tmp_72_fu_3054_p1 = tmp_69_fu_3049_p2;

assign tmp_73_fu_2368_p2 = (tmp_68_fu_2362_p2 & grp_fu_1450_p2);

assign tmp_74_fu_2625_p2 = (k_2_cast_fu_2609_p1 + r_2_reg_1049);

assign tmp_75_fu_2635_p0 = tmp_75_fu_2635_p00;

assign tmp_75_fu_2635_p00 = tmp_74_fu_2625_p2;

assign tmp_75_fu_2635_p2 = (tmp_75_fu_2635_p0 * $signed('h54));

assign tmp_76_fu_2669_p2 = (p_shl15_cast_fu_2653_p1 - p_shl16_cast_fu_2665_p1);

assign tmp_78_fu_2940_p3 = {{c_2_reg_1061}, {4'd0}};

assign tmp_79_fu_2687_p2 = (p_shl17_cast_fu_2683_p1 - p_shl15_cast1_fu_2649_p1);

assign tmp_7_cast_fu_1889_p1 = $signed(tmp_7_fu_1884_p2);

assign tmp_7_fu_1884_p2 = ($signed(tmp6_cast_fu_1880_p1) + $signed(phi_mul2_cast_reg_4305));

assign tmp_80_fu_2957_p2 = (tmp13_reg_4582 + tmp14_cast_fu_2953_p1);

assign tmp_81_fu_2962_p1 = tmp_80_reg_4692;

assign tmp_82_fu_3062_p4 = {{rowOutIdx_7_to_int_fu_3059_p1[30:23]}};

assign tmp_83_fu_3072_p1 = rowOutIdx_7_to_int_fu_3059_p1[22:0];

assign tmp_84_fu_3186_p2 = (k_12_fu_3166_p3 | 4'd1);

assign tmp_85_fu_3088_p2 = (notrhs5_fu_3082_p2 | notlhs5_fu_3076_p2);

assign tmp_86_fu_2709_p2 = (colOutIdx_3_cast_fu_2693_p1 + c_2_reg_1061);

assign tmp_87_fu_2739_p2 = (p_shl26_cast_fu_2723_p1 - p_shl27_cast_fu_2735_p1);

assign tmp_88_fu_2769_p2 = (p_shl28_cast_fu_2753_p1 - p_shl29_cast_fu_2765_p1);

assign tmp_89_fu_2799_p2 = (p_shl30_cast_fu_2783_p1 - p_shl31_cast_fu_2795_p1);

assign tmp_8_fu_1893_p1 = $unsigned(tmp_7_cast_fu_1889_p1);

assign tmp_91_fu_4014_p1 = k_6_reg_1318;

assign tmp_92_fu_4042_p2 = (p_shl20_cast_fu_4026_p1 - p_shl21_cast_fu_4038_p1);

assign tmp_93_fu_4101_p1 = k_7_reg_1352;

assign tmp_94_fu_3094_p2 = (tmp_85_fu_3088_p2 & grp_fu_1450_p2);

assign tmp_96_fu_3760_p3 = {{colOutIdx_6_reg_1264}, {4'd0}};

assign tmp_97_fu_3957_p4 = {{rowOutIdx_8_to_int_fu_3954_p1[30:23]}};

assign tmp_98_cast_fu_2839_p1 = $signed(tmp_98_fu_2834_p2);

assign tmp_98_fu_2834_p2 = ($signed(tmp9_cast_fu_2830_p1) + $signed(tmp_75_reg_4603));

assign tmp_99_fu_2843_p1 = $unsigned(tmp_98_cast_fu_2839_p1);

assign tmp_9_fu_1911_p1 = rowOutIdx_to_int_fu_1898_p1[22:0];

assign tmp_fu_1518_p1 = f_reg_825;

assign tmp_i1_fu_2935_p1 = k_20_fu_2929_p2;

assign tmp_i2_fu_3927_p1 = k_15_fu_3921_p2;

assign tmp_i_fu_1738_p1 = k_10_fu_1732_p2;

assign tmp_i_i_i_i2_cast_fu_3335_p1 = loc_V_2_fu_3309_p4;

assign tmp_i_i_i_i_cast_fu_2186_p1 = loc_V_fu_2160_p4;

assign tmp_s_fu_1927_p2 = (notrhs_fu_1921_p2 | notlhs_fu_1915_p2);

assign weightsConv1_address0 = tmp_28_fu_1717_p1;

assign weightsConv2_address0 = tmp_107_fu_2910_p1;

assign weightsFC1_address0 = tmp_152_fu_3910_p1;

assign weightsFC2_address0 = tmp_117_fu_4078_p1;

assign weightsFC3_address0 = tmp_127_fu_4132_p1;

always @ (posedge ap_clk) begin
    f_cast_reg_4142[13:3] <= 11'b00000000000;
    f_cast1_reg_4147[8:3] <= 6'b000000;
    phi_mul_cast_reg_4170[13] <= 1'b0;
    c_cast1_reg_4188[9:5] <= 5'b00000;
    k4_cast2_reg_4201[4:3] <= 2'b00;
    p_shl6_reg_4219[1:0] <= 2'b00;
    tmp_18_reg_4224[0] <= 1'b0;
    phi_mul2_cast_reg_4305[13] <= 1'b0;
    tmp_4_reg_4331[0] <= 1'b0;
    tmp_8_reg_4344[63:32] <= 32'b00000000000000000000000000000000;
    f_1_cast_reg_4396[8:3] <= 6'b000000;
    phi_mul4_cast_reg_4419[13] <= 1'b0;
    tmp_21_reg_4437[2:0] <= 3'b000;
    b_k_5_cast_reg_4457[0] <= 1'b0;
    b_k_5_cast_reg_4457[7:5] <= 3'b000;
    tmp_47_reg_4488[0] <= 1'b0;
    f_2_cast_reg_4551[7:5] <= 3'b000;
    tmp13_reg_4582[4:0] <= 5'b00000;
    tmp_75_reg_4603[1:0] <= 2'b00;
    tmp_76_reg_4608[0] <= 1'b0;
    tmp_79_reg_4613[4:0] <= 5'b00000;
    tmp_87_reg_4626[0] <= 1'b0;
    tmp_88_reg_4631[0] <= 1'b0;
    tmp_89_reg_4636[4:0] <= 5'b00000;
    tmp8_reg_4710[4:0] <= 5'b00000;
    tmp_33_reg_4723[3:0] <= 4'b0000;
    tmp_72_reg_4736[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    f_3_cast_reg_4780[7:5] <= 3'b000;
    p_shl35_cast_reg_4811[5:0] <= 6'b000000;
    p_shl35_cast_reg_4811[10:9] <= 2'b00;
    p_shl36_cast_reg_4816[7:0] <= 8'b10000000;
    p_shl36_cast_reg_4816[11] <= 1'b0;
    p_shl37_cast_reg_4821[5:0] <= 6'b100000;
    p_shl37_cast_reg_4821[11:9] <= 3'b000;
    tmp23_reg_4946[3:0] <= 4'b0000;
    tmp_96_reg_4959[3:0] <= 4'b0000;
    tmp_109_reg_4964[6:0] <= 7'b0000000;
    tmp_148_reg_4987[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_52_reg_5030[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_49_reg_5058[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_91_reg_5088[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_92_reg_5094[2:0] <= 3'b000;
    tmp_93_reg_5150[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //lenetSynthMatlab
