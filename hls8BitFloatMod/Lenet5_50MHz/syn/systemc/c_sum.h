// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _c_sum_HH_
#define _c_sum_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenetSynthMatlab_bkb.h"

namespace ap_rtl {

struct c_sum : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > x_address0;
    sc_out< sc_logic > x_ce0;
    sc_in< sc_lv<32> > x_q0;
    sc_out< sc_lv<5> > y_address0;
    sc_out< sc_logic > y_ce0;
    sc_out< sc_logic > y_we0;
    sc_out< sc_lv<32> > y_d0;
    sc_in< sc_lv<32> > y_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    c_sum(sc_module_name name);
    SC_HAS_PROCESS(c_sum);

    ~c_sum();

    sc_trace_file* mVcdFile;

    lenetSynthMatlab_bkb<1,4,32,32,32>* lenetSynthMatlab_bkb_U5;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > k_29_fu_147_p2;
    sc_signal< sc_lv<3> > k_29_reg_369;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > tmp_fu_177_p2;
    sc_signal< sc_lv<7> > tmp_reg_374;
    sc_signal< sc_lv<1> > exitcond4_fu_141_p2;
    sc_signal< sc_lv<3> > b_k_13_fu_193_p2;
    sc_signal< sc_lv<3> > b_k_13_reg_382;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_170_fu_208_p1;
    sc_signal< sc_lv<64> > tmp_170_reg_387;
    sc_signal< sc_lv<1> > exitcond3_fu_187_p2;
    sc_signal< sc_lv<3> > k_30_fu_219_p2;
    sc_signal< sc_lv<3> > k_30_reg_400;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > tmp_cast_fu_257_p1;
    sc_signal< sc_lv<9> > tmp_cast_reg_405;
    sc_signal< sc_lv<1> > exitcond2_fu_213_p2;
    sc_signal< sc_lv<3> > b_k_14_fu_267_p2;
    sc_signal< sc_lv<3> > b_k_14_reg_413;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > tmp_171_fu_297_p2;
    sc_signal< sc_lv<7> > tmp_171_reg_418;
    sc_signal< sc_lv<1> > exitcond1_fu_261_p2;
    sc_signal< sc_lv<9> > tmp1_fu_307_p2;
    sc_signal< sc_lv<9> > tmp1_reg_423;
    sc_signal< sc_lv<3> > c_k_2_fu_326_p2;
    sc_signal< sc_lv<3> > c_k_2_reg_431;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond_fu_320_p2;
    sc_signal< sc_lv<5> > y_addr_5_reg_441;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > k_reg_79;
    sc_signal< sc_lv<3> > b_k_reg_90;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > k_1_reg_101;
    sc_signal< sc_lv<3> > b_k_1_reg_112;
    sc_signal< sc_lv<3> > c_k_reg_123;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > tmp_173_fu_347_p1;
    sc_signal< sc_lv<64> > tmp_175_fu_361_p1;
    sc_signal< sc_lv<32> > grp_fu_134_p2;
    sc_signal< sc_lv<6> > p_shl_fu_153_p3;
    sc_signal< sc_lv<4> > p_shl9_fu_165_p3;
    sc_signal< sc_lv<7> > p_shl_cast_fu_161_p1;
    sc_signal< sc_lv<7> > p_shl9_cast_fu_173_p1;
    sc_signal< sc_lv<7> > b_k_cast7_fu_183_p1;
    sc_signal< sc_lv<7> > tmp_169_fu_199_p2;
    sc_signal< sc_lv<32> > tmp_175_cast_fu_204_p1;
    sc_signal< sc_lv<2> > tmp_177_fu_225_p1;
    sc_signal< sc_lv<7> > p_shl10_fu_229_p3;
    sc_signal< sc_lv<3> > tmp_178_fu_241_p2;
    sc_signal< sc_lv<8> > p_shl10_cast_fu_237_p1;
    sc_signal< sc_lv<8> > p_shl11_cast_fu_247_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_251_p2;
    sc_signal< sc_lv<6> > p_shl12_fu_273_p3;
    sc_signal< sc_lv<4> > p_shl13_fu_285_p3;
    sc_signal< sc_lv<7> > p_shl12_cast_fu_281_p1;
    sc_signal< sc_lv<7> > p_shl13_cast_fu_293_p1;
    sc_signal< sc_lv<9> > tmp_177_cast_fu_303_p1;
    sc_signal< sc_lv<6> > c_k_cast3_fu_316_p1;
    sc_signal< sc_lv<6> > tmp2_fu_332_p2;
    sc_signal< sc_lv<9> > tmp2_cast_fu_338_p1;
    sc_signal< sc_lv<9> > tmp_172_fu_342_p2;
    sc_signal< sc_lv<7> > c_k_cast4_fu_312_p1;
    sc_signal< sc_lv<7> > tmp_174_fu_352_p2;
    sc_signal< sc_lv<32> > tmp_181_cast_fu_357_p1;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_1E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_k_13_fu_193_p2();
    void thread_b_k_14_fu_267_p2();
    void thread_b_k_cast7_fu_183_p1();
    void thread_c_k_2_fu_326_p2();
    void thread_c_k_cast3_fu_316_p1();
    void thread_c_k_cast4_fu_312_p1();
    void thread_exitcond1_fu_261_p2();
    void thread_exitcond2_fu_213_p2();
    void thread_exitcond3_fu_187_p2();
    void thread_exitcond4_fu_141_p2();
    void thread_exitcond_fu_320_p2();
    void thread_k_29_fu_147_p2();
    void thread_k_30_fu_219_p2();
    void thread_p_shl10_cast_fu_237_p1();
    void thread_p_shl10_fu_229_p3();
    void thread_p_shl11_cast_fu_247_p1();
    void thread_p_shl12_cast_fu_281_p1();
    void thread_p_shl12_fu_273_p3();
    void thread_p_shl13_cast_fu_293_p1();
    void thread_p_shl13_fu_285_p3();
    void thread_p_shl9_cast_fu_173_p1();
    void thread_p_shl9_fu_165_p3();
    void thread_p_shl_cast_fu_161_p1();
    void thread_p_shl_fu_153_p3();
    void thread_tmp1_fu_307_p2();
    void thread_tmp2_cast_fu_338_p1();
    void thread_tmp2_fu_332_p2();
    void thread_tmp_169_fu_199_p2();
    void thread_tmp_170_fu_208_p1();
    void thread_tmp_171_fu_297_p2();
    void thread_tmp_172_fu_342_p2();
    void thread_tmp_173_fu_347_p1();
    void thread_tmp_174_fu_352_p2();
    void thread_tmp_175_cast_fu_204_p1();
    void thread_tmp_175_fu_361_p1();
    void thread_tmp_177_cast_fu_303_p1();
    void thread_tmp_177_fu_225_p1();
    void thread_tmp_178_fu_241_p2();
    void thread_tmp_181_cast_fu_357_p1();
    void thread_tmp_cast_fu_257_p1();
    void thread_tmp_fu_177_p2();
    void thread_tmp_s_fu_251_p2();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_y_address0();
    void thread_y_ce0();
    void thread_y_d0();
    void thread_y_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
