// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "f_sum.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic f_sum::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic f_sum::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> f_sum::ap_ST_fsm_state1 = "1";
const sc_lv<11> f_sum::ap_ST_fsm_state2 = "10";
const sc_lv<11> f_sum::ap_ST_fsm_state3 = "100";
const sc_lv<11> f_sum::ap_ST_fsm_state4 = "1000";
const sc_lv<11> f_sum::ap_ST_fsm_state5 = "10000";
const sc_lv<11> f_sum::ap_ST_fsm_state6 = "100000";
const sc_lv<11> f_sum::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> f_sum::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> f_sum::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> f_sum::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> f_sum::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> f_sum::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> f_sum::ap_const_lv32_1 = "1";
const sc_lv<1> f_sum::ap_const_lv1_0 = "0";
const sc_lv<32> f_sum::ap_const_lv32_2 = "10";
const sc_lv<32> f_sum::ap_const_lv32_4 = "100";
const sc_lv<32> f_sum::ap_const_lv32_5 = "101";
const sc_lv<32> f_sum::ap_const_lv32_6 = "110";
const sc_lv<32> f_sum::ap_const_lv32_7 = "111";
const sc_lv<3> f_sum::ap_const_lv3_0 = "000";
const sc_lv<1> f_sum::ap_const_lv1_1 = "1";
const sc_lv<32> f_sum::ap_const_lv32_3 = "11";
const sc_lv<5> f_sum::ap_const_lv5_0 = "00000";
const sc_lv<32> f_sum::ap_const_lv32_A = "1010";
const sc_lv<3> f_sum::ap_const_lv3_5 = "101";
const sc_lv<3> f_sum::ap_const_lv3_1 = "1";
const sc_lv<4> f_sum::ap_const_lv4_0 = "0000";
const sc_lv<5> f_sum::ap_const_lv5_10 = "10000";
const sc_lv<5> f_sum::ap_const_lv5_1 = "1";
const sc_lv<3> f_sum::ap_const_lv3_4 = "100";
const sc_lv<7> f_sum::ap_const_lv7_50 = "1010000";
const bool f_sum::ap_const_boolean_1 = true;

f_sum::f_sum(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenetSynthMatlab_bkb_U11 = new lenetSynthMatlab_bkb<1,4,32,32,32>("lenetSynthMatlab_bkb_U11");
    lenetSynthMatlab_bkb_U11->clk(ap_clk);
    lenetSynthMatlab_bkb_U11->reset(ap_rst);
    lenetSynthMatlab_bkb_U11->din0(y_q0);
    lenetSynthMatlab_bkb_U11->din1(x_q0);
    lenetSynthMatlab_bkb_U11->ce(ap_var_for_const0);
    lenetSynthMatlab_bkb_U11->dout(grp_fu_134_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_187_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_187_p2 );

    SC_METHOD(thread_b_k_10_fu_171_p2);
    sensitive << ( b_k_reg_90 );

    SC_METHOD(thread_b_k_11_fu_209_p2);
    sensitive << ( b_k_1_reg_112 );

    SC_METHOD(thread_b_k_cast8_fu_161_p1);
    sensitive << ( b_k_reg_90 );

    SC_METHOD(thread_c_k_1_fu_237_p2);
    sensitive << ( c_k_reg_123 );

    SC_METHOD(thread_c_k_cast4_fu_227_p1);
    sensitive << ( c_k_reg_123 );

    SC_METHOD(thread_exitcond1_fu_203_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( b_k_1_reg_112 );

    SC_METHOD(thread_exitcond2_fu_187_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( k_1_reg_101 );

    SC_METHOD(thread_exitcond3_fu_165_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( b_k_reg_90 );

    SC_METHOD(thread_exitcond4_fu_141_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_reg_79 );

    SC_METHOD(thread_exitcond_fu_231_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( c_k_reg_123 );

    SC_METHOD(thread_k_25_fu_147_p2);
    sensitive << ( k_reg_79 );

    SC_METHOD(thread_k_26_fu_193_p2);
    sensitive << ( k_1_reg_101 );

    SC_METHOD(thread_tmp1_cast_fu_251_p1);
    sensitive << ( tmp1_fu_243_p4 );

    SC_METHOD(thread_tmp1_fu_243_p4);
    sensitive << ( tmp_170_reg_334 );

    SC_METHOD(thread_tmp2_cast_fu_270_p1);
    sensitive << ( tmp2_fu_265_p2 );

    SC_METHOD(thread_tmp2_fu_265_p2);
    sensitive << ( tmp_162_cast_reg_353 );
    sensitive << ( tmp3_cast_fu_261_p1 );

    SC_METHOD(thread_tmp3_cast_fu_261_p1);
    sensitive << ( tmp3_fu_255_p2 );

    SC_METHOD(thread_tmp3_fu_255_p2);
    sensitive << ( c_k_cast4_fu_227_p1 );

    SC_METHOD(thread_tmp_158_fu_182_p1);
    sensitive << ( tmp_s_fu_177_p2 );

    SC_METHOD(thread_tmp_159_fu_215_p3);
    sensitive << ( b_k_1_reg_112 );

    SC_METHOD(thread_tmp_160_fu_274_p2);
    sensitive << ( tmp2_cast_fu_270_p1 );
    sensitive << ( tmp1_cast_fu_251_p1 );

    SC_METHOD(thread_tmp_161_fu_280_p1);
    sensitive << ( tmp_160_fu_274_p2 );

    SC_METHOD(thread_tmp_162_cast_fu_223_p1);
    sensitive << ( tmp_159_fu_215_p3 );

    SC_METHOD(thread_tmp_162_fu_285_p2);
    sensitive << ( tmp_159_reg_348 );
    sensitive << ( c_k_cast4_fu_227_p1 );

    SC_METHOD(thread_tmp_163_fu_290_p1);
    sensitive << ( tmp_162_fu_285_p2 );

    SC_METHOD(thread_tmp_170_fu_199_p1);
    sensitive << ( k_1_reg_101 );

    SC_METHOD(thread_tmp_fu_153_p3);
    sensitive << ( k_reg_79 );

    SC_METHOD(thread_tmp_s_fu_177_p2);
    sensitive << ( tmp_reg_303 );
    sensitive << ( b_k_cast8_fu_161_p1 );

    SC_METHOD(thread_x_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_158_fu_182_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_161_fu_280_p1 );

    SC_METHOD(thread_x_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_y_address0);
    sensitive << ( tmp_158_reg_316 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( y_addr_3_reg_371 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_163_fu_290_p1 );

    SC_METHOD(thread_y_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_y_d0);
    sensitive << ( x_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_fu_134_p2 );

    SC_METHOD(thread_y_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_141_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_165_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_187_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_203_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_231_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "f_sum_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_address0, "(port)x_address0");
    sc_trace(mVcdFile, x_ce0, "(port)x_ce0");
    sc_trace(mVcdFile, x_q0, "(port)x_q0");
    sc_trace(mVcdFile, y_address0, "(port)y_address0");
    sc_trace(mVcdFile, y_ce0, "(port)y_ce0");
    sc_trace(mVcdFile, y_we0, "(port)y_we0");
    sc_trace(mVcdFile, y_d0, "(port)y_d0");
    sc_trace(mVcdFile, y_q0, "(port)y_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, k_25_fu_147_p2, "k_25_fu_147_p2");
    sc_trace(mVcdFile, k_25_reg_298, "k_25_reg_298");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_153_p3, "tmp_fu_153_p3");
    sc_trace(mVcdFile, tmp_reg_303, "tmp_reg_303");
    sc_trace(mVcdFile, exitcond4_fu_141_p2, "exitcond4_fu_141_p2");
    sc_trace(mVcdFile, b_k_10_fu_171_p2, "b_k_10_fu_171_p2");
    sc_trace(mVcdFile, b_k_10_reg_311, "b_k_10_reg_311");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_158_fu_182_p1, "tmp_158_fu_182_p1");
    sc_trace(mVcdFile, tmp_158_reg_316, "tmp_158_reg_316");
    sc_trace(mVcdFile, exitcond3_fu_165_p2, "exitcond3_fu_165_p2");
    sc_trace(mVcdFile, k_26_fu_193_p2, "k_26_fu_193_p2");
    sc_trace(mVcdFile, k_26_reg_329, "k_26_reg_329");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_170_fu_199_p1, "tmp_170_fu_199_p1");
    sc_trace(mVcdFile, tmp_170_reg_334, "tmp_170_reg_334");
    sc_trace(mVcdFile, exitcond2_fu_187_p2, "exitcond2_fu_187_p2");
    sc_trace(mVcdFile, b_k_11_fu_209_p2, "b_k_11_fu_209_p2");
    sc_trace(mVcdFile, b_k_11_reg_343, "b_k_11_reg_343");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_159_fu_215_p3, "tmp_159_fu_215_p3");
    sc_trace(mVcdFile, tmp_159_reg_348, "tmp_159_reg_348");
    sc_trace(mVcdFile, exitcond1_fu_203_p2, "exitcond1_fu_203_p2");
    sc_trace(mVcdFile, tmp_162_cast_fu_223_p1, "tmp_162_cast_fu_223_p1");
    sc_trace(mVcdFile, tmp_162_cast_reg_353, "tmp_162_cast_reg_353");
    sc_trace(mVcdFile, c_k_1_fu_237_p2, "c_k_1_fu_237_p2");
    sc_trace(mVcdFile, c_k_1_reg_361, "c_k_1_reg_361");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond_fu_231_p2, "exitcond_fu_231_p2");
    sc_trace(mVcdFile, y_addr_3_reg_371, "y_addr_3_reg_371");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, k_reg_79, "k_reg_79");
    sc_trace(mVcdFile, b_k_reg_90, "b_k_reg_90");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, k_1_reg_101, "k_1_reg_101");
    sc_trace(mVcdFile, b_k_1_reg_112, "b_k_1_reg_112");
    sc_trace(mVcdFile, c_k_reg_123, "c_k_reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_161_fu_280_p1, "tmp_161_fu_280_p1");
    sc_trace(mVcdFile, tmp_163_fu_290_p1, "tmp_163_fu_290_p1");
    sc_trace(mVcdFile, grp_fu_134_p2, "grp_fu_134_p2");
    sc_trace(mVcdFile, b_k_cast8_fu_161_p1, "b_k_cast8_fu_161_p1");
    sc_trace(mVcdFile, tmp_s_fu_177_p2, "tmp_s_fu_177_p2");
    sc_trace(mVcdFile, tmp1_fu_243_p4, "tmp1_fu_243_p4");
    sc_trace(mVcdFile, c_k_cast4_fu_227_p1, "c_k_cast4_fu_227_p1");
    sc_trace(mVcdFile, tmp3_fu_255_p2, "tmp3_fu_255_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_261_p1, "tmp3_cast_fu_261_p1");
    sc_trace(mVcdFile, tmp2_fu_265_p2, "tmp2_fu_265_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_270_p1, "tmp2_cast_fu_270_p1");
    sc_trace(mVcdFile, tmp1_cast_fu_251_p1, "tmp1_cast_fu_251_p1");
    sc_trace(mVcdFile, tmp_160_fu_274_p2, "tmp_160_fu_274_p2");
    sc_trace(mVcdFile, tmp_162_fu_285_p2, "tmp_162_fu_285_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

f_sum::~f_sum() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenetSynthMatlab_bkb_U11;
}

void f_sum::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void f_sum::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_231_p2.read(), ap_const_lv1_1))) {
        b_k_1_reg_112 = b_k_11_reg_343.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_fu_187_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        b_k_1_reg_112 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_141_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        b_k_reg_90 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        b_k_reg_90 = b_k_10_reg_311.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        c_k_reg_123 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        c_k_reg_123 = c_k_1_reg_361.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_141_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        k_1_reg_101 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        k_1_reg_101 = k_26_reg_329.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_165_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        k_reg_79 = k_25_reg_298.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_reg_79 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        b_k_10_reg_311 = b_k_10_fu_171_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        b_k_11_reg_343 = b_k_11_fu_209_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c_k_1_reg_361 = c_k_1_fu_237_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_25_reg_298 = k_25_fu_147_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_26_reg_329 = k_26_fu_193_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_165_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_158_reg_316 = tmp_158_fu_182_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        tmp_159_reg_348 = tmp_159_fu_215_p3.read();
        tmp_162_cast_reg_353 = tmp_162_cast_fu_223_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_fu_187_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        tmp_170_reg_334 = tmp_170_fu_199_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_141_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_reg_303 = tmp_fu_153_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_231_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        y_addr_3_reg_371 =  (sc_lv<7>) (tmp_163_fu_290_p1.read());
    }
}

void f_sum::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void f_sum::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void f_sum::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void f_sum::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void f_sum::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void f_sum::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void f_sum::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void f_sum::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void f_sum::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void f_sum::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond2_fu_187_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void f_sum::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void f_sum::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_187_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void f_sum::thread_b_k_10_fu_171_p2() {
    b_k_10_fu_171_p2 = (!b_k_reg_90.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(b_k_reg_90.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void f_sum::thread_b_k_11_fu_209_p2() {
    b_k_11_fu_209_p2 = (!b_k_1_reg_112.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(b_k_1_reg_112.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void f_sum::thread_b_k_cast8_fu_161_p1() {
    b_k_cast8_fu_161_p1 = esl_zext<7,5>(b_k_reg_90.read());
}

void f_sum::thread_c_k_1_fu_237_p2() {
    c_k_1_fu_237_p2 = (!c_k_reg_123.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(c_k_reg_123.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void f_sum::thread_c_k_cast4_fu_227_p1() {
    c_k_cast4_fu_227_p1 = esl_zext<7,5>(c_k_reg_123.read());
}

void f_sum::thread_exitcond1_fu_203_p2() {
    exitcond1_fu_203_p2 = (!b_k_1_reg_112.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(b_k_1_reg_112.read() == ap_const_lv3_5);
}

void f_sum::thread_exitcond2_fu_187_p2() {
    exitcond2_fu_187_p2 = (!k_1_reg_101.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_101.read() == ap_const_lv3_4);
}

void f_sum::thread_exitcond3_fu_165_p2() {
    exitcond3_fu_165_p2 = (!b_k_reg_90.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(b_k_reg_90.read() == ap_const_lv5_10);
}

void f_sum::thread_exitcond4_fu_141_p2() {
    exitcond4_fu_141_p2 = (!k_reg_79.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_79.read() == ap_const_lv3_5);
}

void f_sum::thread_exitcond_fu_231_p2() {
    exitcond_fu_231_p2 = (!c_k_reg_123.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(c_k_reg_123.read() == ap_const_lv5_10);
}

void f_sum::thread_k_25_fu_147_p2() {
    k_25_fu_147_p2 = (!k_reg_79.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_reg_79.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void f_sum::thread_k_26_fu_193_p2() {
    k_26_fu_193_p2 = (!k_1_reg_101.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_1_reg_101.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void f_sum::thread_tmp1_cast_fu_251_p1() {
    tmp1_cast_fu_251_p1 = esl_zext<9,8>(tmp1_fu_243_p4.read());
}

void f_sum::thread_tmp1_fu_243_p4() {
    tmp1_fu_243_p4 = esl_concat<4,4>(esl_concat<2,2>(tmp_170_reg_334.read(), tmp_170_reg_334.read()), ap_const_lv4_0);
}

void f_sum::thread_tmp2_cast_fu_270_p1() {
    tmp2_cast_fu_270_p1 = esl_zext<9,8>(tmp2_fu_265_p2.read());
}

void f_sum::thread_tmp2_fu_265_p2() {
    tmp2_fu_265_p2 = (!tmp3_cast_fu_261_p1.read().is_01() || !tmp_162_cast_reg_353.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp3_cast_fu_261_p1.read()) + sc_biguint<8>(tmp_162_cast_reg_353.read()));
}

void f_sum::thread_tmp3_cast_fu_261_p1() {
    tmp3_cast_fu_261_p1 = esl_zext<8,7>(tmp3_fu_255_p2.read());
}

void f_sum::thread_tmp3_fu_255_p2() {
    tmp3_fu_255_p2 = (!c_k_cast4_fu_227_p1.read().is_01() || !ap_const_lv7_50.is_01())? sc_lv<7>(): (sc_biguint<7>(c_k_cast4_fu_227_p1.read()) + sc_bigint<7>(ap_const_lv7_50));
}

void f_sum::thread_tmp_158_fu_182_p1() {
    tmp_158_fu_182_p1 = esl_zext<64,7>(tmp_s_fu_177_p2.read());
}

void f_sum::thread_tmp_159_fu_215_p3() {
    tmp_159_fu_215_p3 = esl_concat<3,4>(b_k_1_reg_112.read(), ap_const_lv4_0);
}

void f_sum::thread_tmp_160_fu_274_p2() {
    tmp_160_fu_274_p2 = (!tmp2_cast_fu_270_p1.read().is_01() || !tmp1_cast_fu_251_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp2_cast_fu_270_p1.read()) + sc_biguint<9>(tmp1_cast_fu_251_p1.read()));
}

void f_sum::thread_tmp_161_fu_280_p1() {
    tmp_161_fu_280_p1 = esl_zext<64,9>(tmp_160_fu_274_p2.read());
}

void f_sum::thread_tmp_162_cast_fu_223_p1() {
    tmp_162_cast_fu_223_p1 = esl_zext<8,7>(tmp_159_fu_215_p3.read());
}

void f_sum::thread_tmp_162_fu_285_p2() {
    tmp_162_fu_285_p2 = (!tmp_159_reg_348.read().is_01() || !c_k_cast4_fu_227_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_159_reg_348.read()) + sc_biguint<7>(c_k_cast4_fu_227_p1.read()));
}

void f_sum::thread_tmp_163_fu_290_p1() {
    tmp_163_fu_290_p1 = esl_zext<64,7>(tmp_162_fu_285_p2.read());
}

void f_sum::thread_tmp_170_fu_199_p1() {
    tmp_170_fu_199_p1 = k_1_reg_101.read().range(2-1, 0);
}

void f_sum::thread_tmp_fu_153_p3() {
    tmp_fu_153_p3 = esl_concat<3,4>(k_reg_79.read(), ap_const_lv4_0);
}

void f_sum::thread_tmp_s_fu_177_p2() {
    tmp_s_fu_177_p2 = (!tmp_reg_303.read().is_01() || !b_k_cast8_fu_161_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_reg_303.read()) + sc_biguint<7>(b_k_cast8_fu_161_p1.read()));
}

void f_sum::thread_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_address0 =  (sc_lv<9>) (tmp_161_fu_280_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_address0 =  (sc_lv<9>) (tmp_158_fu_182_p1.read());
    } else {
        x_address0 = "XXXXXXXXX";
    }
}

void f_sum::thread_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        x_ce0 = ap_const_logic_1;
    } else {
        x_ce0 = ap_const_logic_0;
    }
}

void f_sum::thread_y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        y_address0 = y_addr_3_reg_371.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        y_address0 =  (sc_lv<7>) (tmp_163_fu_290_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_address0 =  (sc_lv<7>) (tmp_158_reg_316.read());
    } else {
        y_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void f_sum::thread_y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        y_ce0 = ap_const_logic_1;
    } else {
        y_ce0 = ap_const_logic_0;
    }
}

void f_sum::thread_y_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        y_d0 = grp_fu_134_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_d0 = x_q0.read();
    } else {
        y_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void f_sum::thread_y_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        y_we0 = ap_const_logic_1;
    } else {
        y_we0 = ap_const_logic_0;
    }
}

void f_sum::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_141_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond3_fu_165_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(exitcond2_fu_187_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond_fu_231_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

