// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __lenetSynthMatlab_dEe_H__
#define __lenetSynthMatlab_dEe_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct lenetSynthMatlab_dEe_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 150;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(lenetSynthMatlab_dEe_ram) {
        ram[0] = "0b10111100001001011010001001010111";
        ram[1] = "0b00111011101111011101110001000010";
        ram[2] = "0b00111101100010000010011001000010";
        ram[3] = "0b10111100101001100011010000111111";
        ram[4] = "0b10111100010111010001111100010100";
        ram[5] = "0b00111101000111011011011001001111";
        ram[6] = "0b00111100001110000000101110110100";
        ram[7] = "0b00111011010111110000111100011101";
        ram[8] = "0b00111110000000101011100100000011";
        ram[9] = "0b00111001101000111011100001011001";
        ram[10] = "0b10111100100100011100100000100110";
        ram[11] = "0b00111101000100001001111110001001";
        ram[12] = "0b00111100100110010111101110000001";
        ram[13] = "0b10111100100001100111011001010000";
        ram[14] = "0b00111110000010100110110101001011";
        ram[15] = "0b10111011011111001010101111100011";
        ram[16] = "0b10111100011101000101110011101110";
        ram[17] = "0b00111101000000100000000101010000";
        ram[18] = "0b00111100100110010110010100111011";
        ram[19] = "0b10111011111001110110100000011000";
        ram[20] = "0b00111101110011100010101100010010";
        ram[21] = "0b10111011100111100001111100000111";
        ram[22] = "0b10111100110001010110100111111101";
        ram[23] = "0b00111010110000101000010000000101";
        ram[24] = "0b00111101011010111111110110000101";
        ram[25] = "0b10111100100100001101111101100001";
        ram[26] = "0b00111011101001010110100110010101";
        ram[27] = "0b00111100100111100011100110011000";
        ram[28] = "0b00111011000100110001111001100101";
        ram[29] = "0b00111100100000100000111110001010";
        ram[30] = "0b10111010110100100011100101111100";
        ram[31] = "0b10111011000101101010101100001101";
        ram[32] = "0b00111110010110010011111000001111";
        ram[33] = "0b10111100100000101011100001110001";
        ram[34] = "0b10111100100001010010000101011111";
        ram[35] = "0b00111101001000001111100111001001";
        ram[36] = "0b10111100100001010011010011011110";
        ram[37] = "0b10111100001110110001100110101100";
        ram[38] = "0b00111110101100101010010100100110";
        ram[39] = "0b00111100010100010010101101111110";
        ram[40] = "0b10111010100010110010001000101110";
        ram[41] = "0b00111100111010001001001000011101";
        ram[42] = "0b00111010111111111001101101001011";
        ram[43] = "0b10111010001010001000010101110000";
        ram[44] = "0b00111110101101110101110001011111";
        ram[45] = "0b00111100010110010101101100010000";
        ram[46] = "0b10111100110001100011010101100111";
        ram[47] = "0b10111011111001110101010000110001";
        ram[48] = "0b00111100111010101001001101010001";
        ram[49] = "0b10111100111100000101001000100001";
        ram[50] = "0b00111110011010000011000010100000";
        ram[51] = "0b10111011011111101101111000010001";
        ram[52] = "0b10111100010000010111100001101000";
        ram[53] = "0b00111011100111010111111111010101";
        ram[54] = "0b00111101100011010101100010010101";
        ram[55] = "0b10111100010110010101111101100101";
        ram[56] = "0b00111101101000000000001100111110";
        ram[57] = "0b10111100000100011100000010110001";
        ram[58] = "0b00111100001011111111110011100101";
        ram[59] = "0b00111100110011010110100000011110";
        ram[60] = "0b10111101000110100100100110101110";
        ram[61] = "0b00111011100001110100100111100010";
        ram[62] = "0b00111110011011011110011100100001";
        ram[63] = "0b00111100110000111010010110101110";
        ram[64] = "0b10111011100001011101011001011011";
        ram[65] = "0b00111100100110101001111010111010";
        ram[66] = "0b10111101000101100100110000110001";
        ram[67] = "0b10111011000011001010001100001100";
        ram[68] = "0b00111110110011001110000000010100";
        ram[69] = "0b10111010100010001011010101001000";
        ram[70] = "0b10111101001001100010011100110110";
        ram[71] = "0b00111010111110010111011101010000";
        ram[72] = "0b10111100101000000110011100010011";
        ram[73] = "0b10111011101001010000101010110010";
        ram[74] = "0b00111110101010001110110000110100";
        ram[75] = "0b10111100001110011000100010001111";
        ram[76] = "0b10111100101111100101111101010111";
        ram[77] = "0b10111100011101100010111000101110";
        ram[78] = "0b00111100101010011001110011010000";
        ram[79] = "0b10111011100001100011100111110001";
        ram[80] = "0b00111110001100111010010111110110";
        ram[81] = "0b10111100100111101011011100000011";
        ram[82] = "0b00111100011011011110011001111001";
        ram[83] = "0b10111100100000110001001011001101";
        ram[84] = "0b00111101100101001001011000111101";
        ram[85] = "0b00111100111100010100100110011100";
        ram[86] = "0b00111101110100111110101011001010";
        ram[87] = "0b10111100011000110110101111000111";
        ram[88] = "0b00111100100101011011000111110001";
        ram[89] = "0b10111100100101011100101010011100";
        ram[90] = "0b10111100110011010101100000000000";
        ram[91] = "0b00111100010101100000101111101111";
        ram[92] = "0b00111101100101101001101001110001";
        ram[93] = "0b00111011011101111100110000101001";
        ram[94] = "0b10111100010100100011001100101110";
        ram[95] = "0b00111100001010011001110110010001";
        ram[96] = "0b10111101001111011110000011000110";
        ram[97] = "0b00111011111011110110000100010000";
        ram[98] = "0b00111110010001010100101010110100";
        ram[99] = "0b00111011001010100110100110100110";
        ram[100] = "0b00111010100001101100000000101100";
        ram[101] = "0b10111100100111101001001110000011";
        ram[102] = "0b10111011010011101010101001110001";
        ram[103] = "0b10111011001110000011011000010001";
        ram[104] = "0b00111110000000100101101001101111";
        ram[105] = "0b00111011101101111101010010011011";
        ram[106] = "0b00111100100110101011101111011111";
        ram[107] = "0b10111100010011101010010110101100";
        ram[108] = "0b00111101001000011110110100010000";
        ram[109] = "0b00111100101111000000011100100001";
        ram[110] = "0b00111101100101001001010001101111";
        ram[111] = "0b10111100001111011101101001110011";
        ram[112] = "0b00111100101010100000110100000110";
        ram[113] = "0b10111100100010000101011101010001";
        ram[114] = "0b00111101100110011010010010001111";
        ram[115] = "0b00111101000101101110110011010011";
        ram[116] = "0b00111100111100101011000100111011";
        ram[117] = "0b10111011110101001100110110101111";
        ram[118] = "0b00111100111111001000010110101111";
        ram[119] = "0b10111011111010001111010010101001";
        ram[120] = "0b10111100111101011010011001010001";
        ram[121] = "0b00111011011111100111101000000011";
        ram[122] = "0b10111101000111101011101101100101";
        ram[123] = "0b10111011101010011001000011000000";
        ram[124] = "0b00111100110011101111101111101101";
        ram[125] = "0b10111011111101110000010010001110";
        ram[126] = "0b10111100010111111011011011101000";
        ram[127] = "0b10111100010110101111100000101100";
        ram[128] = "0b10111100000110010001000011010101";
        ram[129] = "0b00111100000101100000111001001111";
        ram[130] = "0b00111101001000000000101000101110";
        ram[131] = "0b10111100110110001101001010110001";
        ram[132] = "0b00111001110001100001111011111110";
        ram[133] = "0b00111100001001011001001111101101";
        ram[134] = "0b00111100100010010000011011111001";
        ram[135] = "0b00111100100101011110110100000101";
        ram[136] = "0b00111101000000110000010100000110";
        ram[137] = "0b10111100011100100110100111010111";
        ram[138] = "0b00111101010010001011010111101111";
        ram[139] = "0b00111101001000100100100001111110";
        ram[140] = "0b10111101001000010111011110011100";
        ram[141] = "0b00111100001110101011110110011010";
        ram[142] = "0b00111101000010100111001000100101";
        ram[143] = "0b10111011100000001000110000110010";
        ram[144] = "0b00111101010001110101100100111100";
        ram[145] = "0b00111010100001000101101101111001";
        ram[146] = "0b10111101001110011000110100000010";
        ram[147] = "0b00111100100100101110101111001010";
        ram[148] = "0b00111100010110011100100011111010";
        ram[149] = "0b10111100000100100001101010000101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(lenetSynthMatlab_dEe) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 150;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


lenetSynthMatlab_dEe_ram* meminst;


SC_CTOR(lenetSynthMatlab_dEe) {
meminst = new lenetSynthMatlab_dEe_ram("lenetSynthMatlab_dEe_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~lenetSynthMatlab_dEe() {
    delete meminst;
}


};//endmodule
#endif
